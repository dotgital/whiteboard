{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/applications-admin/applications-admin.component.html","src/app/applications-dashboard/applications-dashboard.component.html","src/app/applications-dashboard/message/message.component.html","src/app/applications-stats/applications-stats.component.html","src/app/applications/applications.component.html","src/app/applications/create-application/create-application.component.html","src/app/applications/manage-applications/manage-applications.component.html","src/app/dashboard/dashboard.component.html","src/app/forgot-password/forgot-password.component.html","src/app/form-list/form-list.component.html","src/app/form/form/form.component.html","src/app/login/login.component.html","src/app/navigation/navigation.component.html","src/app/register/register.component.html","src/app/users/create-user/create-user.component.html","src/app/users/users.component.html","src/app/whiteboard/whiteboard.component.html","node_modules/tslib/tslib.es6.js","src/app/_helpers/error.interceptor.ts","src/app/_helpers/jwt.interceptor.ts","src/app/app-routing.module.ts","src/app/app.component.scss","src/app/app.component.ts","src/app/app.module.ts","src/app/applications-admin/applications-admin.component.scss","src/app/applications-admin/applications-admin.component.ts","src/app/applications-dashboard/applications-dashboard.component.scss","src/app/applications-dashboard/applications-dashboard.component.ts","src/app/applications-dashboard/message/message.component.scss","src/app/applications-dashboard/message/message.component.ts","src/app/applications-stats/applications-stats.component.scss","src/app/applications-stats/applications-stats.component.ts","src/app/applications/applications.component.scss","src/app/applications/applications.component.ts","src/app/applications/create-application/create-application.component.scss","src/app/applications/create-application/create-application.component.ts","src/app/applications/manage-applications/manage-applications.component.scss","src/app/applications/manage-applications/manage-applications.component.ts","src/app/auth.service.ts","src/app/core/input.ts","src/app/dashboard/dashboard.component.scss","src/app/dashboard/dashboard.component.ts","src/app/data.service.ts","src/app/forgot-password/forgot-password.component.scss","src/app/forgot-password/forgot-password.component.ts","src/app/form-list/form-list.component.scss","src/app/form-list/form-list.component.ts","src/app/form/form/form.component.scss","src/app/form/form/form.component.ts","src/app/graphql.module.ts","src/app/login/login.component.scss","src/app/login/login.component.ts","src/app/models/user.ts","src/app/navigation/navigation.component.scss","src/app/navigation/navigation.component.ts","src/app/register/register.component.scss","src/app/register/register.component.ts","src/app/services/auth-guard.service.ts","src/app/services/auth.service.ts","src/app/services/socket.service.ts","src/app/users/create-user/create-user.component.scss","src/app/users/create-user/create-user.component.ts","src/app/users/users.component.scss","src/app/users/users.component.ts","src/app/whiteboard/whiteboard.component.scss","src/app/whiteboard/whiteboard.component.ts","src/environments/environment.ts","src/main.ts","ws (ignored)"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<router-outlet></router-outlet>\\n\"","export default \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\" class=\\\"loading-top\\\" color=\\\"warn\\\"></mat-progress-bar>\\n<div class=\\\"content\\\">\\n    <mat-card style=\\\"padding: 5px 10px; margin-bottom: 10px; border-radius: 0px;\\\" class=\\\"mat-elevation-z1\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start stretch\\\" fxLayoutGap=\\\"10px\\\">\\n            <div fxFlex>\\n              <mat-form-field appearance=\\\"outline\\\"  class=\\\"no-padding\\\">\\n                <mat-label>Search</mat-label>\\n                <input matInput class=\\\"form-control\\\" [(ngModel)]=\\\"search\\\" \\n                type=\\\"text\\\" name=\\\"userQuestion\\\" id=\\\"userQuestions\\\"\\n                (ngModelChange)=\\\"this.searchUpdate.next($event)\\\" (keyup)=\\\"keyUpLoading()\\\" >\\n                <button mat-button *ngIf=\\\"search\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"this.searchUpdate.next('')\\\">\\n                  <mat-icon>close</mat-icon>\\n                </button>\\n              </mat-form-field>\\n            </div>\\n            <div>\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"no-padding\\\">\\n                  <mat-label>Agent</mat-label>\\n                  <mat-select placeholder=\\\"Agent\\\" name=\\\"item\\\" [value]=\\\"agentSelected\\\" (selectionChange)=\\\"filteByAgent($event.value)\\\">\\n                      <mat-option>Any</mat-option>\\n                      <mat-option *ngFor=\\\"let item of agents\\\" [value]=\\\"item.id\\\">\\n                          {{item.fullName}}\\n                      </mat-option>\\n                  </mat-select>\\n              </mat-form-field>\\n            </div>\\n            <div>\\n              <mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\" value=\\\"Leasing\\\" class=\\\"full-width margin-botton\\\">\\n                <mat-button-toggle value=\\\"Leasing\\\" aria-label=\\\"Text align center\\\" (click)=\\\"displayCol('Leasing')\\\">\\n                  Leasing\\n                </mat-button-toggle>\\n                <mat-button-toggle value=\\\"Listing\\\" aria-label=\\\"Text align center\\\" (click)=\\\"displayCol('Listing')\\\">\\n                  Listing\\n                </mat-button-toggle>\\n                <mat-button-toggle value=\\\"Buying\\\" aria-label=\\\"Text align center\\\" (click)=\\\"displayCol('Buying')\\\">\\n                  Buying\\n                </mat-button-toggle>\\n              </mat-button-toggle-group>\\n            </div>\\n          </div>\\n    </mat-card>\\n\\n    <div class=\\\"mat-elevation-z2\\\">\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n    \\n          <ng-container matColumnDef=\\\"address\\\">\\n            <th mat-header-cell *matHeaderCellDef> Address </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 15%;\\\">\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                  {{row.address}}\\n              </div>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"agent\\\">\\n            <th mat-header-cell *matHeaderCellDef> Agent </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 15%;\\\">\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                  {{row.agent.fullName}}\\n              </div>\\n            </td>\\n          </ng-container>\\n    \\n          <ng-container matColumnDef=\\\"createdAt\\\">\\n            <th mat-header-cell *matHeaderCellDef> Date </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                  {{row.createdAt | date:'shortDate' }}\\n              </div>\\n            </td>\\n          </ng-container>\\n    \\n          <ng-container matColumnDef=\\\"applicationType\\\">\\n            <th mat-header-cell *matHeaderCellDef> Type </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                {{row.applicationType}}\\n              </div>\\n            </td>\\n          </ng-container>\\n    \\n          <ng-container matColumnDef=\\\"price\\\">\\n              <th mat-header-cell *matHeaderCellDef> Price </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                    ${{row.price | number }}\\n                </div>\\n              </td>\\n            </ng-container>\\n    \\n            <ng-container matColumnDef=\\\"offerOut\\\">\\n              <th mat-header-cell *matHeaderCellDef>Offer Out </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n                  <mat-checkbox [(ngModel)]=\\\"row.offerOut\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'offerOut')\\\"></mat-checkbox>\\n              </td>\\n            </ng-container>\\n    \\n            <ng-container matColumnDef=\\\"listingAgreement\\\">\\n              <th mat-header-cell *matHeaderCellDef>Listing <br> Agreement </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n                <mat-checkbox [(ngModel)]=\\\"row.listingAgreement\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'listingAgreement')\\\"></mat-checkbox>\\n              </td>\\n            </ng-container>\\n    \\n            <ng-container matColumnDef=\\\"offerExecuted\\\">\\n              <th mat-header-cell *matHeaderCellDef>Offer <br> Executed </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n                  <mat-checkbox [(ngModel)]=\\\"row.offerExecuted\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'offerExecuted')\\\"></mat-checkbox>\\n              </td>\\n            </ng-container>\\n    \\n            <ng-container matColumnDef=\\\"closed\\\">\\n              <th mat-header-cell *matHeaderCellDef>Closed </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n                <mat-checkbox [(ngModel)]=\\\"row.closed\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'closed')\\\"></mat-checkbox>\\n              </td>\\n            </ng-container>\\n    \\n          <ng-container matColumnDef=\\\"moneyIn\\\">\\n            <th mat-header-cell *matHeaderCellDef>Money In </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n                <mat-checkbox [(ngModel)]=\\\"row.moneyIn\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'moneyIn')\\\"></mat-checkbox>\\n            </td>\\n          </ng-container>\\n    \\n          <ng-container matColumnDef=\\\"approved\\\">\\n            <th mat-header-cell *matHeaderCellDef>Approved </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n              <mat-checkbox [(ngModel)]=\\\"row.approved\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'approved')\\\"></mat-checkbox>\\n            </td>\\n          </ng-container>\\n    \\n            <ng-container matColumnDef=\\\"denied\\\">\\n                <th mat-header-cell *matHeaderCellDef>Denied </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n                  <mat-checkbox [(ngModel)]=\\\"row.denied\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'denied')\\\"></mat-checkbox>\\n                </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"invoiceOut\\\">\\n                <th mat-header-cell *matHeaderCellDef>Invoice Out </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n                  <mat-checkbox [(ngModel)]=\\\"row.invoiceOut\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'invoiceOut')\\\"></mat-checkbox>\\n                </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"invoicePaid\\\">\\n                <th mat-header-cell *matHeaderCellDef>Invoice Paid </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n                  <mat-checkbox [(ngModel)]=\\\"row.invoicePaid\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'invoicePaid')\\\"></mat-checkbox>\\n                </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"paid\\\">\\n                <th mat-header-cell *matHeaderCellDef>Paid </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n                  <mat-checkbox [(ngModel)]=\\\"row.paid\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'paid')\\\"></mat-checkbox>\\n                </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"edit\\\">\\n                <th mat-header-cell *matHeaderCellDef> </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 5%;\\\">\\n                  <button mat-icon-button *ngIf=\\\"!editing.includes(row.id)\\\" (click)=\\\"edit(row.id)\\\" ><mat-icon>edit</mat-icon></button>\\n                  <button mat-icon-button *ngIf=\\\"editing.includes(row.id)\\\" (click)=\\\"save(row.id)\\\"><mat-icon>save</mat-icon></button>\\n                  <!-- <button mat-icon-button *ngIf=\\\"editing.includes(row.id)\\\" (click)=\\\"edit(row.id)\\\"><mat-icon>delete</mat-icon></button> -->\\n                </td>\\n              </ng-container>\\n    \\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n          </tr>\\n        </table>\\n    \\n        <mat-paginator [length]=\\\"totalPages\\\"\\n                  [pageSize]=\\\"10\\\"\\n                  [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"\\n                  (page)=\\\"paginator($event)\\\">\\n        </mat-paginator>\\n      </div>\\n    \\n    </div>\"","export default \"<div class=\\\"full-screen\\\">\\n  <content id=\\\"full-screen\\\">\\n  <button mat-mini-fab (click)=\\\"openFullScreen()\\\"><mat-icon>{{ !fullScreen ? 'fullscreen' : 'fullscreen_exit'}}</mat-icon></button>\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-evenly stretch\\\" class=\\\"wrapper\\\">\\n    <ng-container *ngFor=\\\"let item of apps\\\">\\n      <mat-card \\n      fxFlex=\\\"0 1 calc(25% - 10px)\\\"\\n      fxFlex.lt-lg=\\\"0 1 calc(33.3% - 10px)\\\"\\n      fxFlex.lt-md=\\\"0 1 calc(50% - 10px)\\\"\\n      fxFlex.lt-sm=\\\"0 1 calc(100% - 10px)\\\">\\n        <div\\n        gdAreas=\\\"avatar content\\\"\\n        gdGap=\\\"5px\\\"\\n        gdRows=\\\"auto\\\"\\n        gdColumns=\\\"55px auto\\\">\\n        <div gdArea=\\\"avatar\\\" class=\\\"avatar-container\\\">\\n          <img class=\\\"avatar_smm\\\" src=\\\"https://backend.apartmentsource.com/{{item.agent.avatar['0'].url}}\\\" *ngIf=\\\"item.agent.avatar['0'] && item.agent.avatar['0'].url\\\" />\\n          <img class=\\\"avatar_smm\\\" src=\\\"'../../../../assets/avatar.svg\\\" *ngIf=\\\"!item.agent.avatar['0']\\\" />\\n          <mat-icon *ngIf=\\\"item.agent.id == topAgent\\\" class=\\\"top-agent-star\\\">grade</mat-icon>\\n        </div>\\n        <div gdArea=\\\"content\\\">\\n          <h4 class=\\\"address\\\">{{ item.address }}</h4><span class=\\\"create-by\\\"> {{ item.agent.fullName }} - {{ item.createdAt | date:\\\"MM/dd/yyyy\\\" }}</span> <br />\\n\\n          <div class=\\\"status-container\\\">\\n            <span class=\\\"status-{{ item.offerOut }} apps-status\\\">Offer Out <mat-icon class=\\\"material-icons md-24\\\">done</mat-icon></span>\\n            <span class=\\\"status-{{ item.listingAgreement }} apps-status\\\">List Agr <mat-icon class=\\\"material-icons md-24\\\">done</mat-icon></span>\\n            <span class=\\\"status-{{ item.offerExecuted }} apps-status\\\">Offer Exec <mat-icon class=\\\"material-icons md-24\\\">done</mat-icon></span>\\n            <span class=\\\"status-{{ item.closed }} apps-status\\\">Closed <mat-icon class=\\\"material-icons md-24\\\">done</mat-icon></span>\\n            <span class=\\\"status-{{ item.moneyIn }} apps-status\\\">Money In <mat-icon class=\\\"material-icons md-24\\\">done</mat-icon></span>\\n            <span class=\\\"status-{{ item.approved }} apps-status\\\">Approved <mat-icon class=\\\"material-icons md-24\\\">done</mat-icon></span>\\n            <span class=\\\"status-{{ item.denied }} apps-status\\\">Denied <mat-icon class=\\\"material-icons md-24\\\">done</mat-icon></span>\\n            <span class=\\\"status-{{ item.invoiceOut }} apps-status\\\">Invoice Out <mat-icon class=\\\"material-icons md-24\\\">done</mat-icon></span>\\n            <span class=\\\"status-{{ item.invoicePaid }} apps-status\\\">Invoice Paid <mat-icon class=\\\"material-icons md-24\\\">done</mat-icon></span>\\n          </div>\\n        </div>\\n      </div>\\n      </mat-card>\\n    </ng-container>\\n  </div>\\n  <div class=\\\"message-space\\\"></div>\\n  <mat-toolbar class=\\\"whiteboard-message apps-item mat-elevation-z3\\\">\\n    <!-- <div class=\\\"field-container\\\" *ngIf=\\\"loggedUser && loggedUser.isAdmin\\\" >\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Message</mat-label>\\n          <input matInput [(ngModel)]=\\\"message\\\">\\n        </mat-form-field>\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"saveMessage(message)\\\" >\\n          <mat-icon>save</mat-icon>\\n        </button>\\n    </div> -->\\n    <span class=\\\"whiteboard-message-text\\\">{{message}}\\n      <button mat-icon-button (click)=\\\"editMessage()\\\" *ngIf=\\\"user.user.role.name == 'Administrator'\\\">\\n        <mat-icon>edit</mat-icon>\\n      </button>\\n    </span>\\n  </mat-toolbar>\\n</content>\\n</div>\\n\\n\"","export default \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\" class=\\\"modal-loading\\\" color=\\\"warn\\\"></mat-progress-bar>\\n<form (ngSubmit)=\\\"onSubmit()\\\" #form=\\\"ngForm\\\">\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n        <mat-label>Message</mat-label>\\n        <input matInput [(ngModel)]=\\\"message\\\" name=\\\"message\\\">\\n      </mat-form-field>\\n    <button mat-flat-button color=\\\"primary\\\">Save</button>\\n    <a mat-stroked-button (click)=\\\"onNoClick()\\\" color=\\\"primary\\\" style=\\\"margin-left: 10px;\\\">Cancel</a>\\n</form>\\n\"","export default \"<div class=\\\"content\\\">\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-evenly stretch\\\">\\n    <ng-container *ngFor=\\\"let item of stats\\\">\\n        <mat-card class=\\\"mat-elevation-z4 margin-bottom\\\"\\n        fxFlex.lg=\\\"0 1 calc(33.3% - 10px)\\\"\\n        fxFlex.md=\\\"0 1 calc(50% - 10px)\\\"\\n        fxFlex.sm=\\\"0 1 calc(100% - 10px)\\\">\\n            <div>\\n                <img class=\\\"avatar_lg\\\" src=\\\"https://backend.apartmentsource.com{{item.avatar}}\\\" *ngIf=\\\"item.avatar\\\" />\\n                <img class=\\\"avatar_lg\\\" src=\\\"'../../../../assets/avatar.svg\\\" *ngIf=\\\"!item.avatar\\\" />\\n            </div>\\n            <div class=\\\"statistics\\\">\\n            <h3>{{item.createBy}}</h3>\\n            <span> Applications: {{item.applications}} </span> <br/>\\n            <span>Money In: {{item.moneyIn}}</span><br/>\\n            <span>Approved: {{item.approved}}</span><br/>\\n            <span>Invoice Out: {{item.invoiceOut}}</span> <br/>\\n            <span>Incoice Paid: {{item.invoicePaid}}</span><br/>\\n            <!-- <span>Denied: {{item.denied}}</span><br> -->\\n            <!-- <span>Price: {{item.price}}</span> -->\\n            </div>\\n            <mat-icon fontSet=\\\"fa\\\" fontIcon=\\\"fa-medal\\\"></mat-icon>\\n\\n        </mat-card>\\n    </ng-container>\\n    </div>\\n</div>\\n\\n\"","export default \"\\n<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\" class=\\\"loading-top\\\" color=\\\"warn\\\"></mat-progress-bar>\\n<div class=\\\"content\\\">\\n  <mat-card style=\\\"padding: 5px 10px; margin-bottom: 10px; border-radius: 0px;\\\" class=\\\"mat-elevation-z1\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start stretch\\\" fxLayoutGap=\\\"10px\\\">\\n    <div fxFlex>\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"no-padding\\\">\\n        <mat-label>Search</mat-label>\\n        <input matInput class=\\\"form-control\\\" [(ngModel)]=\\\"search\\\" \\n        type=\\\"text\\\" name=\\\"userQuestion\\\" id=\\\"userQuestions\\\"\\n        (ngModelChange)=\\\"this.searchUpdate.next($event)\\\" (keyup)=\\\"keyUpLoading()\\\" >\\n        <button mat-button *ngIf=\\\"search\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"this.searchUpdate.next('')\\\">\\n          <mat-icon>close</mat-icon>\\n        </button>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\" value=\\\"Leasing\\\" class=\\\"full-width margin-botton\\\">\\n        <mat-button-toggle value=\\\"Leasing\\\" aria-label=\\\"Text align center\\\" (click)=\\\"displayCol('Leasing')\\\">\\n          Leasing\\n        </mat-button-toggle>\\n        <mat-button-toggle value=\\\"Listing\\\" aria-label=\\\"Text align center\\\" (click)=\\\"displayCol('Listing')\\\">\\n          Listing\\n        </mat-button-toggle>\\n        <mat-button-toggle value=\\\"Buying\\\" aria-label=\\\"Text align center\\\" (click)=\\\"displayCol('Buying')\\\">\\n          Buying\\n        </mat-button-toggle>\\n      </mat-button-toggle-group>\\n    </div>\\n    <div>\\n      <button mat-flat-button class=\\\"fat-btn bk-gradient\\\" (click)=\\\"createApp()\\\">New Application</button>\\n    </div>\\n  </div>\\n </mat-card>\\n  <div class=\\\"mat-elevation-z2\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"address\\\">\\n        <th mat-header-cell *matHeaderCellDef> Address </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 15%;\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              {{row.address}}\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"createdAt\\\">\\n        <th mat-header-cell *matHeaderCellDef> Date </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              {{row.createdAt | date:'shortDate' }}\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"applicationType\\\">\\n        <th mat-header-cell *matHeaderCellDef> Type </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            {{row.applicationType}}\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"price\\\">\\n          <th mat-header-cell *matHeaderCellDef> Price </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                ${{row.price | number }}\\n            </div>\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"offerOut\\\">\\n          <th mat-header-cell *matHeaderCellDef>Offer Out </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n              <mat-checkbox [(ngModel)]=\\\"row.offerOut\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'offerOut')\\\"></mat-checkbox>\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"listingAgreement\\\">\\n          <th mat-header-cell *matHeaderCellDef>Listing <br> Agreement </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n            <mat-checkbox [(ngModel)]=\\\"row.listingAgreement\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'listingAgreement')\\\"></mat-checkbox>\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"offerExecuted\\\">\\n          <th mat-header-cell *matHeaderCellDef>Offer <br> Executed </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n              <mat-checkbox [(ngModel)]=\\\"row.offerExecuted\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'offerExecuted')\\\"></mat-checkbox>\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"closed\\\">\\n          <th mat-header-cell *matHeaderCellDef>Closed </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n            <mat-checkbox [(ngModel)]=\\\"row.closed\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'closed')\\\"></mat-checkbox>\\n          </td>\\n        </ng-container>\\n\\n      <ng-container matColumnDef=\\\"moneyIn\\\">\\n        <th mat-header-cell *matHeaderCellDef>Money In </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n            <mat-checkbox [(ngModel)]=\\\"row.moneyIn\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'moneyIn')\\\"></mat-checkbox>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"approved\\\">\\n        <th mat-header-cell *matHeaderCellDef>Approved </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n          <mat-checkbox [(ngModel)]=\\\"row.approved\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'approved')\\\"></mat-checkbox>\\n        </td>\\n      </ng-container>\\n\\n        <ng-container matColumnDef=\\\"denied\\\">\\n            <th mat-header-cell *matHeaderCellDef>Denied </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n              <mat-checkbox [(ngModel)]=\\\"row.denied\\\" color=\\\"primary\\\" [disabled]=\\\"!editing.includes(row.id)\\\" (click)=\\\"updateApp(row, 'denied')\\\"></mat-checkbox>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"edit\\\">\\n            <th mat-header-cell *matHeaderCellDef> </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 5%;\\\">\\n              <button mat-icon-button *ngIf=\\\"!editing.includes(row.id)\\\" (click)=\\\"edit(row.id)\\\" ><mat-icon>edit</mat-icon></button>\\n              <button mat-icon-button *ngIf=\\\"editing.includes(row.id)\\\" (click)=\\\"save(row.id)\\\"><mat-icon>save</mat-icon></button>\\n              <!-- <button mat-icon-button *ngIf=\\\"editing.includes(row.id)\\\" (click)=\\\"edit(row.id)\\\"><mat-icon>delete</mat-icon></button> -->\\n            </td>\\n          </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </tr>\\n    </table>\\n\\n    <mat-paginator [length]=\\\"totalPages\\\"\\n              [pageSize]=\\\"10\\\"\\n              [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"\\n              (page)=\\\"paginator($event)\\\">\\n    </mat-paginator>\\n  </div>\\n\\n</div>\\n\"","export default \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\" class=\\\"modal-loading\\\"></mat-progress-bar>\\n<form [formGroup]=\\\"createApplicationForm\\\" (ngSubmit)=\\\"createApplication()\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n    <h1 mat-dialog-title>Submit a new application</h1>\\n  </div>\\n\\n<div mat-dialog-content>\\n\\n  <mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\" [value]=\\\"appType\\\" class=\\\"full-width margin-botton\\\">\\n    <mat-button-toggle value=\\\"Leasing\\\" aria-label=\\\"Text align center\\\" (click)=\\\"appType = 'Leasing'\\\">\\n      Leasing\\n    </mat-button-toggle>\\n    <mat-button-toggle value=\\\"Listing\\\" aria-label=\\\"Text align center\\\" (click)=\\\"appType = 'Listing'\\\">\\n      Listing \\n    </mat-button-toggle>\\n    <mat-button-toggle value=\\\"Buying\\\" aria-label=\\\"Text align center\\\" (click)=\\\"appType = 'Buying'\\\">\\n      Buying\\n    </mat-button-toggle>\\n  </mat-button-toggle-group>\\n  <!-- <div class=\\\"example-selected-value\\\">Selected value: {{group.value}}</div> -->\\n  <!-- <div *ngIf=\\\"group.value == 'Sales'\\\">\\n    <mat-radio-group class=\\\"full-width\\\" value=\\\"Listing\\\">\\n      <mat-radio-button value=\\\"Listing\\\" class=\\\"margin\\\" (click)=\\\"saleType = 'Listing'\\\">Listing</mat-radio-button>\\n      <mat-radio-button value=\\\"Buying\\\" class=\\\"margin\\\" (click)=\\\"saleType = 'Buying'\\\">Buying</mat-radio-button>\\n    </mat-radio-group>\\n  </div> -->\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n        <mat-label>Address</mat-label>\\n        <input matInput formControlName=\\\"address\\\">\\n        <mat-icon matSuffix>name</mat-icon>\\n        <mat-error *ngIf=\\\"createApplicationForm.controls['address'].errors && createApplicationForm.controls['address'].errors.required\\\">Required</mat-error>\\n      </mat-form-field>\\n      <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"10px\\\">\\n          <mat-form-field>\\n              <mat-label>Price</mat-label>\\n              <span matPrefix>$ &nbsp;</span>\\n              <input type=\\\"number\\\" matInput formControlName=\\\"price\\\">\\n            </mat-form-field>\\n        <div *ngIf=\\\"appType == 'Leasing'\\\">\\n          <mat-checkbox color=\\\"primary\\\" formControlName=\\\"moneyIn\\\">Money In</mat-checkbox><br>\\n          <mat-checkbox color=\\\"primary\\\" formControlName=\\\"approved\\\">Approved</mat-checkbox><br>\\n          <mat-checkbox color=\\\"primary\\\" formControlName=\\\"denied\\\">Denied</mat-checkbox>\\n        </div>\\n        <div *ngIf=\\\"appType == 'Listing'\\\">\\n          <mat-checkbox color=\\\"primary\\\" formControlName=\\\"listingAgreement\\\">Listing Agreement</mat-checkbox><br>\\n          <mat-checkbox color=\\\"primary\\\" formControlName=\\\"offerExecuted\\\">Offer Executed</mat-checkbox><br>\\n          <mat-checkbox color=\\\"primary\\\" formControlName=\\\"closed\\\">Closed</mat-checkbox>\\n        </div>\\n        <div *ngIf=\\\"appType == 'Buying'\\\">\\n          <mat-checkbox color=\\\"primary\\\" formControlName=\\\"offerOut\\\">Offer out</mat-checkbox><br>\\n          <mat-checkbox color=\\\"primary\\\" formControlName=\\\"offerExecuted\\\">Offer Executed</mat-checkbox><br>\\n          <mat-checkbox color=\\\"primary\\\" formControlName=\\\"closed\\\">Closed</mat-checkbox>\\n        </div>\\n          <!-- <mat-checkbox color=\\\"primary\\\" formControlName=\\\"invoiceOut\\\">Invoice Out</mat-checkbox>\\n          <mat-checkbox color=\\\"primary\\\" formControlName=\\\"invoicePaid\\\">Invoice Paid</mat-checkbox> -->\\n      </div>\\n</div>\\n\\n  <div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"space-evenly center\\\" class=\\\"margin-botton\\\">\\n      <button mat-flat-button color=\\\"primary\\\" [disabled]=\\\"!createApplicationForm.valid\\\" fxFlex>Create\\n\\n      </button>\\n      <a mat-stroked-button (click)=\\\"onNoClick()\\\" color=\\\"primary\\\" fxFlex>Cancel</a>\\n      <!-- <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>Ok</button> -->\\n  </div>\\n</form>\\n<!-- <div class=\\\"loading-spinner\\\">\\n    <mat-progress-spinner\\n    class=\\\"example-margin\\\"\\n    color=\\\"white\\\"\\n    mode=\\\"indeterminate\\\"\\n    value=\\\"50\\\">\\n    </mat-progress-spinner>\\n</div> -->\\n\"","export default \"\\n<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\" class=\\\"loading-top\\\"></mat-progress-bar>\\n<div class=\\\"content\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"10px\\\">\\n    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"80%\\\" fxFlexFill>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"10%\\\" fxFlexFill>\\n        <mat-label>Month</mat-label>\\n        <mat-select [(ngModel)]=\\\"selectedMonth\\\" name=\\\"item\\\" (selectionChange)=\\\"changeMonth($event)\\\">\\n          <mat-option *ngFor=\\\"let item of months\\\" [value]=\\\"item.value\\\">\\n            {{item.value}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"10%\\\" fxFlexFill>\\n        <mat-label>Year</mat-label>\\n        <mat-select [(ngModel)]=\\\"selectedYear\\\" name=\\\"item\\\" (selectionChange)=\\\"changeYear($event)\\\">\\n          <mat-option *ngFor=\\\"let item of years\\\" [value]=\\\"item.value\\\">\\n            {{item.value}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    <!-- <button mat-flat-button color=\\\"primary\\\" class=\\\"fat-btn\\\" (click)=\\\"addUser()\\\">New Application</button> -->\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"address\\\">\\n        <th mat-header-cell *matHeaderCellDef> Address </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 15%;\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              {{row.address}}\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n        <ng-container matColumnDef=\\\"createDate\\\">\\n          <th mat-header-cell *matHeaderCellDef> Date </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 15%;\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                {{row.createDate}}\\n            </div>\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"createBy\\\">\\n          <th mat-header-cell *matHeaderCellDef> Agent </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 15%;\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                {{row.createBy}}\\n            </div>\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"saleType\\\">\\n          <th mat-header-cell *matHeaderCellDef> Type </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              <span *ngIf=\\\"row.appType != 'Sale'\\\">Lease</span>\\n              <span *ngIf=\\\"row.appType == 'Sale'\\\">{{row.saleType}}</span>\\n            </div>\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"price\\\">\\n            <th mat-header-cell *matHeaderCellDef> Price </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 15%;\\\">\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                  ${{row.price}}\\n              </div>\\n            </td>\\n          </ng-container>\\n\\n\\n          <ng-container matColumnDef=\\\"offerOut\\\">\\n            <th mat-header-cell *matHeaderCellDef>Offer Out </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n                <mat-checkbox [(ngModel)]=\\\"row.offerOut\\\" color=\\\"primary\\\" (click)=\\\"updateApp(row, 'offerOut')\\\"  *ngIf=\\\"row.appType == 'Sale' && row.saleType != 'Listing'\\\"></mat-checkbox>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"listingAgreement\\\">\\n            <th mat-header-cell *matHeaderCellDef>Listing <br> Agreement </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n              <mat-checkbox [(ngModel)]=\\\"row.listingAgreement\\\" color=\\\"primary\\\" (click)=\\\"updateApp(row, 'listingAgreement')\\\"  *ngIf=\\\"row.appType == 'Sale' && row.saleType == 'Listing'\\\"></mat-checkbox>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"offerExecuted\\\">\\n            <th mat-header-cell *matHeaderCellDef>Offer <br> Executed </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n                <mat-checkbox [(ngModel)]=\\\"row.offerExecuted\\\" color=\\\"primary\\\" (click)=\\\"updateApp(row, 'offerExecuted')\\\" *ngIf=\\\"row.appType == 'Sale'\\\"></mat-checkbox>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"closed\\\">\\n            <th mat-header-cell *matHeaderCellDef>Closed </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 8%;\\\">\\n              <mat-checkbox [(ngModel)]=\\\"row.closed\\\" color=\\\"primary\\\" (click)=\\\"updateApp(row, 'closed')\\\" *ngIf=\\\"row.appType == 'Sale'\\\"></mat-checkbox>\\n            </td>\\n          </ng-container>\\n\\n      <ng-container matColumnDef=\\\"moneyIn\\\">\\n        <th mat-header-cell *matHeaderCellDef>Money In </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 15%;\\\">\\n            <mat-checkbox [(ngModel)]=\\\"row.moneyIn\\\" color=\\\"primary\\\" (click)=\\\"updateApp(row, 'moneyIn')\\\"  *ngIf=\\\"row.appType != 'Sale'\\\"></mat-checkbox>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"approved\\\">\\n        <th mat-header-cell *matHeaderCellDef>Approved </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n          <mat-checkbox [(ngModel)]=\\\"row.approved\\\" color=\\\"primary\\\" (click)=\\\"updateApp(row, 'approved')\\\"  *ngIf=\\\"row.appType != 'Sale'\\\"></mat-checkbox>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"denied\\\">\\n        <th mat-header-cell *matHeaderCellDef>Denied </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n          <mat-checkbox [(ngModel)]=\\\"row.denied\\\" color=\\\"primary\\\" (click)=\\\"updateApp(row, 'denied')\\\" *ngIf=\\\"row.appType != 'Sale'\\\"></mat-checkbox>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"invoiceOut\\\">\\n          <th mat-header-cell *matHeaderCellDef>Invoice Out </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 15%;\\\">\\n            <mat-checkbox [(ngModel)]=\\\"row.invoiceOut\\\" color=\\\"primary\\\" (click)=\\\"updateApp(row, 'invoiceOut')\\\"></mat-checkbox>\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"invoicePaid\\\">\\n          <th mat-header-cell *matHeaderCellDef>Invoice <br> Paid </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\">\\n            <mat-checkbox [(ngModel)]=\\\"row.invoicePaid\\\" color=\\\"primary\\\" (click)=\\\"updateApp(row, 'invoicePaid')\\\"></mat-checkbox>\\n          </td>\\n        </ng-container>\\n\\n          <ng-container matColumnDef=\\\"completed\\\">\\n              <th mat-header-cell *matHeaderCellDef>Paid </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\">\\n                <mat-checkbox [(ngModel)]=\\\"row.completed\\\" color=\\\"primary\\\" (click)=\\\"updateApp(row, 'completed')\\\"></mat-checkbox>\\n              </td>\\n            </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </tr>\\n    </table>\\n\\n    <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator> -->\\n  </div>\\n\\n</div>\\n\"","export default \"<app-navigation></app-navigation>\\n\"","export default \"<div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n    <mat-card class=\\\"mat-elevation-z8\\\">\\n        <form [formGroup]=\\\"forgotForm\\\" (ngSubmit)=\\\"forgot()\\\">\\n              <mat-card-content class=\\\"ion-padding\\\">\\n                <mat-card-title class=\\\"ion-text-center full-width\\\">Forgot Password</mat-card-title>\\n                <mat-card-subtitle class=\\\"ion-text-center full-width\\\">Recover your password using your email address</mat-card-subtitle>\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n                  <mat-label>Email</mat-label>\\n                  <input matInput formControlName=\\\"email\\\">\\n                  <mat-icon matSuffix>email</mat-icon>\\n                  <!-- <mat-hint>Hint</mat-hint> -->\\n                  <mat-error *ngIf=\\\"forgotForm.controls['email'].errors && forgotForm.controls['email'].errors.required\\\">Required</mat-error>\\n                  <mat-error *ngIf=\\\"forgotForm.controls['email'].errors && !forgotForm.controls['email'].errors.required\\\">Please type a valid email address</mat-error>\\n                </mat-form-field>\\n              </mat-card-content>\\n              <mat-card-actions  class=\\\"padding\\\">\\n                  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\n                      <button mat-flat-button color=\\\"primary\\\" [disabled]=\\\"!forgotForm.valid\\\" fxFlex>Reset</button>\\n                      <a mat-stroked-button routerLink=\\\"/login\\\" color=\\\"primary\\\" fxFlex>Back to Login</a>\\n                  </div>\\n              </mat-card-actions>\\n          </form>\\n        </mat-card>\\n</div>\\n\"","export default \"<div class=\\\"content\\\">\\n    <mat-form-field appearance=\\\"outline\\\">\\n        <mat-label>Filter</mat-label>\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n      </mat-form-field>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"name\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 15%;\\\">\\n            <button mat-button routerLink=\\\"/dashboard/form/{{row.file}}\\\">{{row.name}}</button>\\n          </td>\\n        </ng-container>\\n\\n      <!-- Details Column -->\\n      <ng-container matColumnDef=\\\"details\\\">\\n        <th mat-header-cell *matHeaderCellDef> Details </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{row.details}}</td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </tr>\\n    </table>\\n\\n    <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator> -->\\n  </div>\\n\\n</div>\\n\"","export default \"\\n<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\" class=\\\"loading-top\\\"></mat-progress-bar>\\n<div class=\\\"form-actions\\\">\\n  <button mat-icon-button (click)=\\\"downloadForm()\\\" ><mat-icon class=\\\"md-24\\\">cloud_download</mat-icon></button><br/>\\n  <button mat-icon-button (click)=\\\"printForm()\\\" ><mat-icon class=\\\"md-24\\\">print</mat-icon></button><br/>\\n  <button mat-icon-button (click)=\\\"zoomIn()\\\" [disabled]=\\\"zoom >= 1.5\\\"><mat-icon class=\\\"md-24\\\">zoom_in</mat-icon></button><br/>\\n  <button mat-icon-button (click)=\\\"zoomOut()\\\"  [disabled]=\\\"zoom < 1\\\"><mat-icon class=\\\"md-24\\\">zoom_out</mat-icon></button><br/>\\n</div>\\n<div class=\\\"container\\\">\\n\\n  <!-- <pre class=\\\"form-value\\\">{{myForm.value | json}}</pre> -->\\n\\n<!-- Little trick to center the inputs to the viewer -->\\n  <div class=\\\"form-container\\\">\\n      <form id=\\\"input-form\\\" [formGroup]=\\\"myForm\\\" novalidate>\\n      <!-- Cycle through all the inputs -->\\n      <div *ngFor=\\\"let input of inputList; let i=index\\\" [ngSwitch]=\\\"input.type\\\">\\n\\n          <input *ngSwitchCase=\\\"'checkbox'\\\" color=\\\"primary\\\"\\n              [name]=\\\"input.name\\\"\\n              [style.display]=\\\"input.pageNumber !== page?'none':'inherit'\\\"\\n              type=\\\"checkbox\\\"\\n              [style.transform]=\\\"checkBoxSize\\\"\\n              [formControlName]=\\\"input.name\\\"\\n              [value]=\\\"input.value\\\"\\n              [ngStyle]=\\\"getInputPosition(input)\\\">\\n\\n\\n          <input *ngSwitchCase=\\\"'radio'\\\"\\n              [name]=\\\"input.name\\\"\\n              [style.display]=\\\"input.pageNumber !== page?'none':'inherit'\\\"\\n              type=\\\"radio\\\"\\n              (click)=\\\"radioClicked(input)\\\"\\n              [formControlName]=\\\"input.name\\\"\\n              [value]=\\\"input.value\\\"\\n              [ngStyle]=\\\"getInputPosition(input)\\\">\\n\\n          <textarea *ngSwitchCase=\\\"'textarea'\\\"\\n              [name]=\\\"input.name\\\"\\n              [style.display]=\\\"input.pageNumber !== page?'none':'inherit'\\\"\\n              [formControlName]=\\\"input.name\\\"\\n              [value]=\\\"input.value\\\"\\n              [ngStyle]=\\\"getInputPosition(input)\\\"></textarea>\\n\\n          <select *ngSwitchCase=\\\"'select'\\\"\\n              [name]=\\\"input.name\\\"\\n              [style.display]=\\\"input.pageNumber !== page?'none':'inherit'\\\"\\n              [formControlName]=\\\"input.name\\\"\\n              [value]=\\\"input.value\\\"\\n              [ngStyle]=\\\"getInputPosition(input)\\\">\\n              <option *ngFor=\\\"let option of input.options\\\"  value=\\\"{{option.displayValue}}\\\">{{ option.displayValue }}</option>\\n            </select>\\n\\n          <input *ngSwitchCase=\\\"'comb'\\\"\\n              [name]=\\\"input.name\\\"\\n              [style.display]=\\\"input.pageNumber !== page?'none':'inherit'\\\"\\n              [style.letter-spacing]=\\\"input.spacing + 'px'\\\"\\n              type=\\\"text\\\"\\n              [formControlName]=\\\"input.name\\\"\\n              [value]=\\\"input.value\\\"\\n              [ngClass]=\\\"input.class\\\"\\n              [ngStyle]=\\\"getInputPosition(input)\\\">\\n\\n          <input *ngSwitchCase=\\\"'date'\\\"\\n              [name]=\\\"input.name\\\"\\n              [style.display]=\\\"input.pageNumber !== page?'none':'inherit'\\\"\\n              type=\\\"text\\\"\\n              [formControlName]=\\\"input.name\\\"\\n              [value]=\\\"input.value\\\"\\n              [ngClass]=\\\"input.class\\\"\\n              [ngStyle]=\\\"getInputPosition(input)\\\">\\n\\n            <!-- <mat-form-field *ngSwitchCase=\\\"'date'\\\"\\n            [ngStyle]=\\\"getInputPosition(input)\\\"\\n            [style.display]=\\\"input.pageNumber !== page?'none':'inherit'\\\">\\n                  <input matInput [matDatepicker]=\\\"dp3\\\"\\n                  [name]=\\\"input.name\\\"\\n                  [formControlName]=\\\"input.name\\\"\\n                  [value]=\\\"input.value\\\"\\n                  disabled>\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"dp3\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #dp3 disabled=\\\"false\\\"></mat-datepicker>\\n            </mat-form-field> -->\\n\\n          <!-- Insert an input accordingly and get the style/position from the component -->\\n          <input *ngSwitchDefault\\n              [name]=\\\"input.name\\\"\\n              [style.display]=\\\"input.pageNumber !== page?'none':'inherit'\\\"\\n              type=\\\"text\\\"\\n              [formControlName]=\\\"input.name\\\"\\n              [value]=\\\"input.value\\\"\\n              [ngClass]=\\\"input.class\\\"\\n              [ngStyle]=\\\"getInputPosition(input)\\\">\\n\\n      </div>\\n    <!-- </div> -->\\n      </form>\\n  </div>\\n\\n  <!-- Bind the zoom variable to the viewer component -->\\n    <!-- <pdf-viewer id=\\\"viewer\\\" [src]=\\\"pdfSrc\\\" [zoom]=\\\"zoom\\\" (after-load-complete)=\\\"loadComplete($event)\\\"></pdf-viewer> -->\\n  <pdf-viewer id=\\\"viewer\\\" [page]=\\\"page\\\" [src]=\\\"pdfSrc\\\" [zoom]=\\\"zoom\\\" (after-load-complete)=\\\"loadComplete($event)\\\" [show-all]=\\\"false\\\"></pdf-viewer>\\n</div>\\n<!-- Add some button -->\\n<div class=\\\"paginator\\\">\\n  <button mat-button (click)=\\\"prevPage()\\\" [disabled]=\\\"page === 1\\\">Prev</button>\\n  <span>{{ page }} / {{ totalPages }}</span>\\n  <button mat-button (click)=\\\"nextPage()\\\" [disabled]=\\\"page === totalPages\\\">Next</button>\\n</div>\\n\"","export default \"<div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n    <mat-card class=\\\"mat-elevation-z8\\\">\\n          <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n              <mat-card-content class=\\\"ion-padding\\\">\\n                <mat-card-title class=\\\"ion-text-center full-width\\\">Login</mat-card-title>\\n                <mat-card-subtitle class=\\\"ion-text-center full-width\\\">Using your email address</mat-card-subtitle>\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n                  <mat-label>Email</mat-label>\\n                  <input matInput formControlName=\\\"email\\\">\\n                  <mat-icon matSuffix>email</mat-icon>\\n                  <mat-error *ngIf=\\\"loginForm.controls['email'].errors && loginForm.controls['email'].errors.required\\\">Required</mat-error>\\n                  <mat-error *ngIf=\\\"loginForm.controls['email'].errors && !loginForm.controls['email'].errors.required\\\">Please type a valid email address</mat-error>\\n                  <!-- <mat-hint>Hint</mat-hint> -->\\n                </mat-form-field>\\n                <mat-form-field appearance=\\\"outline\\\" color=\\\"primary\\\" class=\\\"full-width\\\">\\n                  <mat-label>Password</mat-label>\\n                  <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"password\\\">\\n                  <a mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" [attr.aria-label]=\\\"'Hide password'\\\"\\n                    [attr.aria-pressed]=\\\"hide\\\">\\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                  </a>\\n                  <mat-hint>Password should be at least 6 characters</mat-hint>\\n                  <mat-error *ngIf=\\\"loginForm.controls['password'].errors && loginForm.controls['password'].errors.required\\\">Required</mat-error>\\n                  <mat-error *ngIf=\\\"loginForm.controls['password'].errors && !loginForm.controls['password'].errors.required\\\">Password should be at least 6 characters\\n                    </mat-error>\\n                </mat-form-field>\\n\\n                <!-- <a mat-flat-button routerLink=\\\"/forgot-password\\\">Forgot Password?</a> -->\\n              </mat-card-content>\\n              <mat-card-actions class=\\\"padding\\\">\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\n                    <button mat-flat-button color=\\\"primary\\\" [disabled]=\\\"!loginForm.valid\\\" fxFlex>Login</button>\\n                    <a mat-stroked-button routerLink=\\\"/forgot-password\\\" color=\\\"primary\\\" fxFlex>Reset Password</a>\\n                </div>\\n              </mat-card-actions>\\n              </form>\\n    </mat-card>\\n</div>\\n\"","export default \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n      [opened]=\\\"false\\\">\\n    <mat-toolbar>Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <div *ngIf=\\\"user\\\">\\n          <!-- <a mat-list-item routerLink=\\\"/dashboard/form/ar-11\\\">Clients</a> -->\\n          <a mat-list-item routerLink=\\\"/dashboard/applications-dashboard\\\" (click)=\\\"drawer.close()\\\">Whiteboard</a>\\n          <a mat-list-item routerLink=\\\"/dashboard/whiteboard\\\" (click)=\\\"drawer.close()\\\">Agent Stats (old)</a>\\n          <a mat-list-item routerLink=\\\"/dashboard/applications-stats\\\" (click)=\\\"drawer.close()\\\">Agent Stats</a>\\n          <a mat-list-item routerLink=\\\"/dashboard/applications\\\" (click)=\\\"drawer.close()\\\">Applications</a>\\n          <!-- <a mat-list-item routerLink=\\\"/dashboard/manage-applications\\\" (click)=\\\"drawer.close()\\\">Applications <span class=\\\"sub-menu\\\">(admin)</span></a>\\n          <a mat-list-item routerLink=\\\"/dashboard/users\\\" (click)=\\\"drawer.close()\\\">Users</a> -->\\n          <!-- <a mat-list-item routerLink=\\\"/dashboard/manage-applications\\\" (click)=\\\"drawer.close()\\\" *ngIf=\\\"user.user.role.name == 'Administrator'\\\">Applications old <span class=\\\"sub-menu\\\">(admin)</span></a> -->\\n          <a mat-list-item routerLink=\\\"/dashboard/applications-admin\\\" (click)=\\\"drawer.close()\\\" *ngIf=\\\"user.user.role.name == 'Administrator'\\\">Applications <span class=\\\"sub-menu\\\">(admin)</span></a>\\n          <a mat-list-item routerLink=\\\"/dashboard/users\\\" (click)=\\\"drawer.close()\\\" *ngIf=\\\"user.user.role.name == 'Administrator'\\\">Users</a>\\n      </div>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>\\n        <!-- Dashboard -->\\n      </span>\\n      <span class=\\\"spacer\\\"></span>\\n      <button mat-icon-button (click)=\\\"logout()\\\" ><mat-icon>exit_to_app</mat-icon></button>\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n    <router-outlet>\\n    </router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n<!-- <mat-toolbar color=\\\"primary\\\">\\n  <span>footer</span>\\n</mat-toolbar> -->\\n\\n\"","export default \"<div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n    <mat-card class=\\\"mat-elevation-z2\\\">\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n            <mat-card-content class=\\\"ion-padding\\\">\\n              <mat-card-title class=\\\"ion-text-center full-width\\\">Register</mat-card-title>\\n              <mat-card-subtitle class=\\\"ion-text-center full-width\\\">Using your email address</mat-card-subtitle>\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n                  <mat-label>Name</mat-label>\\n                  <input matInput formControlName=\\\"name\\\">\\n                  <mat-icon matSuffix>name</mat-icon>\\n                  <mat-error *ngIf=\\\"registerForm.controls['email'].errors && registerForm.controls['email'].errors.required\\\">Required</mat-error>\\n                </mat-form-field>\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n                <mat-label>Email</mat-label>\\n                <input matInput formControlName=\\\"email\\\">\\n                <mat-icon matSuffix>email</mat-icon>\\n\\n                <mat-error *ngIf=\\\"registerForm.controls['email'].errors && registerForm.controls['email'].errors.required\\\">Required</mat-error>\\n                <mat-error *ngIf=\\\"registerForm.controls['email'].errors && !registerForm.controls['email'].errors.required\\\">Please type a valid email address</mat-error>\\n              </mat-form-field>\\n              <mat-form-field appearance=\\\"outline\\\" color=\\\"primary\\\" class=\\\"full-width\\\">\\n                <mat-label>Password</mat-label>\\n                <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"password\\\">\\n                <a mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" [attr.aria-label]=\\\"'Hide password'\\\"\\n                  [attr.aria-pressed]=\\\"hide\\\">\\n                  <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                </a>\\n                <mat-hint>Password should be at least 6 characters</mat-hint>\\n                <mat-error *ngIf=\\\"registerForm.controls['password'].errors && registerForm.controls['password'].errors.required\\\">Required</mat-error>\\n                <mat-error *ngIf=\\\"registerForm.controls['password'].errors && !registerForm.controls['password'].errors.required\\\">Password should be at least 6 characters\\n                  </mat-error>\\n              </mat-form-field>\\n            </mat-card-content>\\n            <mat-card-actions  class=\\\"padding\\\">\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"space-evenly center\\\">\\n                    <button mat-flat-button color=\\\"primary\\\" [disabled]=\\\"!registerForm.valid\\\" fxFlex>Register</button>\\n                    <!-- <a mat-stroked-button routerLink=\\\"/login\\\" color=\\\"primary\\\" fxFlex>Back to Login</a> -->\\n                </div>\\n            </mat-card-actions>\\n          </form>\\n          </mat-card>\\n</div>\\n\"","export default \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\" class=\\\"modal-loading\\\"></mat-progress-bar>\\n  <form #avatarUpload (ngSubmit)=\\\"uploadAvatar()\\\" >\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <div class=\\\"image-upload\\\">\\n          <label for=\\\"file-input\\\">\\n              <img class=\\\"avatar_md\\\" [src]=\\\"imageSrc || '../../../assets/avatar.svg'\\\" alt=\\\"your image\\\" />\\n          </label>\\n          <input id=\\\"file-input\\\" #avatarInput type='file' (change)=\\\"preview($event.target.files);\\\"/>\\n          <!-- <input hidden id=\\\"file-input\\\" type='file' (change)=\\\"preview($event);\\\" formControlName=\\\"avatar\\\" value=''/> -->\\n      </div>\\n  </div>\\n  <!-- <input type=\\\"submit\\\" value=\\\"upload\\\"> -->\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n    <h1 mat-dialog-title>{{ update ? 'Update this User' : 'Create a new User'}}</h1>\\n  </div>\\n</form>\\n<form [formGroup]=\\\"createUserForm\\\" (ngSubmit)=\\\"createUser()\\\">\\n<div mat-dialog-content>\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n        <mat-label>Name</mat-label>\\n        <input matInput formControlName=\\\"fullName\\\">\\n        <mat-icon matSuffix>name</mat-icon>\\n        <mat-error *ngIf=\\\"createUserForm.controls['email'].errors && createUserForm.controls['email'].errors.required\\\">Required</mat-error>\\n      </mat-form-field>\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\n      <mat-label>Email</mat-label>\\n      <input matInput formControlName=\\\"email\\\">\\n      <mat-icon matSuffix>email</mat-icon>\\n\\n      <mat-error *ngIf=\\\"createUserForm.controls['email'].errors && createUserForm.controls['email'].errors.required\\\">Required</mat-error>\\n      <mat-error *ngIf=\\\"createUserForm.controls['email'].errors && !createUserForm.controls['email'].errors.required\\\">Please type a valid email address</mat-error>\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"outline\\\" color=\\\"primary\\\" class=\\\"full-width\\\">\\n      <mat-label>Password</mat-label>\\n      <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"password\\\">\\n      <a mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" [attr.aria-label]=\\\"'Hide password'\\\"\\n        [attr.aria-pressed]=\\\"hide\\\">\\n        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n      </a>\\n      <mat-hint>Password should be at least 6 characters</mat-hint>\\n      <mat-error *ngIf=\\\"createUserForm.controls['password'].errors && createUserForm.controls['password'].errors.required\\\">Required</mat-error>\\n      <mat-error *ngIf=\\\"createUserForm.controls['password'].errors && !createUserForm.controls['password'].errors.required\\\">Password should be at least 6 characters\\n        </mat-error>\\n    </mat-form-field>\\n    <div class=\\\"full-width\\\">\\n      <section class=\\\"slide-toggle\\\">\\n        <mat-slide-toggle formControlName=\\\"isAdmin\\\" (change)=\\\"adminChanged = !adminChanged\\\">\\n            Administrator\\n        </mat-slide-toggle>\\n      </section>\\n    </div>\\n    <div class=\\\"full-width\\\">\\n      <section class=\\\"slide-togglen\\\">\\n        <mat-slide-toggle formControlName=\\\"isBloked\\\" (change)=\\\"blokedChanged = !blokedChanged\\\" >\\n            Blocked\\n        </mat-slide-toggle>\\n      </section>\\n    </div>\\n\\n</div>\\n  <div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"space-evenly center\\\" class=\\\"margin-botton\\\">\\n      <button mat-flat-button color=\\\"primary\\\" [disabled]=\\\"!createUserForm.valid\\\" fxFlex *ngIf=\\\"!update\\\" >Create</button>\\n      <button mat-flat-button color=\\\"primary\\\" [disabled]=\\\"!createUserForm.valid\\\" fxFlex *ngIf=\\\"update\\\" >Update</button>\\n      <a mat-stroked-button (click)=\\\"onNoClick()\\\" color=\\\"primary\\\" fxFlex>Cancel</a>\\n      <!-- <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>Ok</button> -->\\n  </div>\\n</form>\\n<!-- <div class=\\\"loading-spinner\\\">\\n    <mat-progress-spinner\\n    class=\\\"example-margin\\\"\\n    color=\\\"white\\\"\\n    mode=\\\"indeterminate\\\"\\n    value=\\\"50\\\">\\n    </mat-progress-spinner>\\n</div> -->\\n\"","export default \"\\n<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\" class=\\\"loading-top\\\"></mat-progress-bar>\\n<div class=\\\"content\\\">\\n  <mat-card style=\\\"padding: 5px 10px; margin-bottom: 10px; border-radius: 0px;\\\" class=\\\"mat-elevation-z1\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"10px\\\">\\n    <mat-form-field appearance=\\\"outline\\\" class=\\\"no-padding\\\">\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n    <button mat-flat-button class=\\\"fat-btn bk-gradient\\\" (click)=\\\"addUser()\\\">Add User</button>\\n  </div>\\n</mat-card>\\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"fullName\\\">\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 15%;\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              <img class=\\\"avatar_sm\\\" src=\\\"https://backend.apartmentsource.com{{row.avatar['0'].url}}\\\" *ngIf=\\\"row.avatar.length > 0 || !row.avatar == undefined\\\" />\\n              <img class=\\\"avatar_sm\\\" src=\\\"'../../../../assets/avatar.svg\\\" *ngIf=\\\"row.avatar.length == 0\\\" />\\n              {{row.fullName}}\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <!--Email Column -->\\n      <ng-container matColumnDef=\\\"email\\\">\\n        <th mat-header-cell *matHeaderCellDef>Email </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" style=\\\"width: 15%;\\\">\\n          {{row.email}}\\n        </td>\\n      </ng-container>\\n\\n      <!-- isAdmin Column -->\\n      <ng-container matColumnDef=\\\"role\\\">\\n        <th mat-header-cell *matHeaderCellDef>Admin </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n          <mat-checkbox [ngModel]=\\\"row.role.name == 'Administrator' ? true : false\\\" color=\\\"primary\\\" disabled></mat-checkbox>\\n        </td>\\n      </ng-container>\\n\\n            <!-- isAdmin Column -->\\n            <ng-container matColumnDef=\\\"blocked\\\">\\n              <th mat-header-cell *matHeaderCellDef>Blocked </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\">\\n                <mat-checkbox [ngModel]=\\\"row.blocked\\\" color=\\\"primary\\\" disabled></mat-checkbox>\\n              </td>\\n            </ng-container>\\n\\n      <!-- isAdmin Column -->\\n      <ng-container matColumnDef=\\\"edit\\\" class=\\\"edit-table\\\">\\n        <th mat-header-cell *matHeaderCellDef> </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n          <button mat-icon-button (click)=\\\"updateUser(row)\\\"><mat-icon>edit</mat-icon></button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </tr>\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n    <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator> -->\\n  </div>\\n\\n</div>\\n\"","export default \"<div class=\\\"content\\\">\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start stretch\\\" fxLayoutGap=\\\"20px\\\">\\n  <div *ngFor=\\\"let item of stats\\\" fxFlex=\\\"23\\\" class=\\\"card-33\\\" fxFill>\\n    <mat-card class=\\\"mat-elevation-z4 margin-bottom\\\">\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n        <div>\\n            <img class=\\\"avatar_lg\\\" src=\\\"{{item.statsData.avatar}}\\\" *ngIf=\\\"item.statsData.avatar\\\" />\\n            <img class=\\\"avatar_lg\\\" src=\\\"'../../../../assets/avatar.svg\\\" *ngIf=\\\"!item.statsData.avatar\\\" />\\n        </div>\\n        <div class=\\\"statistics\\\">\\n          <h3>{{item.createBy}}</h3>\\n          <span> Applications: {{item.statsData.app}} </span> <br/>\\n          <span>Money In: {{item.statsData.moneyIn}}</span><br/>\\n          <span>Approved: {{item.statsData.approved}}</span><br/>\\n          <span>Invoice Out: {{item.statsData.invoiceOut}}</span> <br/>\\n          <span>Incoice Paid: {{item.statsData.invoicePaid}}</span><br/>\\n          <span>Denied: {{item.statsData.denied}}</span><br>\\n          <span>Price: {{item.statsData.price}}</span>\\n        </div>\\n      </div>\\n    </mat-card>\\n  </div>\\n    </div>\\n</div>\\n\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthService } from './../services/auth.service';\n// import { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(\n        private authenticationService: AuthService\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }));\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './../services/auth.service';\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(\n        private authenticationService: AuthService\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        // console.log(request);\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.jwt && request.url.startsWith('https://backend.apartmentsource.com')) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.jwt}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","import { ApplicationsStatsComponent } from './applications-stats/applications-stats.component';\nimport { ApplicationsAdminComponent } from './applications-admin/applications-admin.component';\nimport { ManageApplicationsComponent } from './applications/manage-applications/manage-applications.component';\nimport { ApplicationsDashboardComponent } from './applications-dashboard/applications-dashboard.component';\nimport { WhiteboardComponent } from './whiteboard/whiteboard.component';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { AuthGuard } from './services/auth-guard.service';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FormListComponent } from './form-list/form-list.component';\nimport { FormComponent } from './form/form/form.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UsersComponent } from './users/users.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'dashboard/applications-dashboard', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'forgot-password', component: ForgotPasswordComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard], children: [\n    { path: 'register', component: RegisterComponent },\n    { path: 'forms', component: FormListComponent },\n    { path: 'form/:form', component: FormComponent },\n    { path: 'form/:form/:id', component: FormComponent },\n    { path: 'users', component: UsersComponent},\n    { path: 'applications', component: ApplicationsComponent },\n    { path: 'whiteboard', component: WhiteboardComponent },\n    { path: 'applications-stats', component: ApplicationsStatsComponent },\n    { path: 'applications-dashboard', component: ApplicationsDashboardComponent },\n    { path: 'manage-applications', component: ManageApplicationsComponent },\n    { path: 'applications-admin', component: ApplicationsAdminComponent }\n  ] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'dotgitalblank';\n}\n","import { ApplicationsDashboardComponent } from './applications-dashboard/applications-dashboard.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { FormComponent } from './form/form/form.component';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormListComponent } from './form-list/form-list.component';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { environment } from '../environments/environment';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MatToolbarModule,\n  MatButtonModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatListModule,\n  MatProgressBarModule,\n  MatCheckboxModule,\n  MatRadioModule,\n  MatFormFieldModule,\n  MatSortModule,\n  MatPaginatorModule,\n  MatDialogModule,\n  MatSnackBarModule,\n  MatTableModule,\n  MatInputModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatCardModule,\n  MatButtonToggleModule,\n  MatSlideToggleModule,\n  MatProgressSpinnerModule,\n  MatSelectModule} from '@angular/material';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { UsersComponent } from './users/users.component';\nimport { CreateUserComponent } from './users/create-user/create-user.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { CreateApplicationComponent } from './applications/create-application/create-application.component';\nimport { WhiteboardComponent } from './whiteboard/whiteboard.component';\nimport { ManageApplicationsComponent } from './applications/manage-applications/manage-applications.component';\nimport { ErrorInterceptor } from './_helpers/error.interceptor';\nimport { JwtInterceptor } from './_helpers/jwt.interceptor';\nimport { GraphQLModule } from './graphql.module';\n\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { ApplicationsAdminComponent } from './applications-admin/applications-admin.component';\nimport { MessageComponent } from './applications-dashboard/message/message.component';\nimport { ApplicationsStatsComponent } from './applications-stats/applications-stats.component';\n\nconst config: SocketIoConfig = { url: 'https://backend.apartmentsource.com', options: {query: {userId: null}} };\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    FormComponent,\n    FormListComponent,\n    LoginComponent,\n    DashboardComponent,\n    RegisterComponent,\n    ForgotPasswordComponent,\n    UsersComponent,\n    CreateUserComponent,\n    CreateApplicationComponent,\n    ApplicationsComponent,\n    CreateApplicationComponent,\n    WhiteboardComponent,\n    ApplicationsDashboardComponent,\n    ManageApplicationsComponent,\n    ApplicationsAdminComponent,\n    MessageComponent,\n    ApplicationsStatsComponent,\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatSelectModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSortModule,\n    MatDialogModule,\n    MatButtonToggleModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatPaginatorModule,\n    MatSlideToggleModule,\n    MatTableModule,\n    MatInputModule,\n    MatRadioModule,\n    PdfViewerModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    AngularFireStorageModule,\n    ScrollingModule,\n    FlexLayoutModule,\n    GraphQLModule,\n    SocketIoModule.forRoot(config),\n    // SocketIoModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    CreateUserComponent,\n    CreateApplicationComponent,\n    MessageComponent,\n  ]\n})\nexport class AppModule { }\n","export default \".content {\\n  padding: 20px;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%;\\n}\\n\\nth {\\n  font-weight: 900;\\n  color: #000;\\n}\\n\\ntd, th {\\n  width: 8% !important;\\n}\\n\\n.mat-column-address {\\n  width: 20% !important;\\n}\\n\\n.fat-btn {\\n  margin: 4px 0px 0px;\\n  height: 50px;\\n}\\n\\n.mat-button-toggle-group {\\n  margin-top: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC9hcHBsaWNhdGlvbnMtYWRtaW4vYXBwbGljYXRpb25zLWFkbWluLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hcHBsaWNhdGlvbnMtYWRtaW4vYXBwbGljYXRpb25zLWFkbWluLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtBQ0NKOztBRENFO0VBQ0UsV0FBQTtBQ0VKOztBRENFO0VBQ0UsZUFBQTtFQUNBLFdBQUE7QUNFSjs7QURBRTtFQUNFLGdCQUFBO0VBQ0EsV0FBQTtBQ0dKOztBRENFO0VBQ0Usb0JBQUE7QUNFSjs7QURDRTtFQUNFLHFCQUFBO0FDRUo7O0FEQ0U7RUFDRSxtQkFBQTtFQUNBLFlBQUE7QUNFSjs7QURDRTtFQUNFLGVBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy1hZG1pbi9hcHBsaWNhdGlvbnMtYWRtaW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudHtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICB9XG4gIHRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgLm1hdC1mb3JtLWZpZWxkIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgdGh7XG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgICBjb2xvcjogIzAwMDtcbiAgICAvLyBmb250LXNpemU6IDE2cHg7XG4gIH1cbiAgXG4gIHRkLCB0aCB7XG4gICAgd2lkdGg6IDglICFpbXBvcnRhbnQ7XG4gIH1cbiAgXG4gIC5tYXQtY29sdW1uLWFkZHJlc3N7XG4gICAgd2lkdGg6IDIwJSAgIWltcG9ydGFudDtcbiAgfVxuICBcbiAgLmZhdC1idG57XG4gICAgbWFyZ2luOiA0cHggMHB4IDBweDtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gIH1cbiAgXG4gIC5tYXQtYnV0dG9uLXRvZ2dsZS1ncm91cHtcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG4gIH1cbiIsIi5jb250ZW50IHtcbiAgcGFkZGluZzogMjBweDtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgge1xuICBmb250LXdlaWdodDogOTAwO1xuICBjb2xvcjogIzAwMDtcbn1cblxudGQsIHRoIHtcbiAgd2lkdGg6IDglICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtY29sdW1uLWFkZHJlc3Mge1xuICB3aWR0aDogMjAlICFpbXBvcnRhbnQ7XG59XG5cbi5mYXQtYnRuIHtcbiAgbWFyZ2luOiA0cHggMHB4IDBweDtcbiAgaGVpZ2h0OiA1MHB4O1xufVxuXG4ubWF0LWJ1dHRvbi10b2dnbGUtZ3JvdXAge1xuICBtYXJnaW4tdG9wOiA1cHg7XG59Il19 */\"","import { SocketService } from './../services/socket.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DataService } from './../data.service';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Application } from './../applications/application';\n\n@Component({\n  selector: 'app-applications-admin',\n  templateUrl: './applications-admin.component.html',\n  styleUrls: ['./applications-admin.component.scss']\n})\nexport class ApplicationsAdminComponent implements OnInit, OnDestroy {\n\n  public loading = true;\n  public search: string = '';\n  public applicationType = 'Leasing';\n  public startPage = 0;\n  public limitPage = 10;\n  public totalPages: number;\n  public searchUpdate = new Subject<string>();\n  public editing: string[] = [];\n  public agents = [];\n  public agentSelected: string;\n\n  public dataSource: MatTableDataSource<Application>;\n  public displayedColumns: string[] = ['address',\n  'agent',\n  'createdAt',\n  'applicationType',\n  'price',\n  'moneyIn',\n  'approved' ,\n  'denied',\n  'invoiceOut',\n  'invoicePaid',\n  'paid',\n  'edit'];\n\n  constructor(\n    private dataService: DataService,\n    private socketService: SocketService,\n  ) { }\n\n  ngOnInit() {\n    this.getUsers();\n    this.getApplications();\n\n    this.searchUpdate.pipe(\n      debounceTime(400),\n      distinctUntilChanged())\n      .subscribe(value => {\n        this.search = value;\n        this.getApplications();\n      });\n\n    this.socketService.get().subscribe(method => {\n      // console.log(method);\n      if ( typeof this[method] === 'function' ) {\n        this[method]();\n      }\n    });\n  }\n\n  keyUpLoading() {\n    this.loading = true;\n  }\n\n  filteByAgent(agent) {\n    console.log(agent);\n    this.agentSelected = agent;\n    this.getApplications();\n  }\n\n  displayCol(applicationType) {\n    this.loading = true;\n    this.applicationType = applicationType;\n    switch (applicationType) {\n      case 'Leasing':\n        this.displayedColumns = ['address', 'agent', 'createdAt', 'applicationType', 'price', 'moneyIn', 'approved' , 'denied',\n        'invoiceOut',\n        'invoicePaid',\n        'paid', 'edit'];\n        break;\n      case 'Listing':\n        this.displayedColumns = ['address', 'agent', 'createdAt', 'applicationType',\n        'price', 'listingAgreement', 'offerExecuted', 'closed',\n        'invoiceOut',\n        'invoicePaid',\n        'paid', 'edit'];\n        break;\n      case 'Buying':\n        this.displayedColumns = ['address', 'agent', 'createdAt', 'applicationType',\n        'price', 'offerOut', 'offerExecuted', 'closed',\n        'invoiceOut',\n        'invoicePaid',\n        'paid', 'edit'];\n        break;\n      default:\n        break;\n    }\n    this.getApplications();\n  }\n\n  getUsers() {\n    const query = `query{\n      users(sort: \"fullName:asc\"){\n        id,\n        fullName\n      }\n    }`;\n\n    this.dataService.getData(query).subscribe(({ data, loading })  => {\n      this.agents = data.users;\n    });\n  }\n\n  getApplications() {\n    let where;\n    if (this.agentSelected) {\n      where = `{\n        agent: \"${this.agentSelected}\",\n        address_contains: \"${this.search}\",\n        applicationType: \"${this.applicationType}\"\n      }`;\n    } else {\n      where = `{\n        address_contains: \"${this.search}\",\n        applicationType: \"${this.applicationType}\"\n      }`;\n    }\n\n\n    const query = `\n    query{\n        applications(sort: \"createdAt:desc\", start: ${this.startPage}, limit: ${this.limitPage}, where: ${where}) {\n            id,\n            applicationType,\n            address,\n            approved,\n            createdAt,\n            denied,\n            listingAgreement,\n            offerOut,\n            offerExecuted,\n            closed,\n            invoiceOut,\n            invoicePaid,\n            paid,\n            moneyIn,\n            price,\n            agent {\n                id\n                fullName\n            }\n        }\n        applicationsConnection (where: ${where}) {\n            aggregate {\n                count\n            }\n        }\n    }`;\n\n    this.dataService.getData(query).subscribe(({ data, loading })  => {\n      this.dataSource = new MatTableDataSource<Application>(data.applications);\n      this.totalPages = data.applicationsConnection.aggregate.count;\n      this.loading = false;\n    });\n  }\n\n  edit(appId) {\n    if (!this.editing.includes(appId)) {\n      this.editing.push(appId);\n    }\n  }\n\n  save(appId) {\n    if (this.editing.includes(appId)) {\n      this.editing.splice( this.editing.indexOf(appId), 1 );\n    }\n  }\n\n  updateApp(app: Application, field) {\n    if (this.editing.includes(app.id)) {\n      this.loading = true;\n      app[field] = !app[field];\n      const appData = `mutation {\n          updateApplication(input: {\n            where: {\n              id: \"${app.id}\"\n            },\n            data: {\n              ${field}: ${app[field]}\n            }\n          }) {\n            application {\n              id\n            }\n          }\n        }`;\n\n      this.dataService.updateData(appData).subscribe(() => {\n        this.getApplications();\n        this.socketService.send('public', 'getApplications');\n      });\n    }\n  }\n\n  paginator(e) {\n    this.loading = true;\n    this.startPage = e.pageIndex !== 0 ? e.pageIndex * e.pageSize : 0;\n    this.limitPage = e.pageSize;\n    this.getApplications();\n  }\n\n  ngOnDestroy(): void {\n    this.socketService.closeConnection();\n  }\n}\n","export default \".mat-card {\\n  margin: 5px 0px;\\n  padding: 5px;\\n}\\n\\nh4.address {\\n  margin: 0px 5px 0px 0px;\\n  color: #4c4c4c;\\n}\\n\\nspan.create-by {\\n  font-size: 0.8em;\\n  color: #4c4c4c;\\n}\\n\\ndiv.avatar-container {\\n  padding-top: 5px;\\n}\\n\\n.apps-item .create-by.top {\\n  font-size: 0.8em;\\n  color: #4c4c4c;\\n  background: red;\\n}\\n\\n.status-container {\\n  margin: 5px 0px;\\n}\\n\\n.status-container .apps-status {\\n  font-size: 0.5em;\\n  padding: 2px 5px 0px 8px;\\n  margin-right: 5px;\\n  float: left;\\n  text-transform: uppercase;\\n  color: #ffffff;\\n  background: linear-gradient(60deg, #2d2d2d, #4a4a4a);\\n}\\n\\n.status-container .status-,\\n.status-container .status-false {\\n  display: none;\\n}\\n\\n.status-container .mat-icon {\\n  font-size: 16px;\\n  vertical-align: middle;\\n  /* line-height: 16px; */\\n  height: 18px;\\n  width: 16px;\\n}\\n\\n.top-agent-star {\\n  background: red;\\n  color: #ffffff;\\n  border-radius: 50%;\\n  position: absolute;\\n  text-align: center;\\n  height: 25px;\\n  width: 25px;\\n  top: 40px;\\n  left: 35px;\\n}\\n\\n.whiteboard-message {\\n  position: fixed;\\n  bottom: 0px;\\n  background: #000;\\n}\\n\\n.message-space {\\n  height: 65px;\\n}\\n\\n.whiteboard-message mat-icon {\\n  color: #636363;\\n}\\n\\n.whiteboard-message-text {\\n  text-align: center;\\n  width: 100%;\\n  color: #fff;\\n}\\n\\n#full-screen,\\n.full-screen {\\n  background: #e2e2e2;\\n}\\n\\n.mat-sidenav-content {\\n  background: #e2e2e2;\\n}\\n\\n.mat-mini-fab {\\n  z-index: 1;\\n  bottom: 2.9rem;\\n  background: linear-gradient(60deg, #288c6c, #4ea752);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC9hcHBsaWNhdGlvbnMtZGFzaGJvYXJkL2FwcGxpY2F0aW9ucy1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FwcGxpY2F0aW9ucy1kYXNoYm9hcmQvYXBwbGljYXRpb25zLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxZQUFBO0FDQ0Y7O0FEQ0E7RUFFRSx1QkFBQTtFQUNBLGNBQUE7QUNDRjs7QURDQTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtBQ0VGOztBRENBO0VBQ0UsZ0JBQUE7QUNFRjs7QURDQTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7QUNFRjs7QURBQTtFQUNFLGVBQUE7QUNHRjs7QUREQTtFQUNFLGdCQUFBO0VBQ0Esd0JBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7RUFDQSx5QkFBQTtFQUNBLGNBQUE7RUFDQSxvREFBQTtBQ0lGOztBRERBOztFQUVFLGFBQUE7QUNJRjs7QUREQTtFQUNFLGVBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNJRjs7QURTQTtFQUNFLGVBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtBQ05GOztBRHFDQTtFQUNFLGVBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7QUNsQ0Y7O0FEMENBO0VBQ0UsWUFBQTtBQ3ZDRjs7QUQyQ0E7RUFLRSxjQUFBO0FDNUNGOztBRCtDQTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7QUM1Q0Y7O0FEd0RBOztFQUVFLG1CQUFBO0FDckRGOztBRHdEQTtFQUNFLG1CQUFBO0FDckRGOztBRHdEQTtFQUNFLFVBQUE7RUFDQSxjQUFBO0VBQ0Esb0RBQUE7QUNyREYiLCJmaWxlIjoic3JjL2FwcC9hcHBsaWNhdGlvbnMtZGFzaGJvYXJkL2FwcGxpY2F0aW9ucy1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmR7XG4gIG1hcmdpbjogNXB4IDBweDtcbiAgcGFkZGluZzogNXB4O1xufVxuaDQuYWRkcmVzc3tcbiAgLy8gZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbjogMHB4IDVweCAwcHggMHB4O1xuICBjb2xvcjogIzRjNGM0Yztcbn1cbnNwYW4uY3JlYXRlLWJ5e1xuICBmb250LXNpemU6IDAuOGVtO1xuICBjb2xvcjogIzRjNGM0Yztcbn1cblxuZGl2LmF2YXRhci1jb250YWluZXJ7XG4gIHBhZGRpbmctdG9wOiA1cHg7XG59XG5cbi5hcHBzLWl0ZW0gLmNyZWF0ZS1ieS50b3B7XG4gIGZvbnQtc2l6ZTogMC44ZW07XG4gIGNvbG9yOiAjNGM0YzRjO1xuICBiYWNrZ3JvdW5kOiByZWQ7XG59XG4uc3RhdHVzLWNvbnRhaW5lcntcbiAgbWFyZ2luOiA1cHggMHB4O1xufVxuLnN0YXR1cy1jb250YWluZXIgLmFwcHMtc3RhdHVze1xuICBmb250LXNpemU6IDAuNWVtO1xuICBwYWRkaW5nOiAycHggNXB4IDBweCA4cHg7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xuICBmbG9hdDogbGVmdDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg2MGRlZywgIzJkMmQyZCwgIzRhNGE0YSk7XG59XG5cbi5zdGF0dXMtY29udGFpbmVyIC5zdGF0dXMtLFxuLnN0YXR1cy1jb250YWluZXIgLnN0YXR1cy1mYWxzZXtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnN0YXR1cy1jb250YWluZXIgLm1hdC1pY29ue1xuICBmb250LXNpemU6IDE2cHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIC8qIGxpbmUtaGVpZ2h0OiAxNnB4OyAqL1xuICBoZWlnaHQ6IDE4cHg7XG4gIHdpZHRoOiAxNnB4O1xufVxuXG4vLyAudG9wLWFnZW50e1xuLy8gICBiYWNrZ3JvdW5kOiByZWQ7XG4vLyAgIGNvbG9yOiAjZmZmO1xuLy8gICBmbG9hdDogcmlnaHQ7XG4vLyAgIGZvbnQtc2l6ZTogMC42ZW07XG4vLyAgIHBhZGRpbmc6IDNweDtcbi8vICAgYm9yZGVyLXJhZGl1czogNXB4O1xuLy8gICBtYXJnaW46IDNweCAxNXB4IDBweCAwcHg7XG4vLyB9XG5cbi50b3AtYWdlbnQtc3RhcntcbiAgYmFja2dyb3VuZDogcmVkO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgaGVpZ2h0OiAyNXB4O1xuICB3aWR0aDogMjVweDtcbiAgdG9wOiA0MHB4O1xuICBsZWZ0OiAzNXB4O1xufVxuXG4vLyAuYXBwcy1wYWdlcntcbi8vICAgcG9zaXRpb246IGFic29sdXRlO1xuLy8gICB6LWluZGV4OiAxMDAwO1xuLy8gICB0b3A6IDBweDtcbi8vICAgaGVpZ2h0OiA2NXB4O1xuLy8gICB3aWR0aDogNyU7XG4vLyAgIG1hcmdpbi1sZWZ0OiA0NiU7XG4vLyAgIG1hcmdpbi1yaWdodDogNDUlO1xuLy8gICBjb2xvcjogI2ZmZjtcbi8vIH1cblxuLy8gLmFwcHMtcGFnZXIgbWF0LXNlbGVjdCAqe1xuLy8gICBjb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xuLy8gfVxuXG4vLyAuY2xvc2UtYXBwc3tcbi8vICAgbGluZS1oZWlnaHQ6IDE7XG4vLyAgIGhlaWdodDogMjBweDtcbi8vICAgd2lkdGg6IDIwcHg7XG4vLyAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbi8vICAgcmlnaHQ6IDNweDtcbi8vICAgdG9wOiAwcHg7XG4vLyB9XG4vLyAuY2xvc2UtYXBwcyBtYXQtaWNvbntcbi8vICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4vLyAgIGNvbG9yOiAjNDQ0NDQ0O1xuLy8gfVxuXG4ud2hpdGVib2FyZC1tZXNzYWdle1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMHB4O1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xuICAvLyB3aWR0aDogY2FsYyggMTAwJSAtIDIwcHggKTtcbiAgLy8gbWFyZ2luOiAxMHB4O1xuICAvLyBiYWNrZ3JvdW5kOiAjMDAwMDAwNDI7XG4gIC8vIGNvbG9yOiAjZmZmZmZmO1xuICAvLyBmb250LXNpemU6IDIycHg7XG59XG5cbi5tZXNzYWdlLXNwYWNle1xuICBoZWlnaHQ6IDY1cHg7XG4gIC8vIGJhY2tncm91bmQ6ICMwMDA7XG59XG5cbi53aGl0ZWJvYXJkLW1lc3NhZ2UgbWF0LWljb257XG4gIC8vIGZvbnQtc2l6ZTogMjhweCAhaW1wb3J0YW50O1xuICAvLyBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIC8vIHRvcDogLTVweDtcbiAgLy8gbGVmdDogLTVweDtcbiAgY29sb3I6ICM2MzYzNjM7XG59XG5cbi53aGl0ZWJvYXJkLW1lc3NhZ2UtdGV4dHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi8vIC5maWVsZC1jb250YWluZXJ7XG4vLyAgIHdpZHRoOiA5NyU7XG4vLyB9XG5cbi8vIC5tYXQtZm9ybS1maWVsZCB7XG4vLyAgIGZvbnQtc2l6ZTogMTRweDtcbi8vICAgd2lkdGg6IDEwMCU7XG4vLyB9XG5cbiNmdWxsLXNjcmVlbixcbi5mdWxsLXNjcmVlbntcbiAgYmFja2dyb3VuZDogI2UyZTJlMjtcbn1cblxuLm1hdC1zaWRlbmF2LWNvbnRlbnR7XG4gIGJhY2tncm91bmQ6ICNlMmUyZTI7XG59XG5cbi5tYXQtbWluaS1mYWJ7XG4gIHotaW5kZXg6IDE7XG4gIGJvdHRvbTogMi45cmVtO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNjBkZWcsIzI4OGM2YywjNGVhNzUyKTtcbn1cbiIsIi5tYXQtY2FyZCB7XG4gIG1hcmdpbjogNXB4IDBweDtcbiAgcGFkZGluZzogNXB4O1xufVxuXG5oNC5hZGRyZXNzIHtcbiAgbWFyZ2luOiAwcHggNXB4IDBweCAwcHg7XG4gIGNvbG9yOiAjNGM0YzRjO1xufVxuXG5zcGFuLmNyZWF0ZS1ieSB7XG4gIGZvbnQtc2l6ZTogMC44ZW07XG4gIGNvbG9yOiAjNGM0YzRjO1xufVxuXG5kaXYuYXZhdGFyLWNvbnRhaW5lciB7XG4gIHBhZGRpbmctdG9wOiA1cHg7XG59XG5cbi5hcHBzLWl0ZW0gLmNyZWF0ZS1ieS50b3Age1xuICBmb250LXNpemU6IDAuOGVtO1xuICBjb2xvcjogIzRjNGM0YztcbiAgYmFja2dyb3VuZDogcmVkO1xufVxuXG4uc3RhdHVzLWNvbnRhaW5lciB7XG4gIG1hcmdpbjogNXB4IDBweDtcbn1cblxuLnN0YXR1cy1jb250YWluZXIgLmFwcHMtc3RhdHVzIHtcbiAgZm9udC1zaXplOiAwLjVlbTtcbiAgcGFkZGluZzogMnB4IDVweCAwcHggOHB4O1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNjBkZWcsICMyZDJkMmQsICM0YTRhNGEpO1xufVxuXG4uc3RhdHVzLWNvbnRhaW5lciAuc3RhdHVzLSxcbi5zdGF0dXMtY29udGFpbmVyIC5zdGF0dXMtZmFsc2Uge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uc3RhdHVzLWNvbnRhaW5lciAubWF0LWljb24ge1xuICBmb250LXNpemU6IDE2cHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIC8qIGxpbmUtaGVpZ2h0OiAxNnB4OyAqL1xuICBoZWlnaHQ6IDE4cHg7XG4gIHdpZHRoOiAxNnB4O1xufVxuXG4udG9wLWFnZW50LXN0YXIge1xuICBiYWNrZ3JvdW5kOiByZWQ7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBoZWlnaHQ6IDI1cHg7XG4gIHdpZHRoOiAyNXB4O1xuICB0b3A6IDQwcHg7XG4gIGxlZnQ6IDM1cHg7XG59XG5cbi53aGl0ZWJvYXJkLW1lc3NhZ2Uge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMHB4O1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xufVxuXG4ubWVzc2FnZS1zcGFjZSB7XG4gIGhlaWdodDogNjVweDtcbn1cblxuLndoaXRlYm9hcmQtbWVzc2FnZSBtYXQtaWNvbiB7XG4gIGNvbG9yOiAjNjM2MzYzO1xufVxuXG4ud2hpdGVib2FyZC1tZXNzYWdlLXRleHQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBjb2xvcjogI2ZmZjtcbn1cblxuI2Z1bGwtc2NyZWVuLFxuLmZ1bGwtc2NyZWVuIHtcbiAgYmFja2dyb3VuZDogI2UyZTJlMjtcbn1cblxuLm1hdC1zaWRlbmF2LWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjZTJlMmUyO1xufVxuXG4ubWF0LW1pbmktZmFiIHtcbiAgei1pbmRleDogMTtcbiAgYm90dG9tOiAyLjlyZW07XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg2MGRlZywgIzI4OGM2YywgIzRlYTc1Mik7XG59Il19 */\"","import { SocketService } from './../services/socket.service';\nimport { MessageComponent } from './message/message.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { User } from './../models/user';\nimport { Observable } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { DataService } from './../data.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Application } from '../applications/application';\nimport { Users } from '../users/users';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-applications-dashboard',\n  templateUrl: './applications-dashboard.component.html',\n  styleUrls: ['./applications-dashboard.component.scss']\n})\nexport class ApplicationsDashboardComponent implements OnInit, OnDestroy {\n\n  public months = [\n    {display: 'January', value: '201901'},\n    {display: 'Febraury', value: '201902'}\n  ];\n\n  applicatiosOld = [];\n\n  public loggedUser: Users;\n  public message: string;\n  public fullScreen = false;\n  public user: any;\n\n  public topAgent: string;\n  public apps: any[];\n  constructor(\n    public dialog: MatDialog,\n    private dataService: DataService,\n    private authService: AuthService,\n    private socketService: SocketService,\n  ) { }\n\n  ngOnInit() {\n    this.authService.currentUser.subscribe(data => {\n      this.user = data;\n    });\n    this.getMessage();\n    this.getApplications();\n\n    this.socketService.get().subscribe(method => {\n      // console.log(method);\n      if ( typeof this[method] === 'function' ) {\n        this[method]();\n      }\n    });\n  }\n\n  getApplications() {\n    const where = `{\n      paid_ne: true,\n    }`;\n\n    const query = `\n    query{\n        applications(sort: \"createdAt:desc\", where: ${where}) {\n            id,\n            applicationType,\n            address,\n            approved,\n            createdAt,\n            denied,\n            listingAgreement,\n            offerOut,\n            offerExecuted,\n            closed,\n            moneyIn,\n            price,\n            invoicePaid,\n            invoiceOut,\n            agent {\n                id\n                fullName\n                avatar {\n                  url\n                }\n            }\n        }\n        applicationsConnection {\n          groupBy {\n            agent {\n              key\n              connection {\n                  aggregate {\n                      count\n                  }\n              }\n            }\n          }\n        }\n    }`;\n\n    this.dataService.getData(query).subscribe(res => {\n      this.apps = res.data.applications;\n      const agentStats: [] = res.data.applicationsConnection.groupBy.agent;\n      const stats = [];\n\n      agentStats.forEach((el: any) => {\n        const key = el.key;\n        const count = el.connection.aggregate.count;\n        stats.push({key, count});\n      });\n\n      stats.sort((a, b) => (a.count > b.count) ? -1 : 1);\n      this.topAgent = stats['0'].key;\n    });\n  }\n\n  getMessage() {\n    const query = `query{\n      static(id: \"5e5702eda23dfc62fc1bcf4d\"){\n        whiteBoardMessage\n      }\n    }`;\n    this.dataService.getData(query).subscribe(res => {\n      this.message = res.data.static.whiteBoardMessage;\n    });\n  }\n\n  editMessage() {\n    const dialogRef = this.dialog.open(MessageComponent, {\n      width: '550px',\n      data: {message: this.message}\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n      this.socketService.send('public', 'getMessage');\n      this.message = res;\n    });\n  }\n\n  openFullScreen() {\n    const element = document.getElementById('full-screen');\n    this.fullScreen = !this.fullScreen;\n    const screenfull = require('screenfull');\n    if (screenfull.isEnabled) {\n      screenfull.toggle(element);\n    }\n  }\n\n  migrateApps() {\n    this.applicatiosOld.forEach(appOld => {\n      console.log(appOld.address);\n      this.authService.migrateApp(appOld).subscribe(res => {\n        console.log(res);\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.socketService.closeConnection();\n  }\n}\n","export default \".full-width {\\n  width: 100%;\\n}\\n\\n.modal-loading {\\n  top: -25px;\\n  height: 5px;\\n  left: -20px;\\n  width: calc(100% + 40px);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC9hcHBsaWNhdGlvbnMtZGFzaGJvYXJkL21lc3NhZ2UvbWVzc2FnZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXBwbGljYXRpb25zLWRhc2hib2FyZC9tZXNzYWdlL21lc3NhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0FDQ0o7O0FERUU7RUFDRSxVQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7RUFDQSx3QkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvYXBwbGljYXRpb25zLWRhc2hib2FyZC9tZXNzYWdlL21lc3NhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbC13aWR0aHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5tb2RhbC1sb2FkaW5ne1xuICAgIHRvcDogLTI1cHg7XG4gICAgaGVpZ2h0OiA1cHg7XG4gICAgbGVmdDogLTIwcHg7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArIDQwcHgpO1xuICB9IiwiLmZ1bGwtd2lkdGgge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1vZGFsLWxvYWRpbmcge1xuICB0b3A6IC0yNXB4O1xuICBoZWlnaHQ6IDVweDtcbiAgbGVmdDogLTIwcHg7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKyA0MHB4KTtcbn0iXX0= */\"","import { DataService } from './../../data.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss']\n})\nexport class MessageComponent implements OnInit {\n  public message = '';\n  public loading: boolean;\n\n\n\n  constructor(\n    private dialogRef: MatDialogRef<MessageComponent>,\n    private dataService: DataService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) { }\n\n  ngOnInit() {\n    if(this.data){\n      this.message = this.data.message;\n    }\n  }\n\n  onSubmit(){\n    this.loading = true;\n    const appData = `mutation {\n      updateStatic(input: {\n        where: {\n          id: \"5e5702eda23dfc62fc1bcf4d\"\n        },\n        data: {\n          whiteBoardMessage: \"${this.message}\"\n        }\n      }) {\n        static {\n          whiteBoardMessage\n        }\n      }\n    }`;\n\n    this.dataService.updateData(appData).subscribe((res) => {\n      this.loading = false;\n      this.dialogRef.close(this.message);\n    });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy1zdGF0cy9hcHBsaWNhdGlvbnMtc3RhdHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { DataService } from './../data.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-applications-stats',\n  templateUrl: './applications-stats.component.html',\n  styleUrls: ['./applications-stats.component.scss']\n})\nexport class ApplicationsStatsComponent implements OnInit {\n\n  public stats: any[] = [];\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit() {\n    this.getStats();\n  }\n\n  getStats(){\n    const date = new Date();\n    const thisMonth = `${date.getFullYear()}-${('0' + (date.getMonth())).slice(-2)}-01`;\n    console.log(thisMonth);\n    const query = `query{\n        users(where: { applications: {createdAt_gte: \"${thisMonth}\"} }){\n            id\n            fullName\n            avatar{\n              url\n            }\n            applications(sort: \"createdAt:desc\"){\n                id\n                moneyIn\n                approved\n                invoiceOut\n                invoicePaid\n                createdAt\n            }\n        }\n    }`;\n\n    this.dataService.getData(query).subscribe(res => {\n      if (res.data.users.length > 0) {\n        const statsData: any[] = res.data.users;\n        statsData.forEach(element => {\n          // console.log(element);\n          const stats = {\n            id: element.id,\n            name: element.fullName,\n            avatar: element.avatar.length > 0 ? element.avatar['0'].url : '',\n            applications: element.applications.length,\n            moneyI: element.applications.reduce((total, apps) => (apps.moneyIn === true ? total + 1 : total), 0),\n            approved: element.applications.reduce((total, apps) => (apps.approved === true ? total + 1 : total), 0),\n            invoiceOut: element.applications.reduce((total, apps) => (apps.invoiceOut === true ? total + 1 : total), 0),\n            invoicePaid: element.applications.reduce((total, apps) => (apps.invoicePaid === true ? total + 1 : total), 0),\n          };\n          this.stats.push(stats);\n        });\n        this.stats.sort((a,b) => (a.applications > b.applications) ? -1 : ((b.applications > a.applications) ? 1 : 0));\n        console.log(this.stats);\n      }\n    });\n  }\n}\n","export default \".content {\\n  padding: 20px;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%;\\n}\\n\\nth {\\n  font-weight: 900;\\n  color: #000;\\n}\\n\\ntd, th {\\n  width: 8% !important;\\n}\\n\\n.mat-column-address {\\n  width: 20% !important;\\n}\\n\\n.fat-btn {\\n  margin: 4px 0px 0px;\\n  height: 50px;\\n}\\n\\n.mat-button-toggle-group {\\n  margin-top: 5px;\\n}\\n\\n.mat-column-edit button {\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC9hcHBsaWNhdGlvbnMvYXBwbGljYXRpb25zLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hcHBsaWNhdGlvbnMvYXBwbGljYXRpb25zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtBQ0NGOztBRENBO0VBQ0UsV0FBQTtBQ0VGOztBRENBO0VBQ0UsZUFBQTtFQUNBLFdBQUE7QUNFRjs7QURBQTtFQUNFLGdCQUFBO0VBQ0EsV0FBQTtBQ0dGOztBRENBO0VBQ0Usb0JBQUE7QUNFRjs7QURDQTtFQUNFLHFCQUFBO0FDRUY7O0FES0E7RUFDRSxtQkFBQTtFQUNBLFlBQUE7QUNGRjs7QURLQTtFQUNFLGVBQUE7QUNGRjs7QURLQTtFQUNFLFlBQUE7QUNGRiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy9hcHBsaWNhdGlvbnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudHtcbiAgcGFkZGluZzogMjBweDtcbn1cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5tYXQtZm9ybS1maWVsZCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgd2lkdGg6IDEwMCU7XG59XG50aHtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgY29sb3I6ICMwMDA7XG4gIC8vIGZvbnQtc2l6ZTogMTZweDtcbn1cblxudGQsIHRoIHtcbiAgd2lkdGg6IDglICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtY29sdW1uLWFkZHJlc3N7XG4gIHdpZHRoOiAyMCUgICFpbXBvcnRhbnQ7XG59XG5cbi8vIC5tYXQtY29sdW1uLWNyZWF0ZURhdGV7XG4vLyAgIHdpZHRoOiAyMCUgICFpbXBvcnRhbnQ7XG4vLyB9XG5cbi5mYXQtYnRue1xuICBtYXJnaW46IDRweCAwcHggMHB4O1xuICBoZWlnaHQ6IDUwcHg7XG59XG5cbi5tYXQtYnV0dG9uLXRvZ2dsZS1ncm91cHtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuXG4ubWF0LWNvbHVtbi1lZGl0IGJ1dHRvbntcbiAgZmxvYXQ6IHJpZ2h0O1xufSIsIi5jb250ZW50IHtcbiAgcGFkZGluZzogMjBweDtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgge1xuICBmb250LXdlaWdodDogOTAwO1xuICBjb2xvcjogIzAwMDtcbn1cblxudGQsIHRoIHtcbiAgd2lkdGg6IDglICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtY29sdW1uLWFkZHJlc3Mge1xuICB3aWR0aDogMjAlICFpbXBvcnRhbnQ7XG59XG5cbi5mYXQtYnRuIHtcbiAgbWFyZ2luOiA0cHggMHB4IDBweDtcbiAgaGVpZ2h0OiA1MHB4O1xufVxuXG4ubWF0LWJ1dHRvbi10b2dnbGUtZ3JvdXAge1xuICBtYXJnaW4tdG9wOiA1cHg7XG59XG5cbi5tYXQtY29sdW1uLWVkaXQgYnV0dG9uIHtcbiAgZmxvYXQ6IHJpZ2h0O1xufSJdfQ== */\"","import { SocketService } from './../services/socket.service';\nimport { AuthService } from './../services/auth.service';\nimport { CreateApplicationComponent } from './create-application/create-application.component';\nimport { DataService } from './../data.service';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { Application } from './application';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-applications',\n  templateUrl: './applications.component.html',\n  styleUrls: ['./applications.component.scss']\n})\nexport class ApplicationsComponent implements OnInit, OnDestroy {\n\n  displayedColumns: string[] = [];\n  dataSource: MatTableDataSource<Application>;\n\n  public applications: Application[] = [];\n  public loading = true;\n  public startPage = 0;\n  public limitPage = 10;\n  public totalPages: number;\n  public search = '';\n  public applicationType = 'Leasing';\n  public editing: string[] = [];\n\n  private applicationData: Application = {\n    id: '',\n    date: '',\n    createById: '',\n    createdAt: '',\n    address: '',\n    price: null,\n    moneyIn: null,\n    approved: null,\n    invoiceOut: null,\n    invoicePaid: null,\n    completed: null,\n    offerOut: null,\n    listingAgreement: null,\n    offerExecuted: null,\n    closed: null,\n    appType: '',\n    denied: null,\n  };\n\n  private userId: string;\n\n  searchUpdate = new Subject<string>();\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(\n    public dialog: MatDialog,\n    private dataService: DataService,\n    private authService: AuthService,\n    private socketService: SocketService,\n  ) {\n    this.dataSource = new MatTableDataSource(this.applications);\n  }\n\n  ngOnInit() {\n    this.displayedColumns = ['address', 'createdAt', 'applicationType', 'price', 'moneyIn', 'approved' , 'denied', 'edit'];\n    this.loading = true;\n    this.dataSource.sort = this.sort;\n\n    const user = this.authService.currentUserValue;\n    this.userId = user.user.id;\n    this.getApplications();\n\n    this.searchUpdate.pipe(\n      debounceTime(400),\n      distinctUntilChanged())\n      .subscribe(value => {\n        this.search = value;\n        this.getApplications();\n      });\n\n    this.socketService.get().subscribe(method => {\n      // console.log(method);\n      if ( typeof this[method] === 'function' ) {\n        this[method]();\n      }\n    });\n  }\n\n  keyUpLoading() {\n    this.loading = true;\n  }\n\n  displayCol(applicationType) {\n    this.loading = true;\n    this.applicationType = applicationType;\n    switch (applicationType) {\n      case 'Leasing':\n        this.displayedColumns = ['address', 'createdAt', 'applicationType', 'price', 'moneyIn', 'approved' , 'denied', 'edit'];\n        break;\n      case 'Listing':\n        this.displayedColumns = ['address', 'createdAt', 'applicationType',\n        'price', 'listingAgreement', 'offerExecuted', 'closed', 'edit'];\n        break;\n      case 'Buying':\n        this.displayedColumns = ['address', 'createdAt', 'applicationType',\n        'price', 'offerOut', 'offerExecuted', 'closed', 'edit'];\n        break;\n      default:\n        break;\n    }\n    this.getApplications();\n  }\n\n  getApplications() {\n    const where = `{\n      agent: \"${this.userId}\",\n      address_contains: \"${this.search}\",\n      applicationType: \"${this.applicationType}\"\n    }`;\n\n    const query = `\n    query{\n        applications(sort: \"createdAt:desc\", start: ${this.startPage}, limit: ${this.limitPage}, where: ${where}) {\n            id,\n            applicationType,\n            address,\n            approved,\n            createdAt,\n            denied,\n            listingAgreement,\n            offerOut,\n            offerExecuted,\n            closed,\n            moneyIn,\n            price,\n            agent {\n                id\n                fullName\n            }\n        }\n        applicationsConnection (where: ${where}) {\n            aggregate {\n                count\n            }\n        }\n    }`;\n\n    this.dataService.getData(query).subscribe(({ data, loading })  => {\n      this.dataSource = new MatTableDataSource<Application>(data.applications);\n      this.totalPages = data.applicationsConnection.aggregate.count;\n      this.loading = false;\n    });\n  }\n\n  createApp(): void {\n    const dialogRef = this.dialog.open(CreateApplicationComponent, {\n      width: '550px',\n      data: {data: this.applicationData, applicationType: this.applicationType}\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n      this.socketService.send('public', 'getApplications');\n      this.getApplications();\n    });\n  }\n\n  edit(appId) {\n    if (!this.editing.includes(appId)) {\n      this.editing.push(appId);\n    }\n  }\n\n  save(appId) {\n    if (this.editing.includes(appId)) {\n      this.editing.splice( this.editing.indexOf(appId), 1 );\n    }\n  }\n\n  updateApp(app: Application, field) {\n    if (this.editing.includes(app.id)) {\n      this.loading = true;\n      app[field] = !app[field];\n      const appData = `mutation {\n          updateApplication(input: {\n            where: {\n              id: \"${app.id}\"\n            },\n            data: {\n              ${field}: ${app[field]}\n            }\n          }) {\n            application {\n              id\n            }\n          }\n        }`;\n\n      this.dataService.updateData(appData).subscribe(() => {\n        this.socketService.send('public', 'getApplications');\n        this.getApplications();\n      });\n    }\n  }\n\n  paginator(e) {\n    this.loading = true;\n    this.startPage = e.pageIndex !== 0 ? e.pageIndex * e.pageSize : 0;\n    this.limitPage = e.pageSize;\n    this.getApplications();\n  }\n\n  ngOnDestroy(): void {\n    this.socketService.closeConnection();\n  }\n}\n","export default \".full-width {\\n  width: 100%;\\n}\\n\\n.full-width mat-button-toggle {\\n  width: 50%;\\n}\\n\\n.margin-botton {\\n  margin: 10px 0px 5px;\\n}\\n\\n.mat-dialog-content {\\n  overflow: hidden;\\n}\\n\\n.image-upload > input {\\n  display: none;\\n}\\n\\n.margin {\\n  margin: 10px;\\n}\\n\\n.modal-loading {\\n  top: -25px;\\n  height: 5px;\\n  left: -20px;\\n  width: calc(100% + 40px);\\n}\\n\\n.mat-button-toggle-group {\\n  margin: 5px 0px 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC9hcHBsaWNhdGlvbnMvY3JlYXRlLWFwcGxpY2F0aW9uL2NyZWF0ZS1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXBwbGljYXRpb25zL2NyZWF0ZS1hcHBsaWNhdGlvbi9jcmVhdGUtYXBwbGljYXRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSxVQUFBO0FDQ0Y7O0FERUE7RUFDRSxvQkFBQTtBQ0NGOztBRENBO0VBQ0UsZ0JBQUE7QUNFRjs7QURDQTtFQUNFLGFBQUE7QUNFRjs7QURDQTtFQUNFLFlBQUE7QUNFRjs7QURBQTtFQUNFLFVBQUE7RUFDQSxXQUFBO0VBQ0EsV0FBQTtFQUNBLHdCQUFBO0FDR0Y7O0FEQUE7RUFDRSxvQkFBQTtBQ0dGIiwiZmlsZSI6InNyYy9hcHAvYXBwbGljYXRpb25zL2NyZWF0ZS1hcHBsaWNhdGlvbi9jcmVhdGUtYXBwbGljYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbC13aWR0aHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5mdWxsLXdpZHRoIG1hdC1idXR0b24tdG9nZ2xle1xuICB3aWR0aDogNTAlO1xufVxuXG4ubWFyZ2luLWJvdHRvbntcbiAgbWFyZ2luOiAxMHB4IDBweCA1cHg7XG59XG4ubWF0LWRpYWxvZy1jb250ZW50e1xuICBvdmVyZmxvdzogIGhpZGRlbjtcbn1cblxuLmltYWdlLXVwbG9hZCA+IGlucHV0IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLm1hcmdpbntcbiAgbWFyZ2luOiAxMHB4O1xufVxuLm1vZGFsLWxvYWRpbmd7XG4gIHRvcDogLTI1cHg7XG4gIGhlaWdodDogNXB4O1xuICBsZWZ0OiAtMjBweDtcbiAgd2lkdGg6IGNhbGMoMTAwJSArIDQwcHgpO1xufVxuXG4ubWF0LWJ1dHRvbi10b2dnbGUtZ3JvdXB7XG4gIG1hcmdpbjogNXB4IDBweCAxNXB4O1xufSIsIi5mdWxsLXdpZHRoIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5mdWxsLXdpZHRoIG1hdC1idXR0b24tdG9nZ2xlIHtcbiAgd2lkdGg6IDUwJTtcbn1cblxuLm1hcmdpbi1ib3R0b24ge1xuICBtYXJnaW46IDEwcHggMHB4IDVweDtcbn1cblxuLm1hdC1kaWFsb2ctY29udGVudCB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5pbWFnZS11cGxvYWQgPiBpbnB1dCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5tYXJnaW4ge1xuICBtYXJnaW46IDEwcHg7XG59XG5cbi5tb2RhbC1sb2FkaW5nIHtcbiAgdG9wOiAtMjVweDtcbiAgaGVpZ2h0OiA1cHg7XG4gIGxlZnQ6IC0yMHB4O1xuICB3aWR0aDogY2FsYygxMDAlICsgNDBweCk7XG59XG5cbi5tYXQtYnV0dG9uLXRvZ2dsZS1ncm91cCB7XG4gIG1hcmdpbjogNXB4IDBweCAxNXB4O1xufSJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DataService } from '../../data.service';\nimport { AuthService } from './../../services/auth.service';\nimport { Application } from 'src/app/applications/application';\n\n@Component({\n  selector: 'app-create-application',\n  templateUrl: './create-application.component.html',\n  styleUrls: ['./create-application.component.scss']\n})\nexport class CreateApplicationComponent implements OnInit {\n\n  public loading = false;\n  public hide = true;\n  public avatar;\n  public task;\n  public downloadURL;\n  public date: string;\n  public appType: string;\n  private userId: string;\n\n  createApplicationForm = new FormGroup({\n    address: new FormControl('', Validators.required),\n    price: new FormControl('', Validators.required),\n    moneyIn: new FormControl(false),\n    approved: new FormControl(false),\n    denied: new FormControl(false),\n    offerOut: new FormControl(false),\n    listingAgreement: new FormControl(false),\n    offerExecuted: new FormControl(false),\n    closed: new FormControl(false),\n    // invoicePaid: new FormControl(''),\n  });\n\n  public imageSrc;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateApplicationComponent>,\n    private authService: AuthService,\n    private dataService: DataService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit() {\n    const user = this.authService.currentUserValue;\n    this.userId = user.user.id;\n    this.appType = this.data.applicationType;\n    console.log(this.data.applicationType);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  createApplication() {\n    const appData = `mutation{\n        createApplication(input: {\n        data: {\n          address: \"${this.createApplicationForm.value.address}\",\n          price: ${this.createApplicationForm.value.price},\n          moneyIn: ${this.createApplicationForm.value.moneyIn},\n          approved: ${this.createApplicationForm.value.approved},\n          denied: ${this.createApplicationForm.value.denied},\n          offerOut: ${this.createApplicationForm.value.offerOut},\n          listingAgreement: ${this.createApplicationForm.value.listingAgreement},\n          offerExecuted: ${this.createApplicationForm.value.offerExecuted},\n          closed: ${this.createApplicationForm.value.closed},\n          applicationType: ${this.appType},\n          agent: \"${this.userId}\"\n        }\n      }) {\n        application {\n          address\n          id\n          agent {\n            id\n          }\n        }\n      }\n    }`;\n\n    this.dataService.createData(appData)\n    .subscribe(res => {\n      this.dialogRef.close();\n    });\n  }\n}\n","export default \".content {\\n  padding: 20px;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%;\\n}\\n\\ntd, th {\\n  width: 5% !important;\\n}\\n\\n.mat-column-createBy {\\n  width: 9% !important;\\n}\\n\\n.mat-column-address {\\n  width: 14% !important;\\n}\\n\\n.fat-btn {\\n  margin: 4px 0px 0px;\\n  height: 50px;\\n}\\n\\nth {\\n  font-weight: 900;\\n  color: #000;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC9hcHBsaWNhdGlvbnMvbWFuYWdlLWFwcGxpY2F0aW9ucy9tYW5hZ2UtYXBwbGljYXRpb25zLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hcHBsaWNhdGlvbnMvbWFuYWdlLWFwcGxpY2F0aW9ucy9tYW5hZ2UtYXBwbGljYXRpb25zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtBQ0NGOztBRENBO0VBQ0UsV0FBQTtBQ0VGOztBRENBO0VBQ0UsZUFBQTtFQUNBLFdBQUE7QUNFRjs7QURDQTtFQUNFLG9CQUFBO0FDRUY7O0FEQUE7RUFDRSxvQkFBQTtBQ0dGOztBRERBO0VBQ0UscUJBQUE7QUNJRjs7QURFQTtFQUNFLG1CQUFBO0VBQ0EsWUFBQTtBQ0NGOztBREVBO0VBQ0UsZ0JBQUE7RUFDQSxXQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9hcHBsaWNhdGlvbnMvbWFuYWdlLWFwcGxpY2F0aW9ucy9tYW5hZ2UtYXBwbGljYXRpb25zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnR7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICBmb250LXNpemU6IDE0cHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50ZCwgdGgge1xuICB3aWR0aDogNSUgIWltcG9ydGFudDtcbn1cbi5tYXQtY29sdW1uLWNyZWF0ZUJ5e1xuICB3aWR0aDogOSUgICFpbXBvcnRhbnQ7XG59XG4ubWF0LWNvbHVtbi1hZGRyZXNze1xuICB3aWR0aDogMTQlICAhaW1wb3J0YW50O1xufVxuLy8gLm1hdC1jb2x1bW4tY3JlYXRlRGF0ZXtcbi8vICAgd2lkdGg6IDglICAhaW1wb3J0YW50O1xuLy8gfVxuXG4uZmF0LWJ0bntcbiAgbWFyZ2luOiA0cHggMHB4IDBweDtcbiAgaGVpZ2h0OiA1MHB4O1xufVxuXG50aHtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgY29sb3I6ICMwMDA7XG4gIC8vIGZvbnQtc2l6ZTogMTZweDtcbn1cbiIsIi5jb250ZW50IHtcbiAgcGFkZGluZzogMjBweDtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB3aWR0aDogMTAwJTtcbn1cblxudGQsIHRoIHtcbiAgd2lkdGg6IDUlICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtY29sdW1uLWNyZWF0ZUJ5IHtcbiAgd2lkdGg6IDklICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtY29sdW1uLWFkZHJlc3Mge1xuICB3aWR0aDogMTQlICFpbXBvcnRhbnQ7XG59XG5cbi5mYXQtYnRuIHtcbiAgbWFyZ2luOiA0cHggMHB4IDBweDtcbiAgaGVpZ2h0OiA1MHB4O1xufVxuXG50aCB7XG4gIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIGNvbG9yOiAjMDAwO1xufSJdfQ== */\"","import { AngularFireAuth } from '@angular/fire/auth';\nimport { CreateApplicationComponent } from './../create-application/create-application.component';\nimport { DataService } from './../../data.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { map, tap, scan, mergeMap, throttleTime } from 'rxjs/operators';\nimport { Application } from './../application';\n\n\n@Component({\n  selector: 'app-manage-applications',\n  templateUrl: './manage-applications.component.html',\n  styleUrls: ['./manage-applications.component.scss']\n})\nexport class ManageApplicationsComponent implements OnInit {\n\n  displayedColumns: string[] = ['address', 'createDate', 'createBy', 'saleType', 'price', 'offerOut', 'listingAgreement', 'offerExecuted', 'closed', 'moneyIn', 'approved' , 'denied', 'invoiceOut', 'invoicePaid', 'completed'];\n  dataSource: MatTableDataSource<Application>;\n\n  // public users: Users[] = [\n  //   {id: 'ewweewqe', name: 'Marcel Cruz', email: 'marclcruz85@gmail.com', isAdmin: true, isActive: false, teamId: null},\n  // ];\n\n  public applications: Application[] = [];\n  public loading = false;\n  public selectedMonth;\n  public selectedYear;\n\n  public years = [\n    {display: '2019', value: '2019'},\n    {display: '2020', value: '2020'},\n    {display: '2021', value: '2021'},\n  ];\n  public months = [\n    {display: 'January', value: '01'},\n    {display: 'January', value: '02'},\n    {display: 'January', value: '03'},\n    {display: 'January', value: '04'},\n    {display: 'January', value: '05'},\n    {display: 'January', value: '06'},\n    {display: 'January', value: '07'},\n    {display: 'January', value: '08'},\n    {display: 'January', value: '09'},\n    {display: 'January', value: '10'},\n    {display: 'January', value: '11'},\n    {display: 'January', value: '12'},\n  ];\n\n  private applicationData: Application = {\n    id: '',\n    date: '',\n    createById: '',\n    createdAt: '',\n    address: '',\n    price: null,\n    moneyIn: null,\n    approved: null,\n    invoiceOut: null,\n    invoicePaid: null,\n    completed: null,\n    offerOut: null,\n    listingAgreement: null,\n    offerExecuted: null,\n    closed: null,\n    appType: '',\n    denied: null,\n  };\n\n  private userId: string;\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(\n    public dialog: MatDialog,\n    private dataService: DataService,\n    private afAuth: AngularFireAuth,\n  ) {\n    this.dataSource = new MatTableDataSource(this.applications);\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    const today = new Date();\n    const monthCurr = String(today.getMonth() + 1).padStart(2, '0');\n    const yearCurr = today.getFullYear();\n    console.log(yearCurr);\n    this.selectedMonth = monthCurr.toString();\n    this.selectedYear = yearCurr.toString();\n\n    this.dataSource.sort = this.sort;\n    this.afAuth.user.subscribe(res => {\n      if (res) {\n        this.userId = res.uid;\n        this.getApplications();\n      }\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  addUser(): void {\n    const dialogRef = this.dialog.open(CreateApplicationComponent, {\n      width: '550px',\n      data: this.applicationData\n    });\n\n    dialogRef.afterClosed().subscribe();\n  }\n\n  // getApplications() {\n  //     this.dataService.getUserApplications(this.userId).subscribe(res => {\n  //       console.log(res);\n  //       this.dataSource = new MatTableDataSource<Application>(res);\n  //       this.loading = false;\n  //     });\n  // }\n  getApplications() {\n    const start = `${this.selectedYear}${this.selectedMonth}01`;\n    const end = `${this.selectedYear}${this.selectedMonth}31`;\n    this.dataService.getAdminApplications(start, end).subscribe(res => {\n      console.log(res);\n      // this.topAgent = res['topAgents']['0'];\n      // const appsData: Application[] = res;\n      // this.applications = appsData;\n      this.dataSource = new MatTableDataSource<Application>(res);\n      this.loading = false;\n    });\n  }\n\n  updateApp(app: Application, field) {\n    // this.loading = true;\n    app[field] = !app[field];\n    this.dataService.updateApp(app).then(res => {\n      console.log('record Updated ', res);\n    }).catch(err => console.log(err));\n  }\n\n  changeMonth(event){\n    this.selectedMonth = event.value;\n    console.log(this.selectedMonth);\n    this.getApplications();\n  }\n\n  changeYear(event){\n    this.selectedYear = event.value;\n    console.log(this.selectedMonth);\n    this.getApplications();\n  }\n}\n","import { Users } from './users/users';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Injectable } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private userDetails: firebase.User;\n\n  constructor(\n    private fireAuth: AngularFireAuth,\n  ) {\n      this.fireAuth.authState.subscribe(res => {\n        if (res) {\n          this.userDetails = res;\n        }\n      });\n    }\n\n    getUser() {\n      if (this.userDetails) {\n        return this.userDetails;\n      }\n    }\n\n    login(email: string, password: string) {\n      return this.fireAuth.auth.signInWithEmailAndPassword(email, password);\n    }\n\n    register(user: Users, password: string) {\n      return this.fireAuth.auth.createUserWithEmailAndPassword(user.email, password);\n      // .then(res => {\n      //   user.id = res.user.uid;\n      //   return this.dataService.createUser(user);\n      // }).catch(err => {\n      //   console.log(err);\n      // });\n    }\n\n    forgot(email: string) {\n      return this.fireAuth.auth.sendPasswordResetEmail(email);\n    }\n\n    sendVerificationEmail() {\n      return this.fireAuth.auth.currentUser.sendEmailVerification();\n    }\n\n    signOut() {\n      return this.fireAuth.auth.signOut();\n    }\n}\n","export class Input {\n  name: string;\n  pageNumber: number;\n  type: string; // bind this in HTML when this issue will be fixed https://github.com/angular/angular/issues/13243\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  value; any;\n  class: string;\n  options: [];\n  spacing: number;\n  maxLen: number;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Router } from '@angular/router';\nimport { Component, OnInit, NgZone } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.zone.run(() => this.router.navigateByUrl('/dashboard/applications-dashboard'))\n  }\n\n}\n","import { Users } from './users/users';\nimport { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { Application } from './applications/application';\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private user: Users;\n  private userId: string;\n\n  constructor(\n    private afStore: AngularFirestore,\n    private apollo: Apollo,\n  ) {\n  }\n\n  getData(query) {\n    return this.apollo.query<any>({\n      query: gql`${query}`,\n      fetchPolicy: 'network-only',\n      errorPolicy: 'all',\n    });\n  }\n\n  createData(data) {\n    return this.apollo.mutate({\n      mutation: gql`${data}`,\n    });\n  }\n\n  updateData(data) {\n    return this.apollo.mutate({\n      mutation: gql`${data}`,\n    });\n  }\n\n  createUser(user: Users) {\n    return this.afStore.collection('users').doc(user.id).set(user);\n  }\n\n  async createUserAndTeam(user: Users) {\n    return await this.createTeam().then(res => {\n      user.teamId = res.id;\n      this.afStore.collection('users').doc(user.id).set(user);\n    }).catch(err => console.log(err));\n  }\n\n  createTeam() {\n    return this.afStore.collection('teams').add({});\n  }\n\n\n  getUser(userId) {\n    return this.afStore.collection('users').doc<Users>(userId);\n  }\n\n  getUsers() {\n    return this.afStore.collection<Users>('users').valueChanges();\n  }\n\n  // createApp(appData: Application) {\n  //   return this.afStore.collection('applications').doc(appData.id).set(appData);\n  // }\n\n  getApplications(docName: string) {\n    return this.afStore.collection('references').doc<Application>(docName).valueChanges();\n  }\n\n  getAllApps() {\n    return this.afStore.collection('applications').valueChanges();\n  }\n\n  getAdminApplications(start, end) {\n    return this.afStore.collection<Application>('applications', ref =>\n      ref.orderBy('date').startAt(start).endAt(end)\n    ).valueChanges();\n  }\n\n  getUserApplications(userId) {\n    return this.afStore.collection<Application>('applications', ref =>\n      ref.where('createById', '==', userId).where('completed', '==', false)\n    ).valueChanges();\n  }\n\n  getStats(thisMonth: string) {\n    return this.afStore.collection('statistics', ref =>\n      ref.orderBy('statsData.app', 'desc')\n      .where('range', '==', 'monthly')\n      .where('statsData.date', '==', thisMonth)\n    )\n    .valueChanges();\n  }\n\n  updateApp(app: Application) {\n    console.log(app);\n    return this.afStore.collection('applications').doc(app.id).set(app, {merge: true});\n  }\n\n  saveMessage(message: string) {\n    return this.afStore.collection('message').doc('dashboard-message').set({message}, {merge: true});\n  }\n\n  getMessage() {\n    return this.afStore.collection('message').doc<string>('dashboard-message').valueChanges();\n  }\n}\n","export default \".content {\\n  background: #fafafa;\\n  height: 100%;\\n}\\n\\nmat-card {\\n  max-width: 30%;\\n  min-width: 30%;\\n}\\n\\n.full-width {\\n  width: 100%;\\n}\\n\\n.padding {\\n  padding: 0px 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC9mb3Jnb3QtcGFzc3dvcmQvZm9yZ290LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9mb3Jnb3QtcGFzc3dvcmQvZm9yZ290LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQUE7RUFHQSxZQUFBO0FDREY7O0FER0E7RUFDRSxjQUFBO0VBQ0EsY0FBQTtBQ0FGOztBREdBO0VBQ0UsV0FBQTtBQ0FGOztBREdBO0VBQ0UsaUJBQUE7QUNBRiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudHtcbiAgYmFja2dyb3VuZDogI2ZhZmFmYTtcbiAgLy8gYmFja2dyb3VuZDogcmdiKDU3LDQ4LDIxOSk7XG4gIC8vIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICMzOTMwZGIgMCUsICMwMDk1ZmYgMTAwJSk7XG4gIGhlaWdodDogMTAwJTtcbn1cbm1hdC1jYXJke1xuICBtYXgtd2lkdGg6IDMwJTtcbiAgbWluLXdpZHRoOiAzMCU7XG59XG5cbi5mdWxsLXdpZHRoe1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnBhZGRpbmd7XG4gIHBhZGRpbmc6IDBweCAxMHB4O1xufVxuIiwiLmNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiAjZmFmYWZhO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbm1hdC1jYXJkIHtcbiAgbWF4LXdpZHRoOiAzMCU7XG4gIG1pbi13aWR0aDogMzAlO1xufVxuXG4uZnVsbC13aWR0aCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ucGFkZGluZyB7XG4gIHBhZGRpbmc6IDBweCAxMHB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  forgotForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n  });\n\n  constructor(\n    private authService: AuthService,\n    private snackBard: MatSnackBar,\n    private router: Router,\n    ) { }\n\n  ngOnInit() {\n  }\n\n  forgot() {\n    const email = this.forgotForm.value.email;\n\n    this.authService.forgotPassword(email)\n    .pipe(first())\n    .subscribe(\n        data => {\n          // this.presentToast('Please check your emails for a password reset directions');\n          this.snackBard.open('Please check your email for instructions', null, {duration: 3000});\n          this.router.navigate(['/login']);\n        },\n        error => {\n          console.log(error);\n          const errorMessage = error['0'].messages['0'].message;\n          this.snackBard.open(errorMessage, null, {duration: 3000});\n          // this.presentToast(errorMessage);\n          // this.loading = false;\n        });\n  }\n\n}\n","export default \".content {\\n  padding: 20px;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%;\\n}\\n\\ntd, th {\\n  width: 15%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC9mb3JtLWxpc3QvZm9ybS1saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9mb3JtLWxpc3QvZm9ybS1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtBQ0NGOztBRENBO0VBQ0UsV0FBQTtBQ0VGOztBRENBO0VBQ0UsZUFBQTtFQUNBLFdBQUE7QUNFRjs7QURDQTtFQUNFLFVBQUE7QUNFRiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tbGlzdC9mb3JtLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudHtcbiAgcGFkZGluZzogMjBweDtcbn1cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5tYXQtZm9ybS1maWVsZCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRkLCB0aCB7XG4gIHdpZHRoOiAxNSU7XG59XG4iLCIuY29udGVudCB7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG5cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5tYXQtZm9ybS1maWVsZCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRkLCB0aCB7XG4gIHdpZHRoOiAxNSU7XG59Il19 */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface FormData {\n  file: string;\n  name: string;\n  details: string;\n}\n\nconst forms: FormData[] = [\n  {file: 'ar-11', name: 'AR-11', details: 'Alien’s Change of Address Card'},\n  {file: 'n-400', name: 'N-400', details: 'Application for Naturalization'},\n  {file: 'g-28', name: 'G-28', details: 'Notice of Entry of Appearance as Attorney or Accredited Representative'},\n  {file: 'i-131', name: 'I-131', details: 'Application for Travel Document'},\n  {file: 'i-90', name: 'I-90', details: 'Alien’s Change of Address Card'},\n]\n\n@Component({\n  selector: 'app-form-list',\n  templateUrl: './form-list.component.html',\n  styleUrls: ['./form-list.component.scss']\n})\nexport class FormListComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'details'];\n  dataSource: MatTableDataSource<FormData>;\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor() {\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(forms);\n  }\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","export default \".container {\\n  margin: 2rem 0 3rem;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n}\\n\\n.form-value {\\n  position: absolute;\\n  left: 1rem;\\n  font-size: 1.5rem;\\n}\\n\\n#input-form {\\n  position: absolute;\\n  z-index: 1;\\n}\\n\\n#input-form input {\\n  font-size: 1.1rem;\\n  position: absolute;\\n  background: transparent;\\n  border: none;\\n}\\n\\n#input-form textarea {\\n  font-size: 1.1rem;\\n  position: absolute;\\n  background: transparent;\\n  border: none;\\n}\\n\\n#input-form .mat-form-field {\\n  font-size: 1.1rem;\\n  position: absolute;\\n  background: transparent;\\n  border: none;\\n}\\n\\n#input-form select {\\n  font-size: 0.9em;\\n  position: absolute;\\n  background: transparent;\\n  border: none;\\n  font-family: \\\"Courier New\\\", Courier, monospace;\\n}\\n\\ninput[type=radio] {\\n  margin-left: 0px !important;\\n  margin-top: 1px !important;\\n}\\n\\n.form-actions {\\n  position: fixed;\\n  right: 0px;\\n  margin: 10px 15px;\\n  z-index: 150;\\n}\\n\\n.form-actions .md-24 {\\n  font-size: 28px;\\n}\\n\\n.loading-top {\\n  position: absolute;\\n}\\n\\n.page {\\n  position: relative;\\n}\\n\\n.paginator {\\n  position: fixed;\\n  width: 100%;\\n  bottom: 0px;\\n  text-align: center;\\n  background: #000;\\n  color: #fff;\\n  opacity: 0.6 !important;\\n  z-index: 999;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC9mb3JtL2Zvcm0vZm9ybS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvZm9ybS9mb3JtL2Zvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBQTtFQUNBLG9CQUFBO0VBQUEsYUFBQTtFQUNBLHdCQUFBO1VBQUEsdUJBQUE7QUNDRjs7QURFQTtFQUNJLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtFQUNBLFVBQUE7QUNDSjs7QURBSTtFQUNJLGlCQUFBO0VBRUEsa0JBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7QUNDUjs7QURFSTtFQUNJLGlCQUFBO0VBRUEsa0JBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7QUNEUjs7QURJSTtFQUNFLGlCQUFBO0VBRUEsa0JBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7QUNITjs7QURRSTtFQUNFLGdCQUFBO0VBRUEsa0JBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7RUFDQSw4Q0FBQTtBQ1BOOztBRGFBO0VBQ0UsMkJBQUE7RUFDQSwwQkFBQTtBQ1ZGOztBRGFBO0VBQ0UsZUFBQTtFQUNBLFVBQUE7RUFDQSxpQkFBQTtFQUNBLFlBQUE7QUNWRjs7QURhQTtFQUNFLGVBQUE7QUNWRjs7QURhQTtFQUNFLGtCQUFBO0FDVkY7O0FEYUE7RUFDRSxrQkFBQTtBQ1ZGOztBRGNBO0VBQ0EsZUFBQTtFQUNBLFdBQUE7RUFDQSxXQUFBO0VBQ0Msa0JBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7QUNYRCIsImZpbGUiOiJzcmMvYXBwL2Zvcm0vZm9ybS9mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIG1hcmdpbjogMnJlbSAwIDNyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uZm9ybS12YWx1ZXtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMXJlbTtcbiAgICBmb250LXNpemU6IDEuNXJlbTtcbn1cblxuI2lucHV0LWZvcm0ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAxO1xuICAgICYgaW5wdXQge1xuICAgICAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgICAgICAgLy8gdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAvLyBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG4gICAgfVxuICAgICYgdGV4dGFyZWEge1xuICAgICAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgICAgICAgLy8gdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAvLyBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG4gICAgfVxuICAgICYgLm1hdC1mb3JtLWZpZWxke1xuICAgICAgZm9udC1zaXplOiAxLjFyZW07XG4gICAgICAvLyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAvLyBtYXJnaW4tdG9wOiAtNXB4O1xuICAgICAgLy8gYm9yZGVyOiAxcHggc29saWQgcmVkO1xuICAgIH1cblxuICAgICYgc2VsZWN0IHtcbiAgICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgICAvLyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBmb250LWZhbWlseTogJ0NvdXJpZXIgTmV3JywgQ291cmllciwgbW9ub3NwYWNlO1xuICAgICAgLy8gbWFyZ2luLXRvcDogLTVweDtcbiAgICAgIC8vIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbiAgICB9XG59XG5cbmlucHV0W3R5cGU9cmFkaW9de1xuICBtYXJnaW4tbGVmdDogMHB4ICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi10b3A6IDFweCAhaW1wb3J0YW50O1xufVxuXG4uZm9ybS1hY3Rpb25ze1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAwcHg7XG4gIG1hcmdpbjogMTBweCAxNXB4O1xuICB6LWluZGV4OiAxNTA7XG59XG5cbi5mb3JtLWFjdGlvbnMgLm1kLTI0e1xuICBmb250LXNpemU6IDI4cHg7XG59XG5cbi5sb2FkaW5nLXRvcHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xufVxuXG4ucGFnZXtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5cbi5wYWdpbmF0b3J7XG5wb3NpdGlvbjogZml4ZWQ7XG53aWR0aDogMTAwJTtcbmJvdHRvbTogMHB4O1xuIHRleHQtYWxpZ246IGNlbnRlcjtcbiBiYWNrZ3JvdW5kOiAjMDAwO1xuIGNvbG9yOiAjZmZmO1xuIG9wYWNpdHk6IDAuNiAhaW1wb3J0YW50O1xuIHotaW5kZXg6IDk5OTtcbn1cblxuIiwiLmNvbnRhaW5lciB7XG4gIG1hcmdpbjogMnJlbSAwIDNyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uZm9ybS12YWx1ZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMXJlbTtcbiAgZm9udC1zaXplOiAxLjVyZW07XG59XG5cbiNpbnB1dC1mb3JtIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAxO1xufVxuI2lucHV0LWZvcm0gaW5wdXQge1xuICBmb250LXNpemU6IDEuMXJlbTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiBub25lO1xufVxuI2lucHV0LWZvcm0gdGV4dGFyZWEge1xuICBmb250LXNpemU6IDEuMXJlbTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiBub25lO1xufVxuI2lucHV0LWZvcm0gLm1hdC1mb3JtLWZpZWxkIHtcbiAgZm9udC1zaXplOiAxLjFyZW07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogbm9uZTtcbn1cbiNpbnB1dC1mb3JtIHNlbGVjdCB7XG4gIGZvbnQtc2l6ZTogMC45ZW07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgZm9udC1mYW1pbHk6IFwiQ291cmllciBOZXdcIiwgQ291cmllciwgbW9ub3NwYWNlO1xufVxuXG5pbnB1dFt0eXBlPXJhZGlvXSB7XG4gIG1hcmdpbi1sZWZ0OiAwcHggIWltcG9ydGFudDtcbiAgbWFyZ2luLXRvcDogMXB4ICFpbXBvcnRhbnQ7XG59XG5cbi5mb3JtLWFjdGlvbnMge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAwcHg7XG4gIG1hcmdpbjogMTBweCAxNXB4O1xuICB6LWluZGV4OiAxNTA7XG59XG5cbi5mb3JtLWFjdGlvbnMgLm1kLTI0IHtcbiAgZm9udC1zaXplOiAyOHB4O1xufVxuXG4ubG9hZGluZy10b3Age1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi5wYWdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ucGFnaW5hdG9yIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB3aWR0aDogMTAwJTtcbiAgYm90dG9tOiAwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgY29sb3I6ICNmZmY7XG4gIG9wYWNpdHk6IDAuNiAhaW1wb3J0YW50O1xuICB6LWluZGV4OiA5OTk7XG59Il19 */\"","import { Input } from './../../core/input';\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\nimport { PDFDocumentProxy } from 'ng2-pdf-viewer';\nimport { PDFAnnotationData } from 'pdfjs-dist/build/pdf';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { saveAs } from 'file-saver';\n\nimport * as print from 'print-js';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n\n  readonly dpiRatio = 96 / 72;\n  public pdfSrc;\n  public myForm: FormGroup;\n  public inputList: Input[] = [];\n  public zoom = 1;\n  private contactId: string;\n  public blobUrl: any;\n  public loading: boolean;\n  public isChecked = false;\n  public checkBoxSize: string;\n  public formName: string;\n\n  // public pageNumber: number;\n  public page: number = 1;\n  public totalPages: number;\n  public isLoaded: boolean = false;\n\n  public fomrValues = [\n    {name: 'Family Name Last Name', value: 'Marcel'},\n    {name: 'LastName', value: 'Cruz'},\n    {name: 'Group1', value: 'Choice4'},\n  ];\n\n  constructor(\n    private _fb: FormBuilder,\n    private activateRoute : ActivatedRoute,\n    private http: HttpClient,\n  ) {\n    this.myForm = this._fb.group({});\n  }\n\n  ngOnInit() {\n    this.activateRoute.paramMap.subscribe(params => {\n     this.formName = params.get('form');\n     this.contactId = params.get('id');\n     this.loading = false;\n     this.pdfSrc = `../../assets/${this.formName}.pdf`;\n    });\n  }\n\n  private createInput(annotation: PDFAnnotationData, rect: number[] = null, pageNumber: number) {\n    let formControl = new FormControl(annotation.buttonValue || '');\n\n    // console.log(annotation);\n    // annotation.filedValue = 'Marcel';\n\n    const input = new Input();\n    input.name = annotation.fieldName;\n    input.pageNumber = pageNumber;\n\n    if (annotation.fieldType === 'Tx' && !annotation.multiLine && !annotation.comb && annotation.alternativeText !== 'date') {\n        input.type = 'text';\n        input.value = annotation.buttonValue || '';\n    }\n\n    if (annotation.comb) {\n      input.type = 'comb';\n      input.value = annotation.buttonValue || '';\n      input.class = annotation.comb ? 'comb' : '';\n      input.spacing = (rect[2] - rect[0]) / annotation.maxLen - 10.5;\n      input.maxLen = annotation.maxLen;\n    }\n\n    if (annotation.alternativeText === 'date') {\n      input.type = 'date';\n      input.value = annotation.buttonValue || '';\n    }\n\n    if (annotation.multiLine){\n      input.type = 'textarea';\n      input.value = annotation.buttonValue  || '';\n    }\n\n    if (annotation.fieldType === 'Btn' && !annotation.checkBox) {\n      // console.log(annotation);\n      input.type = 'radio';\n      input.value = annotation.buttonValue || false;\n      formControl = new FormControl(annotation.fieldName || false);\n    }\n\n    if (annotation.checkBox) {\n        input.type = 'checkbox';\n        input.value = true;\n        formControl = new FormControl(annotation.buttonValue || false);\n    }\n\n    if (annotation.fieldType === 'Ch' ) {\n        // console.log(annotation);\n        input.type = 'select';\n        input.value = annotation.fieldValue || '';\n        input.options = annotation.options;\n  }\n\n    // Calculate all the positions and sizes\n    if (rect) {\n        input.top = rect[1] - (rect[1] - rect[3]);\n        input.left = rect[0];\n        input.height = (rect[1] - rect[3]) * .9;\n        input.width = (rect[2] - rect[0]);\n    }\n\n    this.inputList.push(input);\n    return formControl;\n}\n\nprivate addInput(annotation: PDFAnnotationData, rect: number[] = null, pageNumber: number): void {\n    // add input to page\n    this.myForm.addControl(annotation.fieldName, this.createInput(annotation, rect, pageNumber));\n}\n\npublic getInputPosition(input: Input): any {\n    return {\n        top: `${input.top}px`,\n        left: `${input.left}px`,\n        height: `${input.height}px`,\n        width: `${input.width}px`,\n    };\n}\n\npublic getInputPositionCheckBox(input: Input): any {\n  return {\n      top: `${input.top + 1}px`,\n      left: `${input.left + 1}px`,\n      height: `${input.height}px`,\n      width: `${input.width}px`,\n  };\n}\n\npublic zoomIn(): void {\n  const prevZoom = `zoom_${this.zoom}`;\n  const actualZoom = 'zoom_' + (this.zoom + .25);\n  document.getElementById('input-form').classList.remove(prevZoom);\n  document.getElementById('input-form').classList.add(actualZoom);\n\n  const scale = this.zoom + .4;\n  this.checkBoxSize = `scale(${scale})`;\n  this.inputList = this.inputList.map(i => {\n        i.left *= (.25 / this.zoom) + 1;\n        i.top *= (.25 / this.zoom) + 1;\n        i.width *= (.25 / this.zoom) + 1;\n        i.height *= (.25 / this.zoom) + 1;\n        i.spacing = (i.width) / i.maxLen - 10.5;\n        return i;\n    });\n  this.zoom += .25;\n}\n\npublic zoomOut(): void {\n\n  const prevZoom = `zoom_${this.zoom}`;\n  const actualZoom = 'zoom_' + (this.zoom - .25);\n  document.getElementById('input-form').classList.remove(prevZoom);\n  document.getElementById('input-form').classList.add(actualZoom);\n\n  const scale = this.zoom - .4;\n  this.checkBoxSize = `scale(${scale})`;\n  this.inputList = this.inputList.map(i => {\n        i.left *= 1 - (.25 / this.zoom);\n        i.top *= 1 - (.25 / this.zoom);\n        i.width *= 1 - (.25 / this.zoom);\n        i.height *= 1 - (.25 / this.zoom);\n        i.spacing = (i.width) / i.maxLen - 10.5;\n        return i;\n    });\n  this.zoom -= .25;\n}\npublic nextPage() {\n  this.page++;\n}\n\npublic prevPage() {\n  this.page--;\n}\npublic loadComplete(pdf: PDFDocumentProxy): void {\n    this.loading = true;\n    this.totalPages = pdf.numPages;\n    for (let i = 1; i <= pdf.numPages; i++) {\n\n        // track the current page\n        let currentPage = null;\n        pdf.getPage(i).then(p => {\n            currentPage = p;\n            // get the annotations of the current page\n            return p.getAnnotations();\n        }).then(ann => {\n\n            // ugly cast due to missing typescript definitions\n            // please contribute to complete @types/pdfjs-dist\n            const annotations = (<any>ann) as PDFAnnotationData[];\n\n            annotations\n                .filter(a => a.subtype === 'Widget') // get the form field annotation only\n                .forEach(a => {\n                    // console.log(currentPage);\n                    // get the rectangle that represent the single field\n                    // and resize it according to the current DPI\n                    const pageNumber = currentPage.pageIndex + 1;\n                    const fieldRect = currentPage.getViewport(this.dpiRatio)\n                        .convertToViewportRectangle(a.rect);\n\n                    // const fieldTop = ((i - 1) * currentPage.getViewport(this.dpiRatio).height) + ((i - 1) * 9);\n                    // add the corresponding input\n                    this.addInput(a, fieldRect, pageNumber);\n                });\n        });\n    }\n\n    setTimeout(() => {\n      console.log('loaded');\n      this.loading = false;\n      this.isLoaded = true;\n      // this.fomrValues.map(res => {\n      //   this.myForm.get(res.name).setValue(res.value);\n      // });\n    }, 1000);\n    // console.log('finih')\n}\n\nasync downloadForm() {\n  this.loading = true;\n  let headers = new HttpHeaders();\n  const formData = await this.checkValue();\n  headers = headers.set('Accept', ['application/pdf', 'application/json']);\n  this.http.post(`http://localhost:3000/api/${this.formName}`, formData, { headers: headers, responseType: 'blob' }).subscribe(resp => {\n    console.log('Response: ', resp);\n    const file = new Blob([resp], {type: 'application/pdf'});\n    saveAs(file, 'testData.pdf');\n    this.loading = false;\n  });\n  // console.log({formType: 'ar-11', formData: this.myForm.value});\n}\nasync printForm() {\n  this.loading = true;\n  const formData = await this.checkValue();\n  let headers = new HttpHeaders();\n  headers = headers.set('Accept', ['application/pdf', 'application/json']);\n  this.http.post(`http://localhost:3000/api/${this.formName}`, formData, { headers: headers, responseType: 'blob' }).subscribe(resp => {\n    // console.log('Response: ', resp);\n    const file = new Blob([resp], {type: 'application/pdf'});\n    this.blobUrl = URL.createObjectURL(file);\n\n    print({ printable: this.blobUrl, type: 'pdf'});\n    this.loading = false;\n  });\n}\n\n  checkValue() {\n    const formData = this.myForm.value;\n    for (const key in formData) {\n      if (formData[key] === true) {\n        formData[key] = 'On';\n      } else if (formData[key] === false) {\n          formData[key] = 'Off';\n      }\n    }\n    return formData;\n  }\n\n  radioClicked(input) {\n    console.log(input);\n    const radioName = input.name;\n    const formValue = this.myForm.value[radioName];\n    const radioValue = input.value;\n\n    if (formValue === radioValue) {\n      this.myForm.get(radioName).setValue(radioName);\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {ApolloModule, APOLLO_OPTIONS} from 'apollo-angular';\nimport {HttpLinkModule, HttpLink} from 'apollo-angular-link-http';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\n\nconst uri = 'https://backend.apartmentsource.com/graphql'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink: HttpLink) {\n  return {\n    link: httpLink.create({uri}),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","export default \".content {\\n  background: #fafafa;\\n  height: 100%;\\n}\\n\\nmat-card {\\n  max-width: 30%;\\n}\\n\\n.full-width {\\n  width: 100%;\\n}\\n\\n.padding {\\n  padding: 0px 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBQTtFQUdBLFlBQUE7QUNERjs7QURHQTtFQUNFLGNBQUE7QUNBRjs7QURHQTtFQUNFLFdBQUE7QUNBRjs7QURHQTtFQUNFLGlCQUFBO0FDQUYiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50e1xuICBiYWNrZ3JvdW5kOiAjZmFmYWZhO1xuICAvLyBiYWNrZ3JvdW5kOiByZ2IoNTcsNDgsMjE5KTtcbiAgLy8gYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgIzM5MzBkYiAwJSwgIzAwOTVmZiAxMDAlKTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxubWF0LWNhcmR7XG4gIG1heC13aWR0aDogMzAlO1xufVxuXG4uZnVsbC13aWR0aHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5wYWRkaW5ne1xuICBwYWRkaW5nOiAwcHggMTBweDtcbn1cbiIsIi5jb250ZW50IHtcbiAgYmFja2dyb3VuZDogI2ZhZmFmYTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG5tYXQtY2FyZCB7XG4gIG1heC13aWR0aDogMzAlO1xufVxuXG4uZnVsbC13aWR0aCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ucGFkZGluZyB7XG4gIHBhZGRpbmc6IDBweCAxMHB4O1xufSJdfQ== */\"","import { AuthService } from './../services/auth.service';\nimport { first } from 'rxjs/operators';\nimport { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public hide = true;\n  private uid: string;\n\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n  });\n\n  constructor(\n    private authenticationService: AuthService,\n    private router: Router,\n    private fireAuth: AngularFireAuth,\n    private snackBard: MatSnackBar,\n    private zone: NgZone,\n  ) {\n  }\n\n  ngOnInit() {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  login() {\n    const email = this.loginForm.value.email;\n    const password = this.loginForm.value.password;\n\n    this.authenticationService.login(email, password)\n    .pipe(first())\n    .subscribe(\n        data => {\n          // this.router.navigateByUrl(this.returnUrl);\n          this.router.navigate(['/dashboard']).then(() => {\n            // this.loading.dismiss();\n          });\n        },\n        error => {\n          console.log(error);\n          const errorMessage = error['0'].messages['0'].message;\n          this.snackBard.open(errorMessage, null, {duration: 3000});\n          // this.loading.dismiss();\n        });\n  }\n}\n","export class User {\n    jwt: string;\n    user: {\n        id: string;\n        username: string;\n        email: string;\n        fullName: string;\n        blocked: boolean;\n        role: {\n            name: string;\n        };\n        avatar: [{\n            url: string;\n        }]\n    };\n}\n","export default \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.sidenav .mat-toolbar {\\n  background: inherit;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\n.spacer {\\n  -webkit-box-flex: 1;\\n          flex: 1 1 auto;\\n}\\n\\n.sub-menu {\\n  font-size: 0.7em;\\n  margin: 5px;\\n  color: #a9a9a9;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC9uYXZpZ2F0aW9uL25hdmlnYXRpb24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL25hdmlnYXRpb24vbmF2aWdhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUNDRjs7QURFQTtFQUNFLFlBQUE7QUNDRjs7QURFQTtFQUNFLG1CQUFBO0FDQ0Y7O0FERUE7RUFDRSx3QkFBQTtFQUFBLGdCQUFBO0VBQ0EsTUFBQTtFQUNBLFVBQUE7QUNDRjs7QURFQTtFQUNFLG1CQUFBO1VBQUEsY0FBQTtBQ0NGOztBREVBO0VBQ0UsZ0JBQUE7RUFDQSxXQUFBO0VBQ0EsY0FBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc2lkZW5hdiB7XG4gIHdpZHRoOiAyMDBweDtcbn1cblxuLnNpZGVuYXYgLm1hdC10b29sYmFyIHtcbiAgYmFja2dyb3VuZDogaW5oZXJpdDtcbn1cblxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxO1xufVxuXG4uc3BhY2VyIHtcbiAgZmxleDogMSAxIGF1dG87XG59XG5cbi5zdWItbWVudXtcbiAgZm9udC1zaXplOiAwLjdlbTtcbiAgbWFyZ2luOiA1cHg7XG4gIGNvbG9yOiAjYTlhOWE5O1xufVxuIiwiLnNpZGVuYXYtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc2lkZW5hdiB7XG4gIHdpZHRoOiAyMDBweDtcbn1cblxuLnNpZGVuYXYgLm1hdC10b29sYmFyIHtcbiAgYmFja2dyb3VuZDogaW5oZXJpdDtcbn1cblxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxO1xufVxuXG4uc3BhY2VyIHtcbiAgZmxleDogMSAxIGF1dG87XG59XG5cbi5zdWItbWVudSB7XG4gIGZvbnQtc2l6ZTogMC43ZW07XG4gIG1hcmdpbjogNXB4O1xuICBjb2xvcjogI2E5YTlhOTtcbn0iXX0= */\"","import { SocketService } from './../services/socket.service';\nimport { User } from './../models/user';\nimport { AuthService } from './../services/auth.service';\nimport { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Users } from '../users/users';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent {\n\n  // public loggedUser: Users;\n  public user: User;\n  public userAvatar: string;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private authService: AuthService,\n    private router: Router,\n    private socketService: SocketService,\n    ) {\n      this.authService.currentUser.subscribe(data => {\n        this.user = data;\n        if (data && data.user && data.user.avatar) {\n          // this.userAvatar = `https://backend.apartmentsource.com//${data.user.avatar.url}`;\n        }\n      });\n\n\n      this.socketService.get().subscribe(method => {\n        // console.log(method);\n        if ( typeof this[method] === 'function' ) {\n          this[method]();\n        }\n      });\n\n      // this.socketService.listenPrivate().subscribe(data => this.realTimeOps(data));\n      // this.socketService.listenPublic().subscribe(data => this.realTimeOps(data));\n    }\n\n    // realTimeOps(msg){\n    //   console.log(msg);\n    //   switch (msg) {\n    //     case 'refreshUi':\n    //       this.authService.logout();\n    //       this.router.navigate(['/login']);\n    //       break;\n    //     default:\n    //       break;\n    //   }\n    // }\n    logout() {\n      this.authService.logout();\n      this.router.navigate(['/login']);\n    }\n}\n","export default \".content {\\n  background: #fafafa;\\n  height: 90%;\\n}\\n\\nmat-card {\\n  max-width: 30%;\\n}\\n\\n.full-width {\\n  width: 100%;\\n}\\n\\n.padding {\\n  padding: 0px 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBQTtFQUdBLFdBQUE7QUNERjs7QURHQTtFQUNFLGNBQUE7QUNBRjs7QURHQTtFQUNFLFdBQUE7QUNBRjs7QURHQTtFQUNFLGlCQUFBO0FDQUYiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50e1xuICBiYWNrZ3JvdW5kOiAjZmFmYWZhO1xuICAvLyBiYWNrZ3JvdW5kOiByZ2IoNTcsNDgsMjE5KTtcbiAgLy8gYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgcmdiYSg1Nyw0OCwyMTksMSkgMCUsIHJnYmEoMCwyMTIsMjU1LDEpIDEwMCUpO1xuICBoZWlnaHQ6IDkwJTtcbn1cbm1hdC1jYXJke1xuICBtYXgtd2lkdGg6IDMwJTtcbn1cblxuLmZ1bGwtd2lkdGh7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ucGFkZGluZ3tcbiAgcGFkZGluZzogMHB4IDEwcHg7XG59XG4iLCIuY29udGVudCB7XG4gIGJhY2tncm91bmQ6ICNmYWZhZmE7XG4gIGhlaWdodDogOTAlO1xufVxuXG5tYXQtY2FyZCB7XG4gIG1heC13aWR0aDogMzAlO1xufVxuXG4uZnVsbC13aWR0aCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ucGFkZGluZyB7XG4gIHBhZGRpbmc6IDBweCAxMHB4O1xufSJdfQ== */\"","import { Users } from '../users/users';\nimport { DataService } from './../data.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from './../auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  public hide = true;\n\n  private userData: Users = {\n    avatar: '',\n    id: '',\n    name: '',\n    email: '',\n    isAdmin: null,\n    isActive: null,\n    teamId: null,\n  };\n\n  registerForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n  });\n\n  constructor(\n    private authService: AuthService,\n    private snackBard: MatSnackBar,\n    private router: Router,\n    private dataService: DataService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  register() {\n    this.userData.email = this.registerForm.value.email;\n    const password = this.registerForm.value.password;\n    this.userData.name = this.registerForm.value.name;\n    this.authService.register(this.userData, password)\n    .then(res => {\n      console.log(res);\n      this.userData.id = res.user.uid;\n      this.userData.name = this.registerForm.value.name;\n      this.userData.email = res.user.email;\n      // this.userData.isAdmin = true;\n      this.dataService.createUser(this.userData).then(() => {\n        this.snackBard.open('New Account have been created, please login using your credentials', null, {duration: 3000});\n        this.router.navigate(['/dashboard/users']);\n      }).catch(err => {\n        this.snackBard.open(err, null, {duration: 3000});\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      let message: string;\n      switch (err.code) {\n        case 'auth/invalid-email':\n          message = 'Invalid email address';\n          break;\n        case 'auth/user-not-found':\n          message = 'Incorrect email address or password';\n          break;\n        default:\n          message = err.message;\n      }\n      this.snackBard.open(message, null, {duration: 3000});\n    });\n  }\n}\n","import { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}\n","import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject,Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from './../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private currentUserSubject: BehaviorSubject < User > ;\n  public currentUser: Observable < User > ;\n  public user: User;\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.currentUserSubject = new BehaviorSubject < User > (JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  login(username: string, pw: string) {\n    return this.http.post < any > ('https://backend.apartmentsource.com/auth/local', {\n        identifier: username,\n        password: pw\n      })\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  forgotPassword(emailAddress: string) {\n    return this.http.post < any > ('https://backend.apartmentsource.com/auth/forgot-password', {\n        email: emailAddress,\n        url: 'https://backend.apartmentsource.com/admin/plugins/users-permissions/auth/reset-password'\n      })\n      .pipe(map(user => {\n        return user;\n      }));\n  }\n\n  reset(code: string, pw: string, pwcnf: string) {\n    return this.http.post < any > ('https://backend.apartmentsource.com/auth/reset-password', {\n        code,\n        password: pw,\n        passwordConfirmation: pwcnf\n      })\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  createUser(user: User, password) {\n    return this.http.post('https://backend.apartmentsource.com/users', {\n      fullName: user.user.fullName,\n      username: user.user.username,\n      email: user.user.email,\n      blocked: user.user.blocked,\n      password,\n    }).pipe(map(newUser => {\n      return newUser;\n    }));\n  }\n\n  updateUser(user: User, password) {\n    const roleId = user.user.role.name === 'Administrator' ? '5dc49d9292e8e019a58a5f74' : '5dc49d9292e8e019a58a5f75';\n    return this.http.put(`https://backend.apartmentsource.com/users/${user.user.id}`, {\n      fullName: user.user.fullName,\n      username: user.user.username,\n      email: user.user.email,\n      blocked: user.user.blocked,\n      ...(password && password),\n      role: {\n        _id: roleId\n      }\n    }).pipe(map(newUser => {\n      return newUser;\n    }));\n  }\n\n  uploadAvatar(avatar) {\n    let headers = new HttpHeaders();\n    headers = headers.set('Content-Type', 'multipart/form-data');\n    return this.http.post('https://backend.apartmentsource.com/upload', avatar);\n  }\n\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n\n  migrateApp(app) {\n    return this.http.post('https://backend.apartmentsource.com/applications', app).pipe(map(newUser => {\n      return newUser;\n    }));\n  }\n\n}\n","import { AuthService } from './auth.service';\nimport { User } from './../models/user';\nimport { Injectable, NgModule } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SocketService {\n\n  constructor(\n    private socket: Socket,\n    private authService: AuthService\n  ) {\n    // this.connect();\n    // super({ url: 'https://backend.apartmentsource.com', options: {query: {userId: '231231232313'}} });\n   }\n\n  // listenPublic() {\n  //   return this.socket.fromEvent('serverToClient').pipe(map( data => data ));\n  // }\n\n  // listenPrivate() {\n  //   const currentUser = this.authService.currentUserValue;\n  //   if (currentUser) {\n  //     return this.socket.fromEvent(`${currentUser.user.id}`).pipe(map( data => data ));\n  //   }\n  // }\n\n  send(to, method) {\n    const msg = {to, method}\n    this.socket.emit('emit', msg);\n  }\n\n  get() {\n    return this.socket.fromEvent<any>('public').pipe(map( data => {\n      const currentUser = this.authService.currentUserValue.user.id;\n      // console.log(data);\n      if (data.to === 'public' || data.to === currentUser) {\n        return data.method;\n      }\n    }));\n  }\n\n  // getPrivate() {\n  //   const currentUser = this.authService.currentUserValue;\n  //   if (currentUser) {\n  //     return this.socket.fromEvent(`${currentUser.user.id}`).pipe(map( data => console.log(data) ));\n  //   }\n  // }\n\n  // emit(msg) {\n  //   this.socket.emit('clientToServer', msg);\n  // }\n\n  closeConnection() {\n    return this.socket.removeListener('public');\n  }\n}\n","export default \".full-width {\\n  width: 100%;\\n}\\n\\n.margin-botton {\\n  margin: 10px 0px 5px;\\n}\\n\\n.mat-dialog-content {\\n  overflow: hidden;\\n}\\n\\n.image-upload > input {\\n  display: none;\\n}\\n\\n.modal-loading {\\n  top: -25px;\\n  height: 5px;\\n  left: -20px;\\n  width: calc(100% + 40px);\\n}\\n\\n.slide-toggle {\\n  margin: 5px 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC91c2Vycy9jcmVhdGUtdXNlci9jcmVhdGUtdXNlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdXNlcnMvY3JlYXRlLXVzZXIvY3JlYXRlLXVzZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxvQkFBQTtBQ0VGOztBREFBO0VBQ0UsZ0JBQUE7QUNHRjs7QURBQTtFQUNFLGFBQUE7QUNHRjs7QURBQTtFQUNFLFVBQUE7RUFDQSxXQUFBO0VBQ0EsV0FBQTtFQUNBLHdCQUFBO0FDR0Y7O0FEQUE7RUFDRSxlQUFBO0FDR0YiLCJmaWxlIjoic3JjL2FwcC91c2Vycy9jcmVhdGUtdXNlci9jcmVhdGUtdXNlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoe1xuICB3aWR0aDogMTAwJTtcbn1cbi5tYXJnaW4tYm90dG9ue1xuICBtYXJnaW46IDEwcHggMHB4IDVweDtcbn1cbi5tYXQtZGlhbG9nLWNvbnRlbnR7XG4gIG92ZXJmbG93OiAgaGlkZGVuO1xufVxuXG4uaW1hZ2UtdXBsb2FkID4gaW5wdXQge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ubW9kYWwtbG9hZGluZ3tcbiAgdG9wOiAtMjVweDtcbiAgaGVpZ2h0OiA1cHg7XG4gIGxlZnQ6IC0yMHB4O1xuICB3aWR0aDogY2FsYygxMDAlICsgNDBweCk7XG59XG5cbi5zbGlkZS10b2dnbGV7XG4gIG1hcmdpbjogNXB4IDBweDtcbn0iLCIuZnVsbC13aWR0aCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWFyZ2luLWJvdHRvbiB7XG4gIG1hcmdpbjogMTBweCAwcHggNXB4O1xufVxuXG4ubWF0LWRpYWxvZy1jb250ZW50IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmltYWdlLXVwbG9hZCA+IGlucHV0IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLm1vZGFsLWxvYWRpbmcge1xuICB0b3A6IC0yNXB4O1xuICBoZWlnaHQ6IDVweDtcbiAgbGVmdDogLTIwcHg7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKyA0MHB4KTtcbn1cblxuLnNsaWRlLXRvZ2dsZSB7XG4gIG1hcmdpbjogNXB4IDBweDtcbn0iXX0= */\"","import { SocketService } from './../../services/socket.service';\nimport { User } from './../../models/user';\nimport { Users } from '../users';\nimport { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DataService } from './../../data.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { finalize } from 'rxjs/operators';\nimport * as firebase from 'firebase/app';\nimport { environment } from 'src/environments/environment.prod';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.scss']\n})\nexport class CreateUserComponent implements OnInit {\n\n  @ViewChild('avatarInput', {static: false}) avatarInput;\n  public files: Set<File> = new Set();\n\n  public loading = false;\n  public update = false;\n  public hide = true;\n  public avatar;\n  public task;\n  public downloadURL;\n  public adminChanged: false;\n  public blokedChanged: false;\n  private userData: Users = {\n    avatar: '',\n    id: '',\n    name: '',\n    email: '',\n    isAdmin: null,\n    isActive: true,\n    teamId: null,\n  };\n\n\n  public user: User = {\n    jwt: null,\n    user: {\n      id: null,\n      fullName: '',\n      username: '',\n      email: '',\n      blocked: null,\n      role: {\n        name: '',\n      },\n      avatar: [{\n        url: '',\n      }]\n    }\n  };\n\n  private secondFireBase;\n\n  public createUserForm: FormGroup;\n  public imageSrc;\n\n  constructor(\n    public dialogRef: MatDialogRef < CreateUserComponent > ,\n    private snackBard: MatSnackBar,\n    private router: Router,\n    private dataService: DataService,\n    private afStorage: AngularFireStorage,\n    private authService: AuthService,\n    private socketService: SocketService,\n    @Inject(MAT_DIALOG_DATA) public data: User\n  ) {}\n\n  ngOnInit() {\n    // console.log(this.data.user);\n    if ( this.data && this.data.user) {\n      if ( this.data.user.avatar.length > 0 || !this.data.user.avatar === undefined) {\n        this.imageSrc = `https://backend.apartmentsource.com${this.data.user.avatar['0'].url}`;\n      }\n      this.update = this.data ? true : false;\n      this.user.user.id = this.data ? this.data.user.id : null;\n      this.user.user.fullName = this.data ? this.data.user.fullName : '';\n      this.user.user.email = this.data ? this.data.user.email : '';\n      this.user.user.role.name = this.data.user.role.name;\n      this.user.user.blocked = this.data.user.blocked;\n    }\n\n    const passwordValidators = !this.update ? [Validators.required , Validators.minLength(6)] : [Validators.minLength(6)] ;\n    this.createUserForm = new FormGroup({\n      fullName: new FormControl(this.user.user.fullName, Validators.required),\n      email: new FormControl({value: this.user.user.email, disabled: this.update}, [Validators.required, Validators.email]),\n      password: new FormControl(null, passwordValidators),\n      isAdmin: new FormControl(this.user.user.role.name  === 'Administrator' ? true : false),\n      isBloked: new FormControl(this.user.user.blocked ? true : false),\n    });\n  }\n\n  createUser() {\n    this.loading = true;\n    if (this.update) {\n      this.updateUser();\n      return;\n    }\n\n    // user.user = {} as null;\n    this.user.user.fullName = this.createUserForm.value.fullName;\n    this.user.user.email = this.createUserForm.value.email;\n    this.user.user.username = this.createUserForm.value.email;\n    this.user.user.blocked = this.createUserForm.value.isBloked ? true : false;\n    const password = this.createUserForm.value.password;\n    this.authService.createUser(this.user, password).subscribe(\n      data => {\n        this.user.user.id = data['id'];\n        this.updateUser();\n        // console.log(data);\n      },\n      err => {\n        console.log(err);\n        const erroMsg = err['0'].messages['0'].message;\n        this.snackBard.open(erroMsg, null, {\n            duration: 3000\n        });\n      });\n  }\n\n  updateUser() {\n    this.user.user.role = {\n      name: this.createUserForm.value.isAdmin === true ? 'Administrator' : '',\n    };\n    this.user.user.email = this.createUserForm.value.email;\n    this.user.user.username = this.createUserForm.value.email;\n    this.user.user.fullName = this.createUserForm.value.fullName;\n    const password = this.createUserForm.value.password;\n    this.user.user.blocked = this.createUserForm.value.isBloked ? true : false;\n    this.authService.updateUser(this.user, password).subscribe(\n      data => {\n        if (this.avatar) {\n          this.uploadAvatar(data);\n        } else {\n          this.closeRefresh();\n        }\n      },\n      err => {\n        console.log(err);\n        const erroMsg = err['0'].messages['0'].message;\n        this.snackBard.open(erroMsg, null, {\n            duration: 3000\n        });\n      });\n  }\n\n  uploadAvatar(userData) {\n      const formData = new FormData();\n      formData.append('files', this.avatar, this.avatar.name);\n      formData.append('refId', userData.id);\n      formData.append('ref', 'user');\n      formData.append('source', 'users-permissions');\n      formData.append('field', 'avatar');\n\n      this.authService.uploadAvatar(formData).subscribe( data => {\n        // console.log(data);\n        this.closeRefresh();\n      },\n      error => {\n        console.log(error);\n      });\n  }\n\n  preview(files: FileList): void {\n    if (files) {\n      this.avatar = files.item(0);\n\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.imageSrc = reader.result;\n      };\n      reader.readAsDataURL(this.avatar);\n    }\n  }\n\n  closeRefresh() {\n    // const msgs = [];\n\n    // if (this.adminChanged || this.blokedChanged) {\n    //   msgs.push({ to: this.user.user.id, body: 'refreshUi'});\n    // }\n    // msgs.push({ to: '', body: 'getUsers'});\n\n    // msgs.forEach( msg => {\n    //     this.socketService.emit(msg);\n    //   }\n    // );\n    this.socketService.send('public', 'getUsers');\n    if (this.adminChanged || this.blokedChanged) {\n      this.socketService.send(this.user.user.id, 'logout');\n    }\n    this.loading = false;\n    this.dialogRef.close();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","export default \".content {\\n  padding: 20px;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%;\\n}\\n\\ntd, th {\\n  width: 25%;\\n}\\n\\n.mat-column-edit {\\n  width: 5%;\\n}\\n\\n.mat-column-edit button {\\n  float: right;\\n}\\n\\n.fat-btn {\\n  margin: 4px 0px 0px;\\n  height: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC91c2Vycy91c2Vycy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdXNlcnMvdXNlcnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxXQUFBO0FDRUY7O0FEQ0E7RUFDRSxlQUFBO0VBQ0EsV0FBQTtBQ0VGOztBRENBO0VBQ0UsVUFBQTtBQ0VGOztBRENBO0VBQ0UsU0FBQTtBQ0VGOztBRENBO0VBQ0UsWUFBQTtBQ0VGOztBRENBO0VBQ0UsbUJBQUE7RUFDQSxZQUFBO0FDRUYiLCJmaWxlIjoic3JjL2FwcC91c2Vycy91c2Vycy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50e1xuICBwYWRkaW5nOiAyMHB4O1xufVxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB3aWR0aDogMTAwJTtcbn1cblxudGQsIHRoIHtcbiAgd2lkdGg6IDI1JTtcbn1cblxuLm1hdC1jb2x1bW4tZWRpdHtcbiAgd2lkdGg6IDUlO1xufVxuXG4ubWF0LWNvbHVtbi1lZGl0IGJ1dHRvbntcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4uZmF0LWJ0bntcbiAgbWFyZ2luOiA0cHggMHB4IDBweDtcbiAgaGVpZ2h0OiA1MHB4O1xufVxuXG5cblxuIiwiLmNvbnRlbnQge1xuICBwYWRkaW5nOiAyMHB4O1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICBmb250LXNpemU6IDE0cHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50ZCwgdGgge1xuICB3aWR0aDogMjUlO1xufVxuXG4ubWF0LWNvbHVtbi1lZGl0IHtcbiAgd2lkdGg6IDUlO1xufVxuXG4ubWF0LWNvbHVtbi1lZGl0IGJ1dHRvbiB7XG4gIGZsb2F0OiByaWdodDtcbn1cblxuLmZhdC1idG4ge1xuICBtYXJnaW46IDRweCAwcHggMHB4O1xuICBoZWlnaHQ6IDUwcHg7XG59Il19 */\"","import { SocketService } from './../services/socket.service';\nimport { User } from './../models/user';\nimport { DataService } from './../data.service';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { Users } from './users';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { map, tap, scan, mergeMap, throttleTime } from 'rxjs/operators';\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\nimport { Subscription } from 'rxjs';\nimport { Socket } from 'ngx-socket-io';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit, OnDestroy {\n\n  displayedColumns: string[] = ['fullName', 'email', 'role', 'blocked', 'edit'];\n  dataSource: MatTableDataSource<User>;\n\n  // public users: Users[] = [\n  //   {id: 'ewweewqe', name: 'Marcel Cruz', email: 'marclcruz85@gmail.com', isAdmin: true, isActive: false, teamId: null},\n  // ];\n\n  public users: User[] = [];\n  public loading = false;\n  private queryUsers: Subscription;\n  private realTimeOp;\n\n  private userData: Users = {\n    avatar: '',\n    id: '',\n    name: '',\n    email: '',\n    isAdmin: null,\n    isActive: null,\n    teamId: null,\n  };\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(\n    public dialog: MatDialog,\n    private dataService: DataService,\n    private apollo: Apollo,\n    // private socket: Socket,\n    private socketService: SocketService,\n  ) {\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(this.users);\n  }\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n    this.getUsers();\n\n    this.socketService.get().subscribe(method => {\n      if ( typeof this[method] === 'function' ) {\n        this[method]();\n      }\n    });\n    // this.socketService.listenPrivate().subscribe(data => this.realTimeOps(data));\n    // this.socketService.listenPublic().subscribe(data => this.realTimeOps(data));\n  }\n\n  // realTimeOps(msg) {\n  //   console.log(msg);\n  //   switch (msg) {\n  //     case 'getUsers':\n  //       this.getUsers();\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  addUser(): void {\n    const dialogRef = this.dialog.open(CreateUserComponent, {\n      width: '550px',\n      data: null\n    });\n\n    dialogRef.afterClosed().subscribe();\n  }\n\n  updateUser(user: User): void {\n    const dialogRef = this.dialog.open(CreateUserComponent, {\n      width: '550px',\n      data: {user}\n    });\n\n    dialogRef.afterClosed().subscribe();\n  }\n\n  getUsers() {\n    this.queryUsers = this.apollo.query<any>({\n      query: gql`\n        query {\n          users {\n            id,\n            fullName,\n            username,\n            email,\n            blocked,\n            role {\n              name\n            },\n            avatar {\n              url\n            }\n          }\n        }`,\n        fetchPolicy: 'network-only',\n        errorPolicy: 'all',\n    })\n      .subscribe(({ data, loading }) => {\n        // console.log(data);\n        this.dataSource = new MatTableDataSource<User>(data.users);\n        this.dataSource.paginator = this.paginator;\n        // console.log(this.dataSource);\n        this.queryUsers.unsubscribe();\n      });\n  }\n\n  ngOnDestroy() {\n    this.queryUsers.unsubscribe();\n    this.socketService.closeConnection();\n  }\n}\n","export default \".content {\\n  padding: 20px;\\n}\\n\\n.card-33 {\\n  float: left;\\n  margin-bottom: 20px;\\n}\\n\\n.statistics h3 {\\n  margin: 3px 0px;\\n  opacity: 0.7;\\n}\\n\\n.statistics span {\\n  opacity: 0.7;\\n  font-size: 0.8em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWwvUHJvamVjdHMvd2hpdGVib2FyZDIvc3JjL2FwcC93aGl0ZWJvYXJkL3doaXRlYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3doaXRlYm9hcmQvd2hpdGVib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUdFLGFBQUE7QUNERjs7QURHQTtFQUdFLFdBQUE7RUFDQSxtQkFBQTtBQ0ZGOztBREtBO0VBQ0UsZUFBQTtFQUNBLFlBQUE7QUNGRjs7QURLQTtFQUNFLFlBQUE7RUFDQSxnQkFBQTtBQ0ZGIiwiZmlsZSI6InNyYy9hcHAvd2hpdGVib2FyZC93aGl0ZWJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnR7XG4gIC8vIGJhY2tncm91bmQ6ICNiN2I3Yjc7XG4gIC8vIGhlaWdodDogMTAwJTtcbiAgcGFkZGluZzogMjBweDtcbn1cbi5jYXJkLTMze1xuICAvLyB3aWR0aDogMjIlO1xuICAvLyBtYXJnaW46IDIwcHggMHB4IDIwcHggMiU7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4uc3RhdGlzdGljcyBoM3tcbiAgbWFyZ2luOiAzcHggMHB4O1xuICBvcGFjaXR5OiAwLjc7XG59XG5cbi5zdGF0aXN0aWNzIHNwYW57XG4gIG9wYWNpdHk6IDAuNztcbiAgZm9udC1zaXplOiAwLjhlbTtcbn1cbiIsIi5jb250ZW50IHtcbiAgcGFkZGluZzogMjBweDtcbn1cblxuLmNhcmQtMzMge1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLnN0YXRpc3RpY3MgaDMge1xuICBtYXJnaW46IDNweCAwcHg7XG4gIG9wYWNpdHk6IDAuNztcbn1cblxuLnN0YXRpc3RpY3Mgc3BhbiB7XG4gIG9wYWNpdHk6IDAuNztcbiAgZm9udC1zaXplOiAwLjhlbTtcbn0iXX0= */\"","import { DataService } from './../data.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-whiteboard',\n  templateUrl: './whiteboard.component.html',\n  styleUrls: ['./whiteboard.component.scss']\n})\nexport class WhiteboardComponent implements OnInit {\n\n  public stats = [];\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit() {\n    this.getStats();\n  }\n\n  getStats() {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = ('0' + (today.getMonth() + 1)).slice(-2);\n    const thisMonth = `${year}${month}`;\n    // const thisMonth = '201908';\n\n    this.dataService.getStats(thisMonth).subscribe(res => {\n      this.stats = res;\n      console.log(res);\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyAdEDQSLRncPA2T58YrN1oZ_PMc_VD86VI\",\n    authDomain: \"dashboard-6f7ca.firebaseapp.com\",\n    databaseURL: \"https://dashboard-6f7ca.firebaseio.com\",\n    projectId: \"dashboard-6f7ca\",\n    storageBucket: \"dashboard-6f7ca.appspot.com\",\n    messagingSenderId: \"934901644754\",\n    appId: \"1:934901644754:web:f887d2e4e416a63fa81c0b\"\n\n    // apiKey: \"AIzaSyDREnvrNIk2IXT_5H1Y_NV0GL_Ttd5hPwk\",\n    // authDomain: \"dashboard-29df7.firebaseapp.com\",\n    // databaseURL: \"https://dashboard-29df7.firebaseio.com\",\n    // projectId: \"dashboard-29df7\",\n    // storageBucket: \"dashboard-29df7.appspot.com\",\n    // messagingSenderId: \"458597392670\",\n    // appId: \"1:458597392670:web:108baed77f125e2f\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///","file":"main-es5.js"}