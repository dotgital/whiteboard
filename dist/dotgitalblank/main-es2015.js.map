{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/applications-admin/applications-admin.component.ts","./src/app/applications-admin/applications-admin.component.html","./src/app/applications-dashboard/applications-dashboard.component.ts","./src/app/applications-dashboard/applications-dashboard.component.html","./src/app/applications-dashboard/message/message.component.ts","./src/app/applications-dashboard/message/message.component.html","./src/app/applications-stats/applications-stats.component.ts","./src/app/applications-stats/applications-stats.component.html","./src/app/applications/applications.component.ts","./src/app/applications/applications.component.html","./src/app/applications/create-application/create-application.component.ts","./src/app/applications/create-application/create-application.component.html","./src/app/applications/manage-applications/manage-applications.component.ts","./src/app/applications/manage-applications/manage-applications.component.html","./src/app/auth.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/data.service.ts","./src/app/forgot-password/forgot-password.component.ts","./src/app/forgot-password/forgot-password.component.html","./src/app/form-list/form-list.component.ts","./src/app/form-list/form-list.component.html","./src/app/graphql.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/models/user.ts","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/auth-guard.service.ts","./src/app/services/auth.service.ts","./src/app/services/socket.service.ts","./src/app/users/create-user/create-user.component.ts","./src/app/users/create-user/create-user.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/whiteboard/whiteboard.component.ts","./src/app/whiteboard/whiteboard.component.html","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEG;AACF;AAEa;;;AACzD,0DAA0D;AAGnD,MAAM,gBAAgB;IACzB,YACY,qBAAkC;QAAlC,0BAAqB,GAArB,qBAAqB,CAAa;IAC1C,CAAC;IAEL,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAClD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,GAAG,CAAC,EAAE;YAC9C,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;gBACpB,gDAAgD;gBAChD,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;gBACpC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACzB;YAED,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,IAAI,GAAG,CAAC,UAAU,CAAC;YAClD,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;;gFAhBQ,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAD5B,wDAAU;;;;;;;;;;;;;;ACRX;AAAA;AAAA;AAAA;AAA2C;AAGc;;;AAElD,MAAM,cAAc;IACvB,YACY,qBAAkC;QAAlC,0BAAqB,GAArB,qBAAqB,CAAa;IAC1C,CAAC;IAEL,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAClD,uDAAuD;QACvD,wBAAwB;QACxB,MAAM,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC;QAChE,IAAI,WAAW,IAAI,WAAW,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,qCAAqC,CAAC,EAAE;YACjG,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACpB,UAAU,EAAE;oBACR,aAAa,EAAE,UAAU,WAAW,CAAC,GAAG,EAAE;iBAC7C;aACJ,CAAC,CAAC;SACN;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;;4EAlBQ,cAAc;iGAAd,cAAc,WAAd,cAAc;6FAAd,cAAc;cAD1B,wDAAU;;;;;;;;;;;;;;ACJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+F;AACA;AACgB;AACJ;AACnC;AACM;AACQ;AAC5B;AACQ;AACG;AACD;AAC3B;AACc;AACE;AACA;;;AAEzD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,kCAAkC,EAAE,SAAS,EAAE,MAAM,EAAE;IAC/E,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,kGAAuB,EAAE;IAC/D,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAE,WAAW,EAAE,CAAC,sEAAS,CAAC,EAAE,QAAQ,EAAE;YACtF,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;YAClD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,iFAAiB,EAAE;YAC/C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAC;YAC3C,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,0FAAqB,EAAE;YAC1D,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,oFAAmB,EAAE;YACtD,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,2GAA0B,EAAE;YACrE,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,uHAA8B,EAAE;YAC7E,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,2HAA2B,EAAE;YACvE,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,2GAA0B,EAAE;SACtE,EAAE;CACJ,CAAC;AAMK,MAAM,gBAAgB;;gGAAhB,gBAAgB;2JAAhB,gBAAgB,kBAHlB,CAAC,6DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,6DAAY;oIAEX,gBAAgB,wFAFjB,6DAAY;8FAEX,gBAAgB;cAJ5B,uDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,6DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,6DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACpCD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,eAAe,CAAC;KACzB;;wEAFY,YAAY;4FAAZ,YAAY;QCLzB,2EAA+B;;6FDKlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2G;AACjD;AACjB;AAEe;AACT;AACgC;AACP;AACrB;AACe;AACS;AACP;AAElB;AACe;AACN;AACM;AACP;AAEF;AAEG;AACa;AACjB;AACQ;AACF;AACM;AACR;AACO;AACX;AACE;AACF;AACU;AACK;AACQ;AACrB;AACE;AACE;AACS;AACN;AACT;AACE;AACI;AACJ;AACY;AACH;AACoB;AAC7B;AACuB;AAEvB;AACqB;AAC8B;AACpC;AACuC;AAC/C;AACJ;AACX;AAEc;AACgC;AACT;AACS;;;;AAE/F,MAAM,MAAM,GAAmB,EAAE,GAAG,EAAE,qCAAqC,EAAE,OAAO,EAAE,EAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,EAAC,EAAE,CAAC;AA2EzG,MAAM,SAAS;;wFAAT,SAAS,cAPR,2DAAY;4IAOb,SAAS,mBAXT;QACT,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,wEAAc,EAAE,KAAK,EAAE,IAAI,EAAE;QACrE,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,4EAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;KACxE,YA3CQ;YACP,0DAAW;YACX,kEAAmB;YACnB,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,gEAAY;YACZ,2EAAgB;YAChB,yEAAe;YACf,2EAAgB;YAChB,qEAAa;YACb,qEAAa;YACb,yEAAe;YACf,oFAAoB;YACpB,4FAAwB;YACxB,6EAAiB;YACjB,gFAAkB;YAClB,qEAAa;YACb,yEAAe;YACf,sFAAqB;YACrB,8EAAiB;YACjB,iFAAmB;YACnB,2EAAmB;YACnB,qEAAa;YACb,+EAAkB;YAClB,oFAAoB;YACpB,uEAAc;YACd,uEAAc;YACd,uEAAc;YACd,qEAAgB;YAChB,gEAAiB,CAAC,aAAa,CAAC,sEAAW,CAAC,QAAQ,CAAC;YACrD,+EAAsB;YACtB,yEAAqB;YACrB,+EAAwB;YACxB,uEAAe;YACf,sEAAgB;YAChB,8DAAa;YACb,6DAAc,CAAC,OAAO,CAAC,MAAM,CAAC;SAE/B;mIAYU,SAAS,mBAtElB,2DAAY;QACZ,oFAAmB;QACnB,iFAAiB;QACjB,sEAAc;QACd,kFAAkB;QAClB,+EAAiB;QACjB,mGAAuB;QACvB,sEAAc;QACd,6FAAmB;QACnB,yHAA0B;QAC1B,2FAAqB;QACrB,yHAA0B;QAC1B,qFAAmB;QACnB,uHAA8B;QAC9B,4HAA2B;QAC3B,4GAA0B;QAC1B,mGAAgB;QAChB,4GAA0B,aAG1B,0DAAW;QACX,kEAAmB;QACnB,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,gEAAY;QACZ,2EAAgB;QAChB,yEAAe;QACf,2EAAgB;QAChB,qEAAa;QACb,qEAAa;QACb,yEAAe;QACf,oFAAoB;QACpB,4FAAwB;QACxB,6EAAiB;QACjB,gFAAkB;QAClB,qEAAa;QACb,yEAAe;QACf,sFAAqB;QACrB,8EAAiB;QACjB,iFAAmB;QACnB,2EAAmB;QACnB,qEAAa;QACb,+EAAkB;QAClB,oFAAoB;QACpB,uEAAc;QACd,uEAAc;QACd,uEAAc;QACd,qEAAgB,oEAEhB,+EAAsB;QACtB,yEAAqB;QACrB,+EAAwB;QACxB,uEAAe;QACf,sEAAgB;QAChB,8DAAa;6FAeJ,SAAS;cAxErB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,oFAAmB;oBACnB,iFAAiB;oBACjB,sEAAc;oBACd,kFAAkB;oBAClB,+EAAiB;oBACjB,mGAAuB;oBACvB,sEAAc;oBACd,6FAAmB;oBACnB,yHAA0B;oBAC1B,2FAAqB;oBACrB,yHAA0B;oBAC1B,qFAAmB;oBACnB,uHAA8B;oBAC9B,4HAA2B;oBAC3B,4GAA0B;oBAC1B,mGAAgB;oBAChB,4GAA0B;iBAC3B;gBACD,OAAO,EAAE;oBACP,0DAAW;oBACX,kEAAmB;oBACnB,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,gEAAY;oBACZ,2EAAgB;oBAChB,yEAAe;oBACf,2EAAgB;oBAChB,qEAAa;oBACb,qEAAa;oBACb,yEAAe;oBACf,oFAAoB;oBACpB,4FAAwB;oBACxB,6EAAiB;oBACjB,gFAAkB;oBAClB,qEAAa;oBACb,yEAAe;oBACf,sFAAqB;oBACrB,8EAAiB;oBACjB,iFAAmB;oBACnB,2EAAmB;oBACnB,qEAAa;oBACb,+EAAkB;oBAClB,oFAAoB;oBACpB,uEAAc;oBACd,uEAAc;oBACd,uEAAc;oBACd,qEAAgB;oBAChB,gEAAiB,CAAC,aAAa,CAAC,sEAAW,CAAC,QAAQ,CAAC;oBACrD,+EAAsB;oBACtB,yEAAqB;oBACrB,+EAAwB;oBACxB,uEAAe;oBACf,sEAAgB;oBAChB,8DAAa;oBACb,6DAAc,CAAC,OAAO,CAAC,MAAM,CAAC;iBAE/B;gBACD,SAAS,EAAE;oBACT,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,wEAAc,EAAE,KAAK,EAAE,IAAI,EAAE;oBACrE,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,4EAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;iBACxE;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;gBACzB,eAAe,EAAE;oBACf,6FAAmB;oBACnB,yHAA0B;oBAC1B,mGAAgB;iBACjB;aACF;;;;;;;;;;;;;;AC1ID;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACA;AACb;AACoB;AACrC;AAC8B;;;;;;;;;;;;;;;;;;;;;ICL7D,kFAA2G;;;;IAU3F,6EACE;IAD6E,6SAAS,0BAAuB,EAAE,CAAC,IAAC;IACjH,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC5B,4DAAS;;;IAQH,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF2B,8EAAiB;IACrD,0DACJ;IADI,6FACJ;;;IAwBV,yEAAuC;IAAA,oEAAQ;IAAA,4DAAK;;;IACpD,yEACE;IAAA,0EACI;IAAA,uDACJ;IAAA,4DAAM;IACR,4DAAK;;;IAFC,0DACJ;IADI,2FACJ;;;IAKF,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;IAClD,yEACE;IAAA,0EACI;IAAA,uDACJ;IAAA,4DAAM;IACR,4DAAK;;;IAFC,0DACJ;IADI,kGACJ;;;IAKF,yEAAuC;IAAA,iEAAK;IAAA,4DAAK;;;IACjD,yEACE;IAAA,0EACI;IAAA,uDACJ;;IAAA,4DAAM;IACR,4DAAK;;;IAFC,0DACJ;IADI,2KACJ;;;IAKF,yEAAuC;IAAA,iEAAK;IAAA,4DAAK;;;IACjD,yEACE;IAAA,0EACE;IAAA,uDACF;IAAA,4DAAM;IACR,4DAAK;;;IAFD,0DACF;IADE,mGACF;;;IAKA,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;IAClD,yEACE;IAAA,0EACI;IAAA,uDACJ;;IAAA,4DAAM;IACR,4DAAK;;;IAFC,0DACJ;IADI,2JACJ;;;IAKF,yEAAsC;IAAA,qEAAU;IAAA,4DAAK;;;;IACrD,yEACI;IAAA,mFAAoJ;IAAtI,mTAA0B,kTAAgF,UAAU,KAA1F;IAA6F,4DAAe;IACxJ,4DAAK;;;;IADa,0DAA0B;IAA1B,qFAA0B;;;IAK5C,yEAAsC;IAAA,mEAAQ;IAAA,gEAAK;IAAA,sEAAU;IAAA,4DAAK;;;;IAClE,yEACE;IAAA,mFAAoK;IAAtJ,2TAAkC,kTAAgF,kBAAkB,KAAlG;IAAqG,4DAAe;IACtK,4DAAK;;;;IADW,0DAAkC;IAAlC,6FAAkC;;;IAKlD,yEAAsC;IAAA,iEAAM;IAAA,gEAAK;IAAA,qEAAS;IAAA,4DAAK;;;;IAC/D,yEACI;IAAA,mFAA8J;IAAhJ,wTAA+B,kTAAgF,eAAe,KAA/F;IAAkG,4DAAe;IAClK,4DAAK;;;;IADa,0DAA+B;IAA/B,0FAA+B;;;IAKjD,yEAAsC;IAAA,kEAAO;IAAA,4DAAK;;;;IAClD,yEACE;IAAA,mFAAgJ;IAAlI,iTAAwB,kTAAgF,QAAQ,KAAxF;IAA2F,4DAAe;IAClJ,4DAAK;;;;IADW,0DAAwB;IAAxB,mFAAwB;;;IAK1C,yEAAsC;IAAA,oEAAS;IAAA,4DAAK;;;;IACpD,yEACI;IAAA,mFAAkJ;IAApI,kTAAyB,kTAAgF,SAAS,KAAzF;IAA4F,4DAAe;IACtJ,4DAAK;;;;IADa,0DAAyB;IAAzB,oFAAyB;;;IAK3C,yEAAsC;IAAA,oEAAS;IAAA,4DAAK;;;;IACpD,yEACE;IAAA,mFAAoJ;IAAtI,mTAA0B,kTAAgF,UAAU,KAA1F;IAA6F,4DAAe;IACtJ,4DAAK;;;;IADW,0DAA0B;IAA1B,qFAA0B;;;IAKtC,yEAAsC;IAAA,kEAAO;IAAA,4DAAK;;;;IAClD,yEACE;IAAA,mFAAgJ;IAAlI,iTAAwB,kTAAgF,QAAQ,KAAxF;IAA2F,4DAAe;IAClJ,4DAAK;;;;IADW,0DAAwB;IAAxB,mFAAwB;;;IAKxC,yEAAsC;IAAA,uEAAY;IAAA,4DAAK;;;;IACvD,yEACE;IAAA,mFAAwJ;IAA1I,sTAA4B,qTAAgF,YAAY,KAA5F;IAA+F,4DAAe;IAC1J,4DAAK;;;;IADW,0DAA4B;IAA5B,uFAA4B;;;IAK5C,yEAAsC;IAAA,wEAAa;IAAA,4DAAK;;;;IACxD,yEACE;IAAA,mFAA0J;IAA5I,yTAA6B,uTAAgF,aAAa,KAA7F;IAAgG,4DAAe;IAC5J,4DAAK;;;;IADW,0DAA6B;IAA7B,yFAA6B;;;IAK7C,yEAAsC;IAAA,gEAAK;IAAA,4DAAK;;;;IAChD,yEACE;IAAA,mFAA4I;IAA9H,kTAAsB,uTAAgF,MAAM,KAAtF;IAAyF,4DAAe;IAC9I,4DAAK;;;;IADW,0DAAsB;IAAtB,kFAAsB;;;IAKtC,oEAA4C;;;;IAE1C,6EAAkF;IAAxB,6aAAsB;IAAE,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAAA,4DAAS;;;;IACpH,6EAAgF;IAAvB,6aAAsB;IAAC,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAAA,4DAAS;;;IAFpH,yEACE;IAAA,mIAAkF;IAClF,mIAAgF;IAElF,4DAAK;;;;IAHqB,0DAAiC;IAAjC,wGAAiC;IACjC,0DAAgC;IAAhC,uGAAgC;;;IAKhE,oEAA4D;;;IAC5D,oEACK;;;AD9JR,MAAM,0BAA0B;IA2BrC,YACU,WAAwB,EACxB,aAA4B;QAD5B,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QA3B/B,YAAO,GAAG,IAAI,CAAC;QACf,WAAM,GAAW,EAAE,CAAC;QACpB,oBAAe,GAAG,SAAS,CAAC;QAC5B,cAAS,GAAG,CAAC,CAAC;QACd,cAAS,GAAG,EAAE,CAAC;QAEf,iBAAY,GAAG,IAAI,4CAAO,EAAU,CAAC;QACrC,YAAO,GAAa,EAAE,CAAC;QACvB,WAAM,GAAG,EAAE,CAAC;QAIZ,qBAAgB,GAAa,CAAC,SAAS;YAC9C,OAAO;YACP,WAAW;YACX,iBAAiB;YACjB,OAAO;YACP,SAAS;YACT,UAAU;YACV,QAAQ;YACR,YAAY;YACZ,aAAa;YACb,MAAM;YACN,MAAM,CAAC,CAAC;IAKJ,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,YAAY,CAAC,IAAI,CACpB,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,CAAC;aACtB,SAAS,CAAC,KAAK,CAAC,EAAE;YACjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1C,uBAAuB;YACvB,IAAK,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,UAAU,EAAG;gBACxC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,UAAU,CAAC,eAAe;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,QAAQ,eAAe,EAAE;YACvB,KAAK,SAAS;gBACZ,IAAI,CAAC,gBAAgB,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,iBAAiB,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAG,QAAQ;oBACtH,YAAY;oBACZ,aAAa;oBACb,MAAM,EAAE,MAAM,CAAC,CAAC;gBAChB,MAAM;YACR,KAAK,SAAS;gBACZ,IAAI,CAAC,gBAAgB,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,iBAAiB;oBAC3E,OAAO,EAAE,kBAAkB,EAAE,eAAe,EAAE,QAAQ;oBACtD,YAAY;oBACZ,aAAa;oBACb,MAAM,EAAE,MAAM,CAAC,CAAC;gBAChB,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,CAAC,gBAAgB,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,iBAAiB;oBAC3E,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,QAAQ;oBAC9C,YAAY;oBACZ,aAAa;oBACb,MAAM,EAAE,MAAM,CAAC,CAAC;gBAChB,MAAM;YACR;gBACE,MAAM;SACT;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,QAAQ;QACN,MAAM,KAAK,GAAG;;;;;MAKZ,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAG,EAAE;YAC/D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,KAAK,CAAC;QACV,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,KAAK,GAAG;kBACI,IAAI,CAAC,aAAa;6BACP,IAAI,CAAC,MAAM;4BACZ,IAAI,CAAC,eAAe;QACxC,CAAC;SACJ;aAAM;YACL,KAAK,GAAG;6BACe,IAAI,CAAC,MAAM;4BACZ,IAAI,CAAC,eAAe;QACxC,CAAC;SACJ;QAGD,MAAM,KAAK,GAAG;;sDAEoC,IAAI,CAAC,SAAS,YAAY,IAAI,CAAC,SAAS,YAAY,KAAK;;;;;;;;;;;;;;;;;;;;;yCAqBtE,KAAK;;;;;MAKxC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAG,EAAE;YAC/D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAc,IAAI,CAAC,YAAY,CAAC,CAAC;YACzE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,KAAK,CAAC;YAC9D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,KAAK;QACR,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,IAAI,CAAC,KAAK;QACR,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAChC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAE,CAAC;SACvD;IACH,CAAC;IAED,SAAS,CAAC,GAAgB,EAAE,KAAK;QAC/B,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;YACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACzB,MAAM,OAAO,GAAG;;;qBAGD,GAAG,CAAC,EAAE;;;gBAGX,KAAK,KAAK,GAAG,CAAC,KAAK,CAAC;;;;;;;UAO1B,CAAC;YAEL,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;gBAClD,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,SAAS,CAAC,CAAC;QACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC;QAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;;oGA7MU,0BAA0B;0GAA1B,0BAA0B;QCbvC,gJAAwF;QACxF,yEACI;QAAA,8EACI;QAAA,yEACI;QAAA,yEACE;QAAA,oFACE;QAAA,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,2EAGA;QAHqC,8LAAoB,+GAExC,6BAA8B,IAFU,yFAEC,kBAAc,IAFf;QAAzD,4DAGA;QAAA,4HACE;QAEJ,4DAAiB;QACnB,4DAAM;QACN,uEACE;QAAA,qFACI;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,iFACI;QADgE,iLAAmB,8BAA0B,IAAC;QAC9G,8EAAY;QAAA,+DAAG;QAAA,4DAAa;QAC5B,sIACI;QAER,4DAAa;QACjB,4DAAiB;QACnB,4DAAM;QACN,uEACE;QAAA,mGACE;QAAA,yFACE;QADgE,8JAAS,eAAW,SAAS,CAAC,IAAC;QAC/F,qEACF;QAAA,4DAAoB;QACpB,yFACE;QADgE,8JAAS,eAAW,SAAS,CAAC,IAAC;QAC/F,qEACF;QAAA,4DAAoB;QACpB,yFACE;QAD+D,8JAAS,eAAW,QAAQ,CAAC,IAAC;QAC7F,oEACF;QAAA,4DAAoB;QACtB,4DAA0B;QAC5B,4DAAM;QACR,4DAAM;QACZ,4DAAW;QAEX,2EACI;QAAA,6EAEE;QAAA,6EACE;QAAA,uHAAuC;QACvC,uHACE;QAIJ,qEAAe;QAEf,6EACE;QAAA,uHAAuC;QACvC,uHACE;QAIJ,qEAAe;QAEf,6EACE;QAAA,uHAAuC;QACvC,uHACE;QAIJ,qEAAe;QAEf,6EACE;QAAA,uHAAuC;QACvC,uHACE;QAIJ,qEAAe;QAEf,6EACI;QAAA,uHAAuC;QACvC,uHACE;QAIJ,qEAAe;QAEf,6EACE;QAAA,uHAAsC;QACtC,uHACI;QAEN,qEAAe;QAEf,6EACE;QAAA,uHAAsC;QACtC,uHACE;QAEJ,qEAAe;QAEf,6EACE;QAAA,uHAAsC;QACtC,uHACI;QAEN,qEAAe;QAEf,6EACE;QAAA,uHAAsC;QACtC,uHACE;QAEJ,qEAAe;QAEjB,6EACE;QAAA,uHAAsC;QACtC,uHACI;QAEN,qEAAe;QAEf,6EACE;QAAA,uHAAsC;QACtC,uHACE;QAEJ,qEAAe;QAEb,6EACI;QAAA,uHAAsC;QACtC,uHACE;QAEJ,qEAAe;QAEf,6EACE;QAAA,uHAAsC;QACtC,uHACE;QAEJ,qEAAe;QAEf,6EACE;QAAA,uHAAsC;QACtC,uHACE;QAEJ,qEAAe;QAEf,6EACE;QAAA,uHAAsC;QACtC,uHACE;QAEJ,qEAAe;QAEf,6EACE;QAAA,uHAAuC;QACvC,uHACE;QAIJ,qEAAe;QAEnB,uHAAuD;QACvD,uHACA;QACF,4DAAQ;QAER,qFAIgB;QADN,8JAAQ,qBAAiB,IAAC;QACpC,4DAAgB;QAClB,4DAAM;QAER,4DAAM;;QArL6B,6EAAe;QAOD,0DAAoB;QAApB,+EAAoB;QAGtC,0DAAc;QAAd,4EAAc;QAQa,0DAAuB;QAAvB,oFAAuB;QAEnD,0DAA2B;QAA3B,+EAA2B;QAuBpC,2DAAyB;QAAzB,sFAAyB;QA8HrB,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;QAI/C,0DAAqB;QAArB,kFAAqB;;6FDjK/B,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ4D;AACE;AACV;AAIL;AACa;AAGN;;;;;;;;;;;;;;ICM7C,qEACA;;;IADwB,mNAAwE;;;IAChG,qEACA;;;IAAA,+EAAmE;IAAA,gEAAK;IAAA,4DAAW;;;IAdzF,wEACE;IAAA,8EAKE;IAAA,0EAKA;IAAA,0EACE;IAAA,0IACA;IAAA,0IACA;IAAA,oJAAmE;IACrE,4DAAM;IACN,0EACE;IAAA,yEAAoB;IAAA,uDAAkB;IAAA,4DAAK;IAAA,4EAAyB;IAAA,wDAAoE;;IAAA,4DAAO;IAAC,iEAEhJ;IAAA,2EACE;IAAA,wEAAqD;IAAA,sEAAU;IAAA,gFAAuC;IAAA,gEAAI;IAAA,4DAAW;IAAA,4DAAO;IAC5H,wEAA6D;IAAA,qEAAS;IAAA,gFAAuC;IAAA,gEAAI;IAAA,4DAAW;IAAA,4DAAO;IACnI,wEAA0D;IAAA,uEAAW;IAAA,gFAAuC;IAAA,gEAAI;IAAA,4DAAW;IAAA,4DAAO;IAClI,wEAAmD;IAAA,mEAAO;IAAA,gFAAuC;IAAA,gEAAI;IAAA,4DAAW;IAAA,4DAAO;IACvH,wEAAoD;IAAA,qEAAS;IAAA,gFAAuC;IAAA,gEAAI;IAAA,4DAAW;IAAA,4DAAO;IAC1H,wEAAqD;IAAA,qEAAS;IAAA,gFAAuC;IAAA,gEAAI;IAAA,4DAAW;IAAA,4DAAO;IAC3H,wEAAmD;IAAA,mEAAO;IAAA,gFAAuC;IAAA,gEAAI;IAAA,4DAAW;IAAA,4DAAO;IACvH,wEAAuD;IAAA,wEAAY;IAAA,gFAAuC;IAAA,gEAAI;IAAA,4DAAW;IAAA,4DAAO;IAChI,wEAAwD;IAAA,yEAAa;IAAA,gFAAuC;IAAA,gEAAI;IAAA,4DAAW;IAAA,4DAAO;IACpI,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,4DAAW;IACb,qEAAe;;;;IArBwF,0DAA4D;IAA5D,4HAA4D;IAChG,0DAA+B;IAA/B,4FAA+B;IAClF,0DAAiC;IAAjC,qGAAiC;IAGvB,0DAAkB;IAAlB,gFAAkB;IAA8B,0DAAoE;IAApE,4MAAoE;IAGhI,0DAA8C;IAA9C,iHAA8C;IAC9C,0DAAsD;IAAtD,yHAAsD;IACtD,0DAAmD;IAAnD,sHAAmD;IACnD,0DAA4C;IAA5C,+GAA4C;IAC5C,0DAA6C;IAA7C,gHAA6C;IAC7C,0DAA8C;IAA9C,iHAA8C;IAC9C,0DAA4C;IAA5C,+GAA4C;IAC5C,0DAAgD;IAAhD,mHAAgD;IAChD,0DAAiD;IAAjD,oHAAiD;;;;IAmB7D,6EACE;IADsB,yUAAuB;IAC7C,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAC3B,4DAAS;;ADpCR,MAAM,8BAA8B;IAgBzC,YACS,MAAiB,EAChB,WAAwB,EACxB,WAAwB,EACxB,aAA4B;QAH7B,WAAM,GAAN,MAAM,CAAW;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAlB/B,WAAM,GAAG;YACd,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAC;YACrC,EAAC,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAC;SACvC,CAAC;QAEF,mBAAc,GAAG,EAAE,CAAC;QAIb,eAAU,GAAG,KAAK,CAAC;IAUtB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1C,uBAAuB;YACvB,IAAK,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,UAAU,EAAG;gBACxC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,eAAe;QACb,MAAM,KAAK,GAAG;;MAEZ,CAAC;QAEH,MAAM,KAAK,GAAG;;sDAEoC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAmCrD,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9C,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YAClC,MAAM,UAAU,GAAO,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,KAAK,CAAC;YACrE,MAAM,KAAK,GAAG,EAAE,CAAC;YAEjB,UAAU,CAAC,OAAO,CAAC,CAAC,EAAO,EAAE,EAAE;gBAC7B,MAAM,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;gBACnB,MAAM,KAAK,GAAG,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;gBAC5C,KAAK,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,MAAM,KAAK,GAAG;;;;MAIZ,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9C,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;QACnD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2EAAgB,EAAE;YACnD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC;SAC9B,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YAChD,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,UAAU,GAAG,mBAAO,CAAC,gEAAY,CAAC,CAAC;QACzC,IAAI,UAAU,CAAC,SAAS,EAAE;YACxB,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC5B;IACH,CAAC;IAED,WAAW;QACT,0CAA0C;QAC1C,iCAAiC;QACjC,2DAA2D;QAC3D,wBAAwB;QACxB,QAAQ;QACR,MAAM;IACR,CAAC;IAEK,UAAU;;YACd,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC5C,MAAM,OAAO,GAAU,GAAG,CAAC;gBAC3B,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;oBACnB,mBAAmB;oBACnB,+FAA+F;oBAC/F,yDAAyD;oBACzD,qBAAqB;oBACrB,0CAA0C;oBAC1C,MAAM;gBACR,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;;4GA7JU,8BAA8B;8GAA9B,8BAA8B;QCjB3C,yEACE;QAAA,6EACA;QAAA,4EAAgD;QAA3B,sJAAS,oBAAgB,IAAC;QAAC,2EAAU;QAAA,uDAAmD;QAAA,4DAAW;QAAA,4DAAS;QACjI,yEACE;QAAA,8IACE;QAiCJ,4DAAM;QACN,oEAAiC;QACjC,iFACE;QASA,0EAAsC;QAAA,wDACpC;QAAA,kIACE;QAEJ,4DAAO;QACT,4DAAc;QAChB,4DAAU;QACV,4DAAM;;QAvDsD,0DAAmD;QAAnD,mHAAmD;QAE7F,0DAAyB;QAAzB,6EAAyB;QA8CD,0DACpC;QADoC,sFACpC;QAAgD,0DAA8C;QAA9C,4GAA8C;;6FDlCvF,8BAA8B;cAL1C,uDAAS;eAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,WAAW,EAAE,yCAAyC;gBACtD,SAAS,EAAE,CAAC,yCAAyC,CAAC;aACvD;;;;;;;;;;;;;;AEhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACsB;AACf;;;;;;;;;;;ICF1D,iFAA6G;;ADStG,MAAM,gBAAgB;IAM3B,YACU,SAAyC,EACzC,WAAwB,EACA,IAAS;QAFjC,cAAS,GAAT,SAAS,CAAgC;QACzC,gBAAW,GAAX,WAAW,CAAa;QACA,SAAI,GAAJ,IAAI,CAAK;QARpC,YAAO,GAAG,EAAE,CAAC;IAShB,CAAC;IAEL,QAAQ;QACN,IAAG,IAAI,CAAC,IAAI,EAAC;YACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;SAClC;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,OAAO,GAAG;;;;;;gCAMY,IAAI,CAAC,OAAO;;;;;;;MAOtC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACrD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;gFA3CU,gBAAgB,sUASjB,wEAAe;gGATd,gBAAgB;QCT7B,sIAA0F;QAC1F,6EACI;QADE,4IAAY,cAAU,IAAC;QACzB,oFACI;QAAA,4EAAW;QAAA,kEAAO;QAAA,4DAAY;QAC9B,2EACF;QADkB,qLAAqB;QAArC,4DACF;QAAA,4DAAiB;QACnB,4EAAwC;QAAA,+DAAI;QAAA,4DAAS;QACrD,uEAAuF;QAAjE,mIAAS,eAAW,IAAC;QAA4C,kEAAM;QAAA,4DAAI;QACrG,4DAAO;;QARgC,6EAAe;QAI9B,0DAAqB;QAArB,gFAAqB;;6FDKhC,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;sBAUI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AElB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACE;;;;;;;;;ICK1B,qEAEA;;;IAFuB,0MAA8D;;;IAErF,qEACJ;;;IANR,8EACI;IAAA,yEACI;IAAA,yEACI;IAAA,gJAEA;IAAA,gJACJ;IAAA,4DAAM;IACN,0EACI;IAAA,0EACI;IAAA,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,uEACI;IAAA,wDACA;IAAA,2EAAsD;IAC1D,4DAAO;IACX,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,wEAAO;IAAA,2EAAc;IAAA,4DAAO;IAAC,4EAA2B;IAAA,wDAA4B;IAAA,4DAAO;IAAC,iEAC5F;IAAA,wEAAM;IAAA,sEAAW;IAAA,4DAAO;IAAC,4EAA0B;IAAA,wDAAsB;IAAA,4DAAO;IAAA,iEAChF;IAAA,wEAAM;IAAA,sEAAW;IAAA,4DAAO;IAAC,4EAA0B;IAAA,wDAAuB;IAAA,4DAAO;IAAA,iEACjF;IAEJ,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,wEAAO;IAAA,oEAAO;IAAA,4DAAO;IAAC,4EAA2B;IAAA,wDAA4B;IAAA,4DAAO;IAAC,iEACrF;IAAA,wEAAM;IAAA,yEAAa;IAAA,4DAAO;IAAC,4EAA2B;IAAA,wDAAyB;IAAA,4DAAO;IAAC,iEACvF;IAAA,wEAAM;IAAA,0EAAe;IAAA,4DAAO;IAAC,4EAA0B;IAAA,wDAA0B;IAAA,4DAAO;IAAA,iEACxF;IAEJ,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEV,4DAAM;IACV,4DAAW;;;;IAhCK,0DAAyB;IAAzB,uFAAyB;IAC+B,0DAA0B;IAA1B,wFAA0B;IAI9E,0DAAmB;IAAnB,oFAAmB;IACjB,0DAAgC;IAAhC,sGAAgC;IAClC,0DACA;IADA,uGACA;IAKwD,0DAA4B;IAA5B,uGAA4B;IACjC,0DAAsB;IAAtB,uFAAsB;IACtB,0DAAuB;IAAvB,wFAAuB;IAOzB,0DAA4B;IAA5B,uGAA4B;IACvB,0DAAyB;IAAzB,oGAAyB;IACxB,0DAA0B;IAA1B,2FAA0B;;;IA7BzG,wEACI;IAAA,iJACI;IAoCR,qEAAe;;;IArCwE,0DAAoB;IAApB,kFAAoB;;;IAgD3F,qEAEA;;;IAFuB,0MAA8D;;;IAErF,qEACJ;;;IAVR,0EACI;IAAA,0EAEI;IAAA,0EACI;IAAA,uDACJ;IAAA,4DAAM;IACN,yEACI;IAAA,4IAEA;IAAA,4IACJ;IAAA,4DAAM;IACN,0EACI;IAAA,0EAA+B;IAAA,oEAAG;IAAA,wDAAmB;IAAA,4DAAI;IAAA,4DAAM;IAC/D,uEAAK;IAAA,wDAA0C;IAAA,4DAAM;IACrD,uEAAK;IAAA,wDAAgC;IAAA,4DAAM;IAC3C,uEAAK;IAAA,wDAAiC;IAAA,4DAAM;IAC5C,uEAAK;IAAA,wDAAsC;IAAA,4DAAM;IACjD,uEAAK;IAAA,wDAAwC;IAAA,4DAAM;IACnD,uEAAK;IAAA,wDAAmC;IAAA,4DAAM;IAClD,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IAjBM,0DACJ;IADI,uGACJ;IAGQ,0DAAyB;IAAzB,uFAAyB;IAC+B,0DAA0B;IAA1B,wFAA0B;IAGpD,0DAAmB;IAAnB,oFAAmB;IAChD,0DAA0C;IAA1C,oHAA0C;IAC1C,0DAAgC;IAAhC,0GAAgC;IAChC,0DAAiC;IAAjC,2GAAiC;IACjC,0DAAsC;IAAtC,gHAAsC;IACtC,0DAAwC;IAAxC,kHAAwC;IACxC,0DAAmC;IAAnC,6GAAmC;;;IAnBxD,wEACI;IAAA,wIACI;IAqBR,qEAAe;;;IAtB0E,0DAAoB;IAApB,kFAAoB;;ADpC9G,MAAM,0BAA0B;IAIrC,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAH3B,UAAK,GAAU,EAAE,CAAC;IAIrB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;QACN,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,MAAM,SAAS,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACpF,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,MAAM,KAAK,GAAG;wDACsC,SAAS;;;;;;;;;;;;;;;MAe3D,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9C,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7B,MAAM,SAAS,GAAU,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;gBACxC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBAC1B,wBAAwB;oBACxB,MAAM,KAAK,GAAG;wBACZ,EAAE,EAAE,OAAO,CAAC,EAAE;wBACd,IAAI,EAAE,OAAO,CAAC,QAAQ;wBACtB,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;wBAChE,YAAY,EAAE,OAAO,CAAC,YAAY,CAAC,MAAM;wBACzC,OAAO,EAAE,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;wBACrG,QAAQ,EAAE,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;wBACvG,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;wBAC3G,WAAW,EAAE,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;qBAC9G,CAAC;oBACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACzB,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/G,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,KAAK;QACT,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;;oGA3DU,0BAA0B;0GAA1B,0BAA0B;QCRvC,yEACI;QAAA,yEACI;QAAA,wIACI;;QAsCR,4DAAM;QACN,yEACI;QAAA,wIACI;;QAuBR,4DAAM;QACV,4DAAM;;QAlEgB,0DAAqC;QAArC,+IAAqC;QAyCpC,0DAAqC;QAArC,+IAAqC;;6FDnC/C,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACJ;AACsC;AAC/C;AACwB;AACvB;AACY;AACR;AACe;AAErC;;;;;;;;;;;;;;;;;;;;;ICT/B,kFAA2G;;;;IAUnG,6EACE;IAD6E,0SAAS,2BAAuB,EAAE,CAAC,IAAC;IACjH,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC5B,4DAAS;;;IAyBT,yEAAuC;IAAA,oEAAQ;IAAA,4DAAK;;;IACpD,yEACE;IAAA,0EACI;IAAA,uDACJ;IAAA,4DAAM;IACR,4DAAK;;;IAFC,0DACJ;IADI,4FACJ;;;IAKF,yEAAuC;IAAA,iEAAK;IAAA,4DAAK;;;IACjD,yEACE;IAAA,0EACI;IAAA,uDACJ;;IAAA,4DAAM;IACR,4DAAK;;;IAFC,0DACJ;IADI,4KACJ;;;IAKF,yEAAuC;IAAA,iEAAK;IAAA,4DAAK;;;IACjD,yEACE;IAAA,0EACE;IAAA,uDACF;IAAA,4DAAM;IACR,4DAAK;;;IAFD,0DACF;IADE,oGACF;;;IAKA,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;IAClD,yEACE;IAAA,0EACI;IAAA,uDACJ;;IAAA,4DAAM;IACR,4DAAK;;;IAFC,0DACJ;IADI,4JACJ;;;IAKF,yEAAsC;IAAA,qEAAU;IAAA,4DAAK;;;;IACrD,yEACI;IAAA,mFAAoJ;IAAtI,iTAA0B,kTAAgF,UAAU,KAA1F;IAA6F,4DAAe;IACxJ,4DAAK;;;;IADa,0DAA0B;IAA1B,sFAA0B;;;IAK5C,yEAAsC;IAAA,mEAAQ;IAAA,gEAAK;IAAA,sEAAU;IAAA,4DAAK;;;;IAClE,yEACE;IAAA,mFAAoK;IAAtJ,yTAAkC,kTAAgF,kBAAkB,KAAlG;IAAqG,4DAAe;IACtK,4DAAK;;;;IADW,0DAAkC;IAAlC,8FAAkC;;;IAKlD,yEAAsC;IAAA,iEAAM;IAAA,gEAAK;IAAA,qEAAS;IAAA,4DAAK;;;;IAC/D,yEACI;IAAA,mFAA8J;IAAhJ,sTAA+B,kTAAgF,eAAe,KAA/F;IAAkG,4DAAe;IAClK,4DAAK;;;;IADa,0DAA+B;IAA/B,2FAA+B;;;IAKjD,yEAAsC;IAAA,kEAAO;IAAA,4DAAK;;;;IAClD,yEACE;IAAA,mFAAgJ;IAAlI,+SAAwB,kTAAgF,QAAQ,KAAxF;IAA2F,4DAAe;IAClJ,4DAAK;;;;IADW,0DAAwB;IAAxB,oFAAwB;;;IAK1C,yEAAsC;IAAA,oEAAS;IAAA,4DAAK;;;;IACpD,yEACI;IAAA,mFAAkJ;IAApI,gTAAyB,kTAAgF,SAAS,KAAzF;IAA4F,4DAAe;IACtJ,4DAAK;;;;IADa,0DAAyB;IAAzB,qFAAyB;;;IAK3C,yEAAsC;IAAA,oEAAS;IAAA,4DAAK;;;;IACpD,yEACE;IAAA,mFAAoJ;IAAtI,iTAA0B,kTAAgF,UAAU,KAA1F;IAA6F,4DAAe;IACtJ,4DAAK;;;;IADW,0DAA0B;IAA1B,sFAA0B;;;IAKtC,yEAAsC;IAAA,kEAAO;IAAA,4DAAK;;;;IAClD,yEACE;IAAA,mFAAgJ;IAAlI,+SAAwB,kTAAgF,QAAQ,KAAxF;IAA2F,4DAAe;IAClJ,4DAAK;;;;IADW,0DAAwB;IAAxB,oFAAwB;;;IAKxC,oEAA4C;;;;IAE1C,6EAAkF;IAAxB,waAAsB;IAAE,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAAA,4DAAS;;;;IACpH,6EAAgF;IAAvB,waAAsB;IAAC,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAAA,4DAAS;;;IAFpH,yEACE;IAAA,8HAAkF;IAClF,8HAAgF;IAElF,4DAAK;;;;IAHqB,0DAAiC;IAAjC,yGAAiC;IACjC,0DAAgC;IAAhC,wGAAgC;;;IAKhE,oEAA4D;;;IAC5D,oEACK;;;ADpHJ,MAAM,qBAAqB;IAwChC,YACS,MAAiB,EAChB,WAAwB,EACxB,WAAwB,EACxB,aAA4B;QAH7B,WAAM,GAAN,MAAM,CAAW;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QA1CtC,qBAAgB,GAAa,EAAE,CAAC;QAGzB,iBAAY,GAAkB,EAAE,CAAC;QACjC,YAAO,GAAG,IAAI,CAAC;QACf,cAAS,GAAG,CAAC,CAAC;QACd,cAAS,GAAG,EAAE,CAAC;QAEf,WAAM,GAAG,EAAE,CAAC;QACZ,oBAAe,GAAG,SAAS,CAAC;QAC5B,YAAO,GAAa,EAAE,CAAC;QAEtB,oBAAe,GAAgB;YACrC,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,EAAE;YACR,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE,IAAI;YAChB,WAAW,EAAE,IAAI;YACjB,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,IAAI;YACd,gBAAgB,EAAE,IAAI;YACtB,aAAa,EAAE,IAAI;YACnB,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,IAAI;SACb,CAAC;QAIF,iBAAY,GAAG,IAAI,4CAAO,EAAU,CAAC;QAUnC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC9D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,iBAAiB,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAG,QAAQ,EAAE,MAAM,CAAC,CAAC;QACvH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEjC,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC;QAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,YAAY,CAAC,IAAI,CACpB,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,CAAC;aACtB,SAAS,CAAC,KAAK,CAAC,EAAE;YACjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1C,uBAAuB;YACvB,IAAK,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,UAAU,EAAG;gBACxC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,UAAU,CAAC,eAAe;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,QAAQ,eAAe,EAAE;YACvB,KAAK,SAAS;gBACZ,IAAI,CAAC,gBAAgB,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,iBAAiB,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAG,QAAQ,EAAE,MAAM,CAAC,CAAC;gBACvH,MAAM;YACR,KAAK,SAAS;gBACZ,IAAI,CAAC,gBAAgB,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,iBAAiB;oBAClE,OAAO,EAAE,kBAAkB,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;gBAChE,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,CAAC,gBAAgB,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,iBAAiB;oBAClE,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;gBACxD,MAAM;YACR;gBACE,MAAM;SACT;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,MAAM,KAAK,GAAG;gBACF,IAAI,CAAC,MAAM;2BACA,IAAI,CAAC,MAAM;0BACZ,IAAI,CAAC,eAAe;MACxC,CAAC;QAEH,MAAM,KAAK,GAAG;;sDAEoC,IAAI,CAAC,SAAS,YAAY,IAAI,CAAC,SAAS,YAAY,KAAK;;;;;;;;;;;;;;;;;;yCAkBtE,KAAK;;;;;MAKxC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAG,EAAE;YAC/D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAc,IAAI,CAAC,YAAY,CAAC,CAAC;YACzE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,KAAK,CAAC;YAC9D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2GAA0B,EAAE;YAC7D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,eAAe,EAAE,IAAI,CAAC,eAAe,EAAC;SAC1E,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;YACrD,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,KAAK;QACR,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,IAAI,CAAC,KAAK;QACR,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAChC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAE,CAAC;SACvD;IACH,CAAC;IAED,SAAS,CAAC,GAAgB,EAAE,KAAK;QAC/B,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;YACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACzB,MAAM,OAAO,GAAG;;;qBAGD,GAAG,CAAC,EAAE;;;gBAGX,KAAK,KAAK,GAAG,CAAC,KAAK,CAAC;;;;;;;UAO1B,CAAC;YAEL,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;gBAClD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;gBACrD,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,SAAS,CAAC,CAAC;QACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC;QAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;;0FAvMU,qBAAqB;qGAArB,qBAAqB;wEAsCrB,8DAAO;;;;;QCtDpB,2IAAwF;QACxF,yEACE;QAAA,8EACA;QAAA,yEACE;QAAA,yEACE;QAAA,oFACE;QAAA,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,2EAGA;QAHqC,yLAAoB,0GAExC,6BAA8B,IAFU,oFAEC,kBAAc,IAFf;QAAzD,4DAGA;QAAA,uHACE;QAEJ,4DAAiB;QACnB,4DAAM;QACN,uEACE;QAAA,iGACE;QAAA,yFACE;QADgE,yJAAS,eAAW,SAAS,CAAC,IAAC;QAC/F,qEACF;QAAA,4DAAoB;QACpB,yFACE;QADgE,yJAAS,eAAW,SAAS,CAAC,IAAC;QAC/F,qEACF;QAAA,4DAAoB;QACpB,yFACE;QAD+D,yJAAS,eAAW,QAAQ,CAAC,IAAC;QAC7F,oEACF;QAAA,4DAAoB;QACtB,4DAA0B;QAC5B,4DAAM;QACN,uEACE;QAAA,8EAA0E;QAAtB,8IAAS,eAAW,IAAC;QAAC,2EAAe;QAAA,4DAAS;QACpG,4DAAM;QACR,4DAAM;QACP,4DAAW;QACV,2EACE;QAAA,6EAEE;QAAA,6EACE;QAAA,kHAAuC;QACvC,kHACE;QAIJ,qEAAe;QAEf,6EACE;QAAA,kHAAuC;QACvC,kHACE;QAIJ,qEAAe;QAEf,6EACE;QAAA,kHAAuC;QACvC,kHACE;QAIJ,qEAAe;QAEf,6EACI;QAAA,kHAAuC;QACvC,kHACE;QAIJ,qEAAe;QAEf,6EACE;QAAA,kHAAsC;QACtC,kHACI;QAEN,qEAAe;QAEf,6EACE;QAAA,kHAAsC;QACtC,kHACE;QAEJ,qEAAe;QAEf,6EACE;QAAA,kHAAsC;QACtC,kHACI;QAEN,qEAAe;QAEf,6EACE;QAAA,kHAAsC;QACtC,kHACE;QAEJ,qEAAe;QAEjB,6EACE;QAAA,kHAAsC;QACtC,kHACI;QAEN,qEAAe;QAEf,6EACE;QAAA,kHAAsC;QACtC,kHACE;QAEJ,qEAAe;QAEb,6EACI;QAAA,kHAAsC;QACtC,kHACE;QAEJ,qEAAe;QAEf,6EACE;QAAA,kHAAuC;QACvC,kHACE;QAIJ,qEAAe;QAEnB,kHAAuD;QACvD,kHACA;QACF,4DAAQ;QAER,qFAIgB;QADN,yJAAQ,qBAAiB,IAAC;QACpC,4DAAgB;QAClB,4DAAM;QAER,4DAAM;;QA9IiC,6EAAe;QAOT,0DAAoB;QAApB,+EAAoB;QAGtC,0DAAc;QAAd,4EAAc;QAwBpB,2DAAyB;QAAzB,sFAAyB;QAgGrB,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;QAI/C,0DAAqB;QAArB,kFAAqB;;6FDvH3B,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;kBAuCE,uDAAS;mBAAC,8DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;;;;;;;;;;;;;AEvDpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACc;AACJ;AACnB;AACW;;;;;;;;;;;;;;;;ICJ5D,kFAAgG;;;IAgCxF,4EAAiI;IAAA,mEAAQ;IAAA,4DAAY;;;IAQrJ,sEACE;IAAA,mFAAwD;IAAA,mEAAQ;IAAA,4DAAe;IAAA,gEAC/E;IAAA,mFAAyD;IAAA,mEAAQ;IAAA,4DAAe;IAAA,gEAChF;IAAA,mFAAuD;IAAA,iEAAM;IAAA,4DAAe;IAC9E,4DAAM;;;IACN,sEACE;IAAA,mFAAiE;IAAA,4EAAiB;IAAA,4DAAe;IAAA,gEACjG;IAAA,mFAA8D;IAAA,yEAAc;IAAA,4DAAe;IAAA,gEAC3F;IAAA,mFAAuD;IAAA,iEAAM;IAAA,4DAAe;IAC9E,4DAAM;;;IACN,sEACE;IAAA,mFAAyD;IAAA,oEAAS;IAAA,4DAAe;IAAA,gEACjF;IAAA,mFAA8D;IAAA,yEAAc;IAAA,4DAAe;IAAA,gEAC3F;IAAA,mFAAuD;IAAA,iEAAM;IAAA,4DAAe;IAC9E,4DAAM;;AD1CP,MAAM,0BAA0B;IA0BrC,YACS,SAAmD,EAClD,WAAwB,EACxB,WAAwB,EACA,IAAS;QAHlC,cAAS,GAAT,SAAS,CAA0C;QAClD,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACA,SAAI,GAAJ,IAAI,CAAK;QA5BpC,YAAO,GAAG,KAAK,CAAC;QAChB,SAAI,GAAG,IAAI,CAAC;QAQnB,0BAAqB,GAAG,IAAI,wDAAS,CAAC;YACpC,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,OAAO,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YAC/B,QAAQ,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YAChC,MAAM,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YAC9B,QAAQ,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YAChC,gBAAgB,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YACxC,aAAa,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YACrC,MAAM,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;SAE/B,CAAC,CAAC;IASC,CAAC;IAEL,QAAQ;QACN,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC;QAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACzC,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,iBAAiB;QACf,MAAM,OAAO,GAAG;;;sBAGE,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO;mBAC3C,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,KAAK;qBACpC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO;sBACvC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,QAAQ;oBAC3C,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,MAAM;sBACrC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,QAAQ;8BACjC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,gBAAgB;2BACpD,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,aAAa;oBACrD,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,MAAM;6BAC9B,IAAI,CAAC,OAAO;oBACrB,IAAI,CAAC,MAAM;;;;;;;;;;;MAWzB,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC;aACnC,SAAS,CAAC,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;;oGA3EU,0BAA0B,2cA8B3B,wEAAe;0GA9Bd,0BAA0B;QCZvC,gJAA6E;QAC7E,0EAEE;QAFwC,sJAAY,uBAAmB,IAAC;QAExE,yEACE;QAAA,wEAAqB;QAAA,mFAAwB;QAAA,4DAAK;QACpD,4DAAM;QAER,yEAEE;QAAA,gGACE;QAAA,uFACE;QADgE,2KAAmB,SAAS,IAAC;QAC7F,oEACF;QAAA,4DAAoB;QACpB,wFACE;QADgE,4KAAmB,SAAS,IAAC;QAC7F,qEACF;QAAA,4DAAoB;QACpB,wFACE;QAD+D,4KAAmB,QAAQ,IAAC;QAC3F,oEACF;QAAA,4DAAoB;QACtB,4DAA0B;QASxB,sFACI;QAAA,6EAAW;QAAA,mEAAO;QAAA,4DAAY;QAC9B,wEACA;QAAA,gFAAoB;QAAA,gEAAI;QAAA,4DAAW;QACnC,qIAAiI;QACnI,4DAAiB;QACjB,2EACI;QAAA,kFACI;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,4EAAgB;QAAA,oEAAQ;QAAA,4DAAO;QAC/B,wEACF;QAAA,4DAAiB;QACrB,yHACE;QAIF,yHACE;QAIF,yHACE;QAMJ,4DAAM;QACZ,4DAAM;QAEJ,2EACI;QAAA,8EAAyF;QAAA,mEAEzF;QAAA,4DAAS;QACT,yEAAmE;QAA7C,8IAAS,eAAW,IAAC;QAAwB,kEAAM;QAAA,4DAAI;QAEjF,4DAAM;QACR,4DAAO;;QAnEgC,6EAAe;QAChD,0DAAmC;QAAnC,gGAAmC;QAQgB,0DAAiB;QAAjB,8EAAiB;QAuBvD,2DAAqH;QAArH,uLAAqH;QAQ3H,0DAA4B;QAA5B,0FAA4B;QAK5B,0DAA4B;QAA5B,0FAA4B;QAK5B,0DAA2B;QAA3B,yFAA2B;QAWM,0DAAyC;QAAzC,sGAAyC;;6FDjD1E,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;sBA+BI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AE1C3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AAC6C;AAC/C;AACU;AACZ;AACY;AACR;;;;;;;;;;;;;;;;;ICLrD,kFAA8F;;;IAUpF,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAF2B,kFAAoB;IAC1D,0DACF;IADE,2FACF;;;IAMA,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAF0B,kFAAoB;IACzD,0DACF;IADE,2FACF;;;IAUF,yEAAuC;IAAA,oEAAQ;IAAA,4DAAK;;;IACpD,yEACE;IAAA,0EACI;IAAA,uDACJ;IAAA,4DAAM;IACR,4DAAK;;;IAFC,0DACJ;IADI,4FACJ;;;IAKA,yEAAuC;IAAA,iEAAK;IAAA,4DAAK;;;IACjD,yEACE;IAAA,0EACI;IAAA,uDACJ;IAAA,4DAAM;IACR,4DAAK;;;IAFC,0DACJ;IADI,+FACJ;;;IAKF,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;IAClD,yEACE;IAAA,0EACI;IAAA,uDACJ;IAAA,4DAAM;IACR,4DAAK;;;IAFC,0DACJ;IADI,6FACJ;;;IAKF,yEAAuC;IAAA,iEAAK;IAAA,4DAAK;;;IAG7C,uEAAoC;IAAA,gEAAK;IAAA,4DAAO;;;IAChD,uEAAoC;IAAA,uDAAgB;IAAA,4DAAO;;;IAAvB,0DAAgB;IAAhB,kFAAgB;;;IAHxD,yEACE;IAAA,0EACE;IAAA,gIAAoC;IACpC,gIAAoC;IACtC,4DAAM;IACR,4DAAK;;;IAHK,0DAA6B;IAA7B,4FAA6B;IAC7B,0DAA6B;IAA7B,4FAA6B;;;IAMrC,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;IAClD,yEACE;IAAA,0EACI;IAAA,uDACJ;IAAA,4DAAM;IACR,4DAAK;;;IAFC,0DACJ;IADI,2FACJ;;;IAMF,yEAAsC;IAAA,qEAAU;IAAA,4DAAK;;;;IAEjD,mFAAyK;IAA3J,gYAA0B,iYAAyC,UAAU,KAAnD;IAAkH,4DAAe;;;IAA3J,sFAA0B;;;IAD5C,yEACI;IAAA,gJAA0J;IAC9J,4DAAK;;;IAD8F,0DAA0D;IAA1D,8HAA0D;;;IAK7J,yEAAsC;IAAA,mEAAQ;IAAA,gEAAK;IAAA,sEAAU;IAAA,4DAAK;;;;IAEhE,mFAAyL;IAA3K,wYAAkC,iYAAyC,kBAAkB,KAA3D;IAA0H,4DAAe;;;IAA3K,8FAAkC;;;IADlD,yEACE;IAAA,gJAA0K;IAC5K,4DAAK;;;IAD4G,0DAA0D;IAA1D,8HAA0D;;;IAK3K,yEAAsC;IAAA,iEAAM;IAAA,gEAAK;IAAA,qEAAS;IAAA,4DAAK;;;;IAE3D,mFAAqJ;IAAvI,qYAA+B,iYAAyC,eAAe,KAAxD;IAAyF,4DAAe;;;IAAvI,2FAA+B;;;IADjD,yEACI;IAAA,gJAAsI;IAC1I,4DAAK;;;IADuG,0DAA6B;IAA7B,4FAA6B;;;IAKzI,yEAAsC;IAAA,kEAAO;IAAA,4DAAK;;;;IAEhD,mFAAuI;IAAzH,8XAAwB,iYAAyC,QAAQ,KAAjD;IAAkF,4DAAe;;;IAAzH,oFAAwB;;;IADxC,yEACE;IAAA,gJAAwH;IAC1H,4DAAK;;;IADuF,0DAA6B;IAA7B,4FAA6B;;;IAK7H,yEAAsC;IAAA,oEAAS;IAAA,4DAAK;;;;IAEhD,mFAA0I;IAA5H,+XAAyB,iYAAyC,SAAS,KAAlD;IAAoF,4DAAe;;;IAA5H,qFAAyB;;;IAD3C,yEACI;IAAA,gJAA2H;IAC/H,4DAAK;;;IAD4F,0DAA6B;IAA7B,4FAA6B;;;IAK9H,yEAAsC;IAAA,oEAAS;IAAA,4DAAK;;;;IAElD,mFAA4I;IAA9H,gYAA0B,iYAAyC,UAAU,KAAnD;IAAqF,4DAAe;;;IAA9H,sFAA0B;;;IAD1C,yEACE;IAAA,gJAA6H;IAC/H,4DAAK;;;IAD4F,0DAA6B;IAA7B,4FAA6B;;;IAK9H,yEAAsC;IAAA,kEAAO;IAAA,4DAAK;;;;IAEhD,mFAAuI;IAAzH,8XAAwB,iYAAyC,QAAQ,KAAjD;IAAkF,4DAAe;;;IAAzH,oFAAwB;;;IADxC,yEACE;IAAA,gJAAwH;IAC1H,4DAAK;;;IADuF,0DAA6B;IAA7B,4FAA6B;;;IAKvH,yEAAsC;IAAA,uEAAY;IAAA,4DAAK;;;;IACvD,yEACE;IAAA,mFAAiH;IAAnG,yTAA4B,wTAAyC,YAAY,KAArD;IAAwD,4DAAe;IACnH,4DAAK;;;IADW,0DAA4B;IAA5B,wFAA4B;;;IAK5C,yEAAsC;IAAA,mEAAQ;IAAA,gEAAK;IAAA,iEAAK;IAAA,4DAAK;;;;IAC7D,yEACE;IAAA,mFAAmH;IAArG,0TAA6B,wTAAyC,aAAa,KAAtD;IAAyD,4DAAe;IACrH,4DAAK;;;IADW,0DAA6B;IAA7B,yFAA6B;;;IAKzC,yEAAsC;IAAA,gEAAK;IAAA,4DAAK;;;;IAChD,yEACE;IAAA,mFAA+G;IAAjG,wTAA2B,wTAAyC,WAAW,KAApD;IAAuD,4DAAe;IACjH,4DAAK;;;IADW,0DAA2B;IAA3B,uFAA2B;;;IAInD,oEAA4D;;;IAC5D,oEACK;;ADrIJ,MAAM,2BAA2B;IA0DtC,YACS,MAAiB,EAChB,WAAwB,EACxB,MAAuB;QAFxB,WAAM,GAAN,MAAM,CAAW;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAiB;QA3DjC,qBAAgB,GAAa,CAAC,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,kBAAkB,EAAE,eAAe,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAG,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC;QAG/N,4BAA4B;QAC5B,yHAAyH;QACzH,KAAK;QAEE,iBAAY,GAAkB,EAAE,CAAC;QACjC,YAAO,GAAG,KAAK,CAAC;QAIhB,UAAK,GAAG;YACb,EAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;YAChC,EAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;YAChC,EAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;SACjC,CAAC;QACK,WAAM,GAAG;YACd,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAC;YACjC,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAC;YACjC,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAC;YACjC,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAC;YACjC,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAC;YACjC,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAC;YACjC,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAC;YACjC,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAC;YACjC,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAC;YACjC,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAC;YACjC,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAC;YACjC,EAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAC;SAClC,CAAC;QAEM,oBAAe,GAAgB;YACrC,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,EAAE;YACR,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE,IAAI;YAChB,WAAW,EAAE,IAAI;YACjB,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,IAAI;YACd,gBAAgB,EAAE,IAAI;YACtB,aAAa,EAAE,IAAI;YACnB,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,IAAI;SACb,CAAC;QAWA,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC9D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAChE,MAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAExC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC/B,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC;gBACtB,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAED,OAAO;QACL,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2GAA0B,EAAE;YAC7D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,IAAI,CAAC,eAAe;SAC3B,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;IAED,sBAAsB;IACtB,2EAA2E;IAC3E,0BAA0B;IAC1B,oEAAoE;IACpE,8BAA8B;IAC9B,UAAU;IACV,IAAI;IACJ,eAAe;QACb,MAAM,KAAK,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,IAAI,CAAC;QAC5D,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,IAAI,CAAC;QAC1D,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAChE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,yCAAyC;YACzC,uCAAuC;YACvC,gCAAgC;YAChC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAc,GAAG,CAAC,CAAC;YAC3D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,GAAgB,EAAE,KAAK;QAC/B,uBAAuB;QACvB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAChC,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAChC,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;;sGAvIU,2BAA2B;2GAA3B,2BAA2B;wEAwD3B,8DAAO;;;;;QCvEpB,iJAA2E;QAC3E,yEACE;QAAA,yEACE;QAAA,oFACE;QAAA,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,2EACF;QADkB,wJAAS,oCAAgC,IAAC;QAA1D,4DACF;QAAA,4DAAiB;QACjB,oFACI;QAAA,4EAAW;QAAA,gEAAK;QAAA,4DAAY;QAC5B,iFACE;QADU,4MAA2B,0HAAgC,uBAAmB,IAAnD;QACrC,uIACE;QAEJ,4DAAa;QACf,4DAAiB;QACnB,qFACI;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,iFACE;QADU,2MAA0B,0HAAgC,sBAAkB,IAAlD;QACpC,uIACE;QAEJ,4DAAa;QACf,4DAAiB;QAErB,4DAAM;QAEN,0EACE;QAAA,4EAEE;QAAA,6EACE;QAAA,wHAAuC;QACvC,wHACE;QAIJ,qEAAe;QAEb,6EACE;QAAA,wHAAuC;QACvC,wHACE;QAIJ,qEAAe;QAEf,6EACE;QAAA,wHAAuC;QACvC,wHACE;QAIJ,qEAAe;QAEf,6EACE;QAAA,wHAAuC;QACvC,wHACE;QAKJ,qEAAe;QAEf,6EACI;QAAA,wHAAuC;QACvC,wHACE;QAIJ,qEAAe;QAGf,6EACE;QAAA,wHAAsC;QACtC,wHACI;QAEN,qEAAe;QAEf,6EACE;QAAA,wHAAsC;QACtC,wHACE;QAEJ,qEAAe;QAEf,6EACE;QAAA,wHAAsC;QACtC,wHACI;QAEN,qEAAe;QAEf,6EACE;QAAA,wHAAsC;QACtC,wHACE;QAEJ,qEAAe;QAEnB,6EACE;QAAA,wHAAsC;QACtC,wHACI;QAEN,qEAAe;QAEf,6EACE;QAAA,wHAAsC;QACtC,wHACE;QAEJ,qEAAe;QAEf,6EACE;QAAA,wHAAsC;QACtC,wHACE;QAEJ,qEAAe;QAEf,6EACI;QAAA,wHAAsC;QACtC,wHACE;QAEJ,qEAAe;QAEf,6EACE;QAAA,wHAAsC;QACtC,wHACE;QAEJ,qEAAe;QAEb,6EACI;QAAA,wHAAsC;QACtC,wHACE;QAEJ,qEAAe;QAErB,wHAAuD;QACvD,wHACA;QACF,4DAAQ;QAGV,4DAAM;QAER,4DAAM;;QA1JiC,6EAAe;QASlC,2DAA2B;QAA3B,sFAA2B;QACzB,0DAA2B;QAA3B,+EAA2B;QAO7B,0DAA0B;QAA1B,qFAA0B;QACxB,0DAA0B;QAA1B,8EAA0B;QAS3B,0DAAyB;QAAzB,sFAAyB;QAuHrB,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;;6FDpIrD,2BAA2B;cALvC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,sCAAsC,CAAC;aACpD;;kBAyDE,uDAAS;mBAAC,8DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;;;;;;;;;;;;;AEvEpC;AAAA;AAAA;AAAA;AAAqD;AACV;;;AAOpC,MAAM,WAAW;IAItB,YACU,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;QAE/B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtC,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;IACH,CAAC;IAED,KAAK,CAAC,KAAa,EAAE,QAAgB;QACnC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACxE,CAAC;IAED,QAAQ,CAAC,IAAW,EAAE,QAAgB;QACpC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC/E,iBAAiB;QACjB,4BAA4B;QAC5B,8CAA8C;QAC9C,oBAAoB;QACpB,sBAAsB;QACtB,MAAM;IACR,CAAC;IAED,MAAM,CAAC,KAAa;QAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAC1D,CAAC;IAED,qBAAqB;QACnB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC;IAChE,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACtC,CAAC;;sEA5CQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACiB;;;;AAOnD,MAAM,kBAAkB;IAE7B,YACU,MAAc,EACd,IAAY;QADZ,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAQ;IAClB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mCAAmC,CAAC,CAAC;IACrF,CAAC;;oFATU,kBAAkB;kGAAlB,kBAAkB;QCR/B,4EAAiC;;6FDQpB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;;;;;;;;;;AEN0C;AACgB;AAGnB;AACV;;;;AAKvB,MAAM,WAAW;IAKtB,YACU,OAAyB,EACzB,MAAc;QADd,YAAO,GAAP,OAAO,CAAkB;QACzB,WAAM,GAAN,MAAM,CAAQ;IAExB,CAAC;IAED,OAAO,CAAC,KAAK;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAM;YAC5B,KAAK,EAAE,kDAAG,IAAG,KAAK,EAAE;YACpB,WAAW,EAAE,cAAc;YAC3B,WAAW,EAAE,KAAK;SACnB,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACxB,QAAQ,EAAE,kDAAG,IAAG,IAAI,EAAE;SACvB,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACxB,QAAQ,EAAE,kDAAG,IAAG,IAAI,EAAE;SACvB,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,IAAW;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACjE,CAAC;IAEK,iBAAiB,CAAC,IAAW;;YACjC,OAAO,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACxC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,EAAE,CAAC;gBACrB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACpC,CAAC;KAAA;IAED,UAAU;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAClD,CAAC;IAGD,OAAO,CAAC,MAAM;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAQ,MAAM,CAAC,CAAC;IAC7D,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAQ,OAAO,CAAC,CAAC,YAAY,EAAE,CAAC;IAChE,CAAC;IAED,oCAAoC;IACpC,iFAAiF;IACjF,IAAI;IAEJ,eAAe,CAAC,OAAe;QAC7B,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,GAAG,CAAc,OAAO,CAAC,CAAC,YAAY,EAAE,CAAC;IACxF,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,YAAY,EAAE,CAAC;IAChE,CAAC;IAED,oBAAoB,CAAC,KAAK,EAAE,GAAG;QAC7B,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAc,cAAc,EAAE,GAAG,CAAC,EAAE,CAChE,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAC9C,CAAC,YAAY,EAAE,CAAC;IACnB,CAAC;IAED,mBAAmB,CAAC,MAAM;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAc,cAAc,EAAE,GAAG,CAAC,EAAE,CAChE,GAAG,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK,CAAC,CACtE,CAAC,YAAY,EAAE,CAAC;IACnB,CAAC;IAED,QAAQ,CAAC,SAAiB;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,EAAE,GAAG,CAAC,EAAE,CACjD,GAAG,CAAC,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC;aACnC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC;aAC/B,KAAK,CAAC,gBAAgB,EAAE,IAAI,EAAE,SAAS,CAAC,CAC1C;aACA,YAAY,EAAE,CAAC;IAClB,CAAC;IAED,SAAS,CAAC,GAAgB;QACxB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;IACrF,CAAC;IAED,WAAW,CAAC,OAAe;QACzB,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,GAAG,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;IACnG,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAS,mBAAmB,CAAC,CAAC,YAAY,EAAE,CAAC;IAC5F,CAAC;;sEAnGU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACT;AACc;AACa;AACZ;AACjB;;;;;;;;;;;;;;ICMrB,4EAAuG;IAAA,mEAAQ;IAAA,4DAAY;;;IAC3H,4EAAwG;IAAA,4FAAiC;IAAA,4DAAY;;ADAhK,MAAM,uBAAuB;IAMlC,YACU,WAAwB,EACxB,SAAsB,EACtB,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAa;QACtB,WAAM,GAAN,MAAM,CAAQ;QAPxB,eAAU,GAAG,IAAI,wDAAS,CAAC;YACzB,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;SACpE,CAAC,CAAC;IAMG,CAAC;IAEP,QAAQ;IACR,CAAC;IAED,MAAM;QACJ,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;QAE1C,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC;aACrC,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACN,IAAI,CAAC,EAAE;YACL,iFAAiF;YACjF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0CAA0C,EAAE,IAAI,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YACxF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;YACtD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YAC1D,mCAAmC;YACnC,wBAAwB;QAC1B,CAAC,CAAC,CAAC;IACT,CAAC;;8FAjCU,uBAAuB;uGAAvB,uBAAuB;QCZpC,yEACI;QAAA,8EACI;QAAA,0EACM;QADyB,mJAAY,YAAQ,IAAC;QAC9C,sFACE;QAAA,oFAAmD;QAAA,0EAAe;QAAA,4DAAiB;QACnF,uFAAsD;QAAA,yGAA8C;QAAA,4DAAoB;QACxH,oFACE;QAAA,4EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,uEACA;QAAA,+EAAoB;QAAA,iEAAK;QAAA,4DAAW;QAEpC,iIAAuG;QACvG,iIAAwG;QAC1G,4DAAiB;QACnB,4DAAmB;QACnB,uFACI;QAAA,2EACI;QAAA,8EAA8E;QAAA,iEAAK;QAAA,4DAAS;QAC5F,yEAAiE;QAAA,yEAAa;QAAA,4DAAI;QACtF,4DAAM;QACV,4DAAmB;QACvB,4DAAO;QACT,4DAAW;QACnB,4DAAM;;QArBQ,0DAAwB;QAAxB,qFAAwB;QAST,2DAA2F;QAA3F,6JAA2F;QAC3F,0DAA4F;QAA5F,8JAA4F;QAK3D,0DAA8B;QAA9B,2FAA8B;;6FDL/E,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACZ;AACY;;;;;;;;;ICSjD,yEAAuD;IAAA,iEAAK;IAAA,4DAAK;;;IACjE,yEACE;IAAA,6EAA6D;IAAA,uDAAY;IAAA,4DAAS;IACpF,4DAAK;;;IADgB,0DAAyC;IAAzC,yHAAyC;IAAC,0DAAY;IAAZ,8EAAY;;;IAM7E,yEAAuC;IAAA,oEAAQ;IAAA,4DAAK;;;IACpD,yEAAmC;IAAA,uDAAe;IAAA,4DAAK;;;IAApB,0DAAe;IAAf,iFAAe;;;IAGpD,oEAA4D;;;IAC5D,oEACK;;ADfX,MAAM,KAAK,GAAe;IACxB,EAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,gCAAgC,EAAC;IACzE,EAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,gCAAgC,EAAC;IACzE,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,wEAAwE,EAAC;IAC/G,EAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,iCAAiC,EAAC;IAC1E,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,gCAAgC,EAAC;CACxE;AAOM,MAAM,iBAAiB;IAO5B;QALA,qBAAgB,GAAa,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAM/C,6DAA6D;QAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAED,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;;kFAlBU,iBAAiB;iGAAjB,iBAAiB;wEAKjB,8DAAO;;;;;QC5BpB,yEACI;QAAA,oFACI;QAAA,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,2EACF;QADkB,8IAAS,oCAAgC,IAAC;QAA1D,4DACF;QAAA,4DAAiB;QAErB,yEACE;QAAA,2EAEE;QACA,2EACI;QAAA,2GAAuD;QACvD,2GACE;QAEJ,qEAAe;QAGjB,4EACE;QAAA,6GAAuC;QACvC,8GAAmC;QACrC,qEAAe;QAEf,8GAAuD;QACvD,8GACA;QACF,4DAAQ;QAGV,4DAAM;QAER,4DAAM;;QAxBe,0DAAyB;QAAzB,sFAAyB;QAgBrB,0DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;;6FDDrD,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;kBAME,uDAAS;mBAAC,8DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;;;;;;;;;;;;;AE5BpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACqB;AACM;AACd;;AAEpD,MAAM,GAAG,GAAG,6CAA6C,CAAC,CAAC,6CAA6C;AACjG,SAAS,YAAY,CAAC,QAAkB;IAC7C,OAAO;QACL,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAC,GAAG,EAAC,CAAC;QAC5B,KAAK,EAAE,IAAI,mEAAa,EAAE;KAC3B,CAAC;AACJ,CAAC;AAYM,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,mBARb;QACT;YACE,OAAO,EAAE,6DAAc;YACvB,UAAU,EAAE,YAAY;YACxB,IAAI,EAAE,CAAC,iEAAQ,CAAC;SACjB;KACF,YAPS,2DAAY,EAAE,uEAAc;mIAS3B,aAAa,cATd,2DAAY,EAAE,uEAAc;6FAS3B,aAAa;cAVzB,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,2DAAY,EAAE,uEAAc,CAAC;gBACvC,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,6DAAc;wBACvB,UAAU,EAAE,YAAY;wBACxB,IAAI,EAAE,CAAC,iEAAQ,CAAC;qBACjB;iBACF;aACF;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAClB;AACmB;AACU;AAC3B;AACY;AACG;;;;;;;;;;;;;;;ICItC,4EAAqG;IAAA,mEAAQ;IAAA,4DAAY;;;IACzH,4EAAsG;IAAA,4FAAiC;IAAA,4DAAY;;;IAWnJ,4EAA2G;IAAA,mEAAQ;IAAA,4DAAY;;;IAC/H,4EAA4G;IAAA,oGAC1G;IAAA,4DAAY;;ADXzB,MAAM,cAAc;IAUzB,YACU,qBAAkC,EAClC,MAAc,EACd,QAAyB,EACzB,SAAsB,EACtB,IAAY;QAJZ,0BAAqB,GAArB,qBAAqB,CAAa;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,cAAS,GAAT,SAAS,CAAa;QACtB,SAAI,GAAJ,IAAI,CAAQ;QAbf,SAAI,GAAG,IAAI,CAAC;QAGnB,cAAS,GAAG,IAAI,wDAAS,CAAC;YACxB,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACnE,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9E,CAAC,CAAC;IASH,CAAC;IAED,QAAQ;QACN,MAAM,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC;QAChE,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;SACtC;IACH,CAAC;IAED,KAAK;QACH,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;QACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC;QAE/C,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC;aAChD,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACN,IAAI,CAAC,EAAE;YACL,6CAA6C;YAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC7C,0BAA0B;YAC5B,CAAC,CAAC,CAAC;QACL,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;YACtD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YAC1D,0BAA0B;QAC5B,CAAC,CAAC,CAAC;IACT,CAAC;;4EA7CU,cAAc;8FAAd,cAAc;QCb3B,yEACI;QAAA,8EACM;QAAA,0EACI;QAD0B,0IAAY,WAAO,IAAC;QAC9C,sFACE;QAAA,oFAAmD;QAAA,gEAAK;QAAA,4DAAiB;QACzE,uFAAsD;QAAA,mFAAwB;QAAA,4DAAoB;QAClG,oFACE;QAAA,4EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,uEACA;QAAA,+EAAoB;QAAA,iEAAK;QAAA,4DAAW;QACpC,wHAAqG;QACrG,wHAAsG;QAExG,4DAAiB;QACjB,qFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,yEAEE;QAF2B,0JAAsB;QAEjD,4EAAU;QAAA,wDAA0C;QAAA,4DAAW;QACjE,4DAAI;QACJ,4EAAU;QAAA,oGAAwC;QAAA,4DAAW;QAC7D,wHAA2G;QAC3G,wHAA4G;QAE9G,4DAAiB;QAGnB,4DAAmB;QACnB,wFACE;QAAA,2EACI;QAAA,8EAA6E;QAAA,iEAAK;QAAA,4DAAS;QAC3F,yEAA2E;QAAA,0EAAc;QAAA,4DAAI;QACjG,4DAAM;QACR,4DAAmB;QACnB,4DAAO;QACjB,4DAAW;QACf,4DAAM;;QAnCU,0DAAuB;QAAvB,oFAAuB;QAQV,2DAAyF;QAAzF,2JAAyF;QACzF,0DAA0F;QAA1F,4JAA0F;QAKrF,0DAAmC;QAAnC,gGAAmC;QACC,0DAAmC;QAAnC,wFAAmC;QAE3E,0DAA0C;QAA1C,2GAA0C;QAG3C,0DAA+F;QAA/F,iKAA+F;QAC/F,0DAAgG;QAAhG,kKAAgG;QAQjE,0DAA6B;QAA7B,0FAA6B;;6FDlB5E,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEZD;AAAA;AAAO,MAAM,IAAI;CAehB;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEJ;AACf;AAC4B;AAEjC;AACI;;;;;;;;;;;;;;ICS/B,wEAAoI;IAAxE,gWAAS,aAAc,IAAC;IAAgD,wEAAa;IAAA,2EAAuB;IAAA,kEAAO;IAAA,4DAAO;IAAA,4DAAI;;;;IAC1L,wEAAuH;IAAxE,iWAAS,aAAc,IAAC;IAAgD,gEAAK;IAAA,4DAAI;;;;IAVpI,sEACI;IACA,uEAAyF;IAAzB,2VAAS,aAAc,IAAC;IAAC,qEAAU;IAAA,4DAAI;IACvG,wEAA6E;IAAzB,2VAAS,aAAc,IAAC;IAAC,4EAAiB;IAAA,4DAAI;IAClG,wEAAqF;IAAzB,2VAAS,aAAc,IAAC;IAAC,sEAAW;IAAA,4DAAI;IACpG,wEAA+E;IAAzB,2VAAS,aAAc,IAAC;IAAC,uEAAY;IAAA,4DAAI;IAI/F,kHAAoI;IACpI,oHAAuH;IAC3H,4DAAM;;;IAFmF,0DAA8C;IAA9C,iHAA8C;IAC3D,0DAA8C;IAA9C,iHAA8C;;ADFzH,MAAM,mBAAmB;IAW9B,YACU,kBAAsC,EACtC,WAAwB,EACxB,MAAc,EACd,aAA4B;QAH5B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QATtC,eAAU,GAAwB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,+DAAW,CAAC,OAAO,CAAC;aACnF,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAC9B,CAAC;QAQA,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACzC,oFAAoF;aACrF;QACH,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1C,uBAAuB;YACvB,IAAK,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,UAAU,EAAG;gBACxC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;QAEH,gFAAgF;QAChF,+EAA+E;IACjF,CAAC;IAED,oBAAoB;IACpB,sBAAsB;IACtB,mBAAmB;IACnB,wBAAwB;IACxB,mCAAmC;IACnC,0CAA0C;IAC1C,eAAe;IACf,eAAe;IACf,eAAe;IACf,MAAM;IACN,IAAI;IACJ,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;;sFAlDQ,mBAAmB;mGAAnB,mBAAmB;;QCfhC,2FACE;QAAA,oFAIE;;;QAAA,8EAAa;QAAA,+DAAI;QAAA,4DAAc;QAC/B,+EACE;QAAA,gHACI;QAWN,4DAAe;QACjB,4DAAc;QACd,sFACE;QAAA,kFACE;QAAA,6EAKE;QADA,4RAAS,cAAe,IAAC;QACzB,+EAA4C;QAAA,gEAAI;QAAA,4DAAW;QAC7D,4DAAS;QACT,mEAEO;QACP,sEAA4B;QAC5B,6EAA4C;QAApB,4IAAS,YAAQ,IAAC;QAAE,4EAAU;QAAA,uEAAW;QAAA,4DAAW;QAAA,4DAAS;QACvF,4DAAc;QAEd,4EACgB;QAClB,4DAAsB;QACxB,4DAAwB;;QArClB,0DAA+C;QAA/C,mKAA+C;QAD/C,4KAA4D;QAKvD,0DAAY;QAAZ,0EAAY;;6FDQV,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACP;AACO;AACE;AACkB;AACV;;;;;;;;;;;;;;;ICIxC,4EAA2G;IAAA,mEAAQ;IAAA,4DAAY;;;IAOjI,4EAA2G;IAAA,mEAAQ;IAAA,4DAAY;;;IAC/H,4EAA4G;IAAA,4FAAiC;IAAA,4DAAY;;;IAUzJ,4EAAiH;IAAA,mEAAQ;IAAA,4DAAY;;;IACrI,4EAAkH;IAAA,oGAChH;IAAA,4DAAY;;ADjBvB,MAAM,iBAAiB;IAoB5B,YACU,WAAwB,EACxB,SAAsB,EACtB,MAAc,EACd,WAAwB;QAHxB,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAa;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAtB3B,SAAI,GAAG,IAAI,CAAC;QAEX,aAAQ,GAAU;YACxB,MAAM,EAAE,EAAE;YACV,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,IAAI;SACb,CAAC;QAEF,iBAAY,GAAG,IAAI,wDAAS,CAAC;YAC3B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACnE,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9E,CAAC,CAAC;IAOC,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC;QACpD,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC;aACjD,IAAI,CAAC,GAAG,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;YAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC;YAClD,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;YACrC,gCAAgC;YAChC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBACnD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oEAAoE,EAAE,IAAI,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;gBAClH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,CAAC,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,OAAe,CAAC;YACpB,QAAQ,GAAG,CAAC,IAAI,EAAE;gBAChB,KAAK,oBAAoB;oBACvB,OAAO,GAAG,uBAAuB,CAAC;oBAClC,MAAM;gBACR,KAAK,qBAAqB;oBACxB,OAAO,GAAG,qCAAqC,CAAC;oBAChD,MAAM;gBACR;oBACE,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;aACzB;YACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;;kFA/DU,iBAAiB;iGAAjB,iBAAiB;QCb9B,yEACI;QAAA,8EACI;QAAA,0EACI;QAD6B,6IAAY,cAAU,IAAC;QACpD,sFACE;QAAA,oFAAmD;QAAA,mEAAQ;QAAA,4DAAiB;QAC5E,uFAAsD;QAAA,mFAAwB;QAAA,4DAAoB;QAClG,oFACI;QAAA,4EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,uEACA;QAAA,+EAAoB;QAAA,gEAAI;QAAA,4DAAW;QACnC,2HAA2G;QAC7G,4DAAiB;QACnB,qFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,uEACA;QAAA,+EAAoB;QAAA,iEAAK;QAAA,4DAAW;QAEpC,2HAA2G;QAC3G,2HAA4G;QAC9G,4DAAiB;QACjB,sFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,yEAEE;QAF2B,6JAAsB;QAEjD,4EAAU;QAAA,wDAA0C;QAAA,4DAAW;QACjE,4DAAI;QACJ,4EAAU;QAAA,oGAAwC;QAAA,4DAAW;QAC7D,2HAAiH;QACjH,2HAAkH;QAEpH,4DAAiB;QACnB,4DAAmB;QACnB,wFACI;QAAA,2EACI;QAAA,8EAAgF;QAAA,oEAAQ;QAAA,4DAAS;QAErG,4DAAM;QACV,4DAAmB;QACrB,4DAAO;QACP,4DAAW;QACrB,4DAAM;;QAvCQ,0DAA0B;QAA1B,uFAA0B;QAQX,2DAA+F;QAA/F,iKAA+F;QAOjG,0DAA+F;QAA/F,iKAA+F;QAC/F,0DAAgG;QAAhG,kKAAgG;QAI3F,0DAAmC;QAAnC,gGAAmC;QACC,0DAAmC;QAAnC,wFAAmC;QAE3E,0DAA0C;QAA1C,2GAA0C;QAG3C,0DAAqG;QAArG,uKAAqG;QACrG,0DAAsG;QAAtG,wKAAsG;QAMrE,0DAAgC;QAAhC,6FAAgC;;6FDtB/E,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAA6C;AACF;AACwD;;;;AAG5F,MAAM,SAAS;IAClB,YACY,MAAc,EACd,qBAAkC;QADlC,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAa;IAC1C,CAAC;IAEL,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACjE,MAAM,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC;QAChE,IAAI,WAAW,EAAE;YACb,2BAA2B;YAC3B,OAAO,IAAI,CAAC;SACf;QAED,8DAA8D;QAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAC5E,OAAO,KAAK,CAAC;IACjB,CAAC;;kEAhBQ,SAAS;4FAAT,SAAS,WAAT,SAAS,mBADI,MAAM;6FACnB,SAAS;cADrB,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACoB;AACb;AACb;;;AAM9B,MAAM,WAAW;IAMtB,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAExB,IAAI,CAAC,kBAAkB,GAAG,IAAI,oDAAe,CAAW,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QACzG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;IAC5D,CAAC;IAED,IAAW,gBAAgB;QACzB,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,QAAgB,EAAE,EAAU;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,gDAAgD,EAAE;YAC7E,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE,EAAE;SACb,CAAC;aACD,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE;YACf,kGAAkG;YAClG,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,cAAc,CAAC,YAAoB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,0DAA0D,EAAE;YACvF,KAAK,EAAE,YAAY;YACnB,GAAG,EAAE,yFAAyF;SAC/F,CAAC;aACD,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE;YACf,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,KAAK,CAAC,IAAY,EAAE,EAAU,EAAE,KAAa;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,yDAAyD,EAAE;YACtF,IAAI;YACJ,QAAQ,EAAE,EAAE;YACZ,oBAAoB,EAAE,KAAK;SAC5B,CAAC;aACD,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE;YACf,kGAAkG;YAClG,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,UAAU,CAAC,IAAU,EAAE,QAAQ;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,2CAA2C,EAAE;YACjE,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC5B,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC5B,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;YACtB,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;YAC1B,QAAQ;SACT,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE;YACpB,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,UAAU,CAAC,IAAU,EAAE,QAAQ;QAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,eAAe,CAAC,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC,0BAA0B,CAAC;QACjH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6CAA6C,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,gCAC9E,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAC5B,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAC5B,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EACtB,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,IACvB,CAAC,QAAQ,IAAI,QAAQ,CAAC,KACzB,IAAI,EAAE;gBACJ,GAAG,EAAE,MAAM;aACZ,IACD,CAAC,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE;YACpB,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,YAAY,CAAC,MAAM;QACjB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4CAA4C,EAAE,MAAM,CAAC,CAAC;IAC9E,CAAC;IAED,MAAM;QACJ,iDAAiD;QACjD,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,UAAU,CAAC,GAAG;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kDAAkD,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE;YAChG,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;;sEAlGU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AAEQ;AACd;AACF;;;;AAM9B,MAAM,aAAa;IAExB,YACU,MAAc,EACd,WAAwB;QADxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAEhC,kBAAkB;QAClB,qGAAqG;IACtG,CAAC;IAEF,mBAAmB;IACnB,8EAA8E;IAC9E,IAAI;IAEJ,oBAAoB;IACpB,2DAA2D;IAC3D,uBAAuB;IACvB,wFAAwF;IACxF,MAAM;IACN,IAAI;IAEJ,IAAI,CAAC,EAAE,EAAE,MAAM;QACb,MAAM,GAAG,GAAG,EAAC,EAAE,EAAE,MAAM,EAAC;QACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAChC,CAAC;IAED,GAAG;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAM,QAAQ,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAE,IAAI,CAAC,EAAE;YAC3D,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC;YAC9D,qBAAqB;YACrB,IAAI,IAAI,CAAC,EAAE,KAAK,QAAQ,IAAI,IAAI,CAAC,EAAE,KAAK,WAAW,EAAE;gBACnD,OAAO,IAAI,CAAC,MAAM,CAAC;aACpB;QACH,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,iBAAiB;IACjB,2DAA2D;IAC3D,uBAAuB;IACvB,qGAAqG;IACrG,MAAM;IACN,IAAI;IAEJ,cAAc;IACd,6CAA6C;IAC7C,IAAI;IAEJ,eAAe;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;;0EAjDU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAHZ,MAAM;6FAGP,aAAa;cAJzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AACrB;AAE0B;AACI;AACL;AACjB;AACV;AACiB;AACA;AACC;;;;;;;;;;;;;;;;;;;;;ICV3D,kFAAgG;;;IAsBxF,4EAA+G;IAAA,mEAAQ;IAAA,4DAAY;;;IAOrI,4EAA+G;IAAA,mEAAQ;IAAA,4DAAY;;;IACnI,4EAAgH;IAAA,4FAAiC;IAAA,4DAAY;;;IAU7J,4EAAqH;IAAA,mEAAQ;IAAA,4DAAY;;;IACzI,4EAAsH;IAAA,oGACpH;IAAA,4DAAY;;;IAmBd,6EAAmG;IAAA,iEAAM;IAAA,4DAAS;;;IAA1E,oGAAkC;;;IAC1E,6EAAkG;IAAA,iEAAM;IAAA,4DAAS;;;IAAzE,oGAAkC;;AD1CzE,MAAM,mBAAmB;IA8C9B,YACS,SAA+C,EAC9C,SAAsB,EACtB,MAAc,EACd,WAAwB,EACxB,SAA6B,EAC7B,WAAwB,EACxB,aAA4B,EACJ,IAAU;QAPnC,cAAS,GAAT,SAAS,CAAsC;QAC9C,cAAS,GAAT,SAAS,CAAa;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAoB;QAC7B,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QACJ,SAAI,GAAJ,IAAI,CAAM;QAnDrC,UAAK,GAAc,IAAI,GAAG,EAAE,CAAC;QAE7B,YAAO,GAAG,KAAK,CAAC;QAChB,WAAM,GAAG,KAAK,CAAC;QACf,SAAI,GAAG,IAAI,CAAC;QAIZ,iBAAY,GAAG,KAAK,CAAC;QACrB,kBAAa,GAAG,KAAK,CAAC;QACrB,aAAQ,GAAU;YACxB,MAAM,EAAE,EAAE;YACV,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,IAAI;SACb,CAAC;QAGK,SAAI,GAAS;YAClB,GAAG,EAAE,IAAI;YACT,IAAI,EAAE;gBACJ,EAAE,EAAE,IAAI;gBACR,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,KAAK,EAAE,EAAE;gBACT,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE;oBACJ,IAAI,EAAE,EAAE;iBACT;gBACD,MAAM,EAAE,CAAC;wBACP,GAAG,EAAE,EAAE;qBACR,CAAC;aACH;SACF,CAAC;IAgBC,CAAC;IAEJ,QAAQ;QACN,+BAA+B;QAC/B,IAAK,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YAChC,IAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC7E,IAAI,CAAC,QAAQ,GAAG,sCAAsC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;aACxF;YACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YACzD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;YACnE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YAC7D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACpD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;SACjD;QAED,MAAM,kBAAkB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAE;QACvH,IAAI,CAAC,cAAc,GAAG,IAAI,wDAAS,CAAC;YAClC,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvE,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAC,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACrH,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,kBAAkB,CAAC;YACnD,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAM,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YACtF,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;SACjE,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,OAAO;SACR;QAED,0BAA0B;QAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3E,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,SAAS,CACxD,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,qBAAqB;QACvB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,MAAM,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;YAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE;gBAC/B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG;YACpB,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE;SACxE,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC7D,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC;QACpD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3E,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,SAAS,CACxD,IAAI,CAAC,EAAE;YACL,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;QACH,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,MAAM,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;YAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE;gBAC/B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY,CAAC,QAAQ;QACjB,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACxD,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;QACtC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAC/B,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;QAC/C,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAEnC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE;YACxD,qBAAqB;YACrB,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAO,CAAC,KAAe;QACrB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAE5B,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAChC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;gBAClB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC;YAChC,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACnC;IACH,CAAC;IAED,YAAY;QACV,mBAAmB;QAEnB,iDAAiD;QACjD,4DAA4D;QAC5D,IAAI;QACJ,0CAA0C;QAE1C,yBAAyB;QACzB,oCAAoC;QACpC,MAAM;QACN,KAAK;QACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC9C,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,aAAa,EAAE;YAC3C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;SACtD;QACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;sFA1LU,mBAAmB,k+BAsDpB,wEAAe;mGAtDd,mBAAmB;;;;;;QCpBhC,yIAA6E;QAC3E,6EACA;QADoB,qJAAY,wBAAoB,IAAC;QACrD,yEACI;QAAA,yEACI;QAAA,2EACI;QAAA,oEACJ;QAAA,4DAAQ;QACR,8EACA;QADgD,kJAAU,gCAA4B,IAAE;QAAxF,4DACA;QACJ,4DAAM;QACV,4DAAM;QAEN,yEACE;QAAA,yEAAqB;QAAA,wDAAsD;QAAA,4DAAK;QAClF,4DAAM;QACR,4DAAO;QACP,4EACA;QADmC,gJAAY,gBAAY,IAAC;QAC5D,2EACI;QAAA,sFACI;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,wEACA;QAAA,gFAAoB;QAAA,gEAAI;QAAA,4DAAW;QACnC,8HAA+G;QACjH,4DAAiB;QACnB,sFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACA;QAAA,gFAAoB;QAAA,iEAAK;QAAA,4DAAW;QAEpC,8HAA+G;QAC/G,8HAAgH;QAClH,4DAAiB;QACjB,sFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,yEAEE;QAF2B,+JAAsB;QAEjD,4EAAU;QAAA,wDAA0C;QAAA,4DAAW;QACjE,4DAAI;QACJ,4EAAU;QAAA,oGAAwC;QAAA,4DAAW;QAC7D,8HAAqH;QACrH,8HAAsH;QAExH,4DAAiB;QACjB,2EACE;QAAA,+EACE;QAAA,wFACI;QADwC,gMAAuC;QAC/E,2EACJ;QAAA,4DAAmB;QACrB,4DAAU;QACZ,4DAAM;QACN,2EACE;QAAA,+EACE;QAAA,wFACI;QADyC,kMAAyC;QAClF,qEACJ;QAAA,4DAAmB;QACrB,4DAAU;QACZ,4DAAM;QAEV,4DAAM;QACJ,2EACI;QAAA,wHAAmG;QACnG,wHAAkG;QAClG,yEAAmE;QAA7C,uIAAS,eAAW,IAAC;QAAwB,kEAAM;QAAA,4DAAI;QAEjF,4DAAM;QACR,4DAAO;;QAlEgC,6EAAe;QAKjB,0DAAgD;QAAhD,0KAAgD;QAQ5D,0DAAsD;QAAtD,sHAAsD;QAGzE,0DAA4B;QAA5B,yFAA4B;QAMf,0DAAmG;QAAnG,qKAAmG;QAOrG,0DAAmG;QAAnG,qKAAmG;QACnG,0DAAoG;QAApG,sKAAoG;QAI/F,0DAAmC;QAAnC,gGAAmC;QACC,0DAAmC;QAAnC,wFAAmC;QAE3E,0DAA0C;QAA1C,2GAA0C;QAG3C,0DAAyG;QAAzG,2KAAyG;QACzG,0DAA0G;QAA1G,4KAA0G;QAoBnC,2DAAe;QAAf,6EAAe;QACf,0DAAc;QAAd,4EAAc;;6FD1CzF,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;sBAuDI,oDAAM;uBAAC,wEAAe;;kBApDxB,uDAAS;mBAAC,aAAa;;;;;;;;;;;;;;AEtB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEb;AAC0B;AAEF;AACvB;AACU;AACE;AACR;AAEb;AACV;;;;;;;;;;;;;;;;;;;;ICX9B,kFAA8F;;;IAgBtF,yEAAuC;IAAA,iEAAK;IAAA,4DAAK;;;IAG3C,qEACA;;;IADuB,6MAAgE;;;IACvF,qEACA;;;IAJN,yEACE;IAAA,0EACI;IAAA,iHACA;IAAA,iHACA;IAAA,uDACJ;IAAA,4DAAM;IACR,4DAAK;;;IAJyF,0DAAyD;IAAzD,6HAAyD;IACrF,0DAA8B;IAA9B,6FAA8B;IAC1F,0DACJ;IADI,6FACJ;;;IAMF,yEAAsC;IAAA,iEAAM;IAAA,4DAAK;;;IACjD,yEACE;IAAA,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,0FACF;;;IAKA,yEAAsC;IAAA,iEAAM;IAAA,4DAAK;;;IACjD,yEACE;IAAA,8EAAkH;IACpH,4DAAK;;;IADW,0DAA2D;IAA3D,yHAA2D;;;IAMrE,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEACE;IAAA,8EAA8E;IAChF,4DAAK;;;IADW,0DAAuB;IAAvB,qFAAuB;;;IAM7C,oEAA4C;;;;IAC5C,yEACE;IAAA,6EAAkD;IAA1B,iWAAyB;IAAC,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAAA,4DAAS;IACtF,4DAAK;;;IAGP,oEAA4D;;;IAC5D,oEACK;;;ADxCJ,MAAM,cAAc;IA2BzB,YACS,MAAiB,EAChB,WAAwB,EACxB,MAAc;IACtB,0BAA0B;IAClB,aAA4B;QAJ7B,WAAM,GAAN,MAAM,CAAW;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAEd,kBAAa,GAAb,aAAa,CAAe;QA9BtC,qBAAgB,GAAa,CAAC,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;QAG9E,4BAA4B;QAC5B,yHAAyH;QACzH,KAAK;QAEE,UAAK,GAAW,EAAE,CAAC;QACnB,YAAO,GAAG,KAAK,CAAC;QAIf,aAAQ,GAAU;YACxB,MAAM,EAAE,EAAE;YACV,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,IAAI;SACb,CAAC;QAYA,6DAA6D;QAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1C,IAAK,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,UAAU,EAAG;gBACxC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;QACH,gFAAgF;QAChF,+EAA+E;IACjF,CAAC;IAED,qBAAqB;IACrB,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,yBAAyB;IACzB,eAAe;IACf,eAAe;IACf,eAAe;IACf,MAAM;IACN,IAAI;IAEJ,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAED,OAAO;QACL,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAC,IAAI,EAAC;SACb,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAM;YACvC,KAAK,EAAE,kDAAG;;;;;;;;;;;;;;;UAeN;YACF,WAAW,EAAE,cAAc;YAC3B,WAAW,EAAE,KAAK;SACrB,CAAC;aACC,SAAS,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;YAC/B,qBAAqB;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAO,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,gCAAgC;YAChC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;;4EArHU,cAAc;8FAAd,cAAc;wEAwBd,8DAAO;wEACP,wEAAY;;;;;;QC7CzB,oIAA2E;QAC3E,yEACE;QAAA,8EACA;QAAA,yEACE;QAAA,oFACE;QAAA,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,2EACF;QADkB,2IAAS,oCAAgC,IAAC;QAA1D,4DACF;QAAA,4DAAiB;QACjB,4EAAwE;QAApB,sIAAS,aAAS,IAAC;QAAC,mEAAQ;QAAA,4DAAS;QAC3F,4DAAM;QACR,4DAAW;QACT,0EACE;QAAA,4EAEE;QACA,4EACE;QAAA,2GAAuC;QACvC,2GACE;QAMJ,qEAAe;QAGf,6EACE;QAAA,2GAAsC;QACtC,2GACE;QAEJ,qEAAe;QAGf,6EACE;QAAA,2GAAsC;QACtC,2GACE;QAEJ,qEAAe;QAGT,6EACE;QAAA,2GAAsC;QACtC,2GACE;QAEJ,qEAAe;QAGrB,6EACE;QAAA,2GAAuC;QACvC,2GACE;QAEJ,qEAAe;QAEf,2GAAuD;QACvD,2GACA;QACF,4DAAQ;QAER,gFAGuC;QAEzC,4DAAM;QAER,4DAAM;;QAtEiC,6EAAe;QAYjC,2DAAyB;QAAzB,sFAAyB;QA8CrB,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;QAK5D,0DAAe;QAAf,wEAAe;;6FD5CR,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;kBAyBE,uDAAS;mBAAC,8DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;kBACjC,uDAAS;mBAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;;;;;;;;;;;;;AE9CzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACE;;;;;;;ICKtC,oEACA;;;IADuB,mKAA+B;;;IACtD,qEACJ;;;IANN,yEACE;IAAA,8EACE;IAAA,yEACE;IAAA,sEACI;IAAA,qHACA;IAAA,qHACJ;IAAA,4DAAM;IACN,yEACE;IAAA,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,uEAAO;IAAA,wDAAqC;IAAA,4DAAO;IAAC,iEACpD;IAAA,wEAAM;IAAA,wDAAoC;IAAA,4DAAO;IAAA,iEACjD;IAAA,wEAAM;IAAA,wDAAqC;IAAA,4DAAO;IAAA,iEAClD;IAAA,wEAAM;IAAA,wDAA0C;IAAA,4DAAO;IAAC,iEACxD;IAAA,wEAAM;IAAA,wDAA4C;IAAA,4DAAO;IAAA,iEACzD;IAAA,wEAAM;IAAA,wDAAiC;IAAA,4DAAO;IAAA,iEAC9C;IAAA,wEAAM;IAAA,wDAA+B;IAAA,4DAAO;IAC9C,4DAAM;IACR,4DAAM;IACR,4DAAW;IACb,4DAAM;;;IAf2D,0DAA6B;IAA7B,4FAA6B;IACxB,0DAA8B;IAA9B,6FAA8B;IAGxF,0DAAiB;IAAjB,mFAAiB;IACd,0DAAqC;IAArC,iHAAqC;IACtC,0DAAoC;IAApC,+GAAoC;IACpC,0DAAqC;IAArC,gHAAqC;IACrC,0DAA0C;IAA1C,qHAA0C;IAC1C,0DAA4C;IAA5C,uHAA4C;IAC5C,0DAAiC;IAAjC,4GAAiC;IACjC,0DAA+B;IAA/B,0GAA+B;;ADTxC,MAAM,mBAAmB;IAI9B,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAH3B,UAAK,GAAG,EAAE,CAAC;IAId,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;QACN,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACjC,MAAM,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,MAAM,SAAS,GAAG,GAAG,IAAI,GAAG,KAAK,EAAE,CAAC;QACpC,8BAA8B;QAE9B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACnD,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;;sFAvBU,mBAAmB;mGAAnB,mBAAmB;QCRhC,yEACI;QAAA,yEACF;QAAA,iHACE;QAmBA,4DAAM;QACV,4DAAM;;QArBC,0DAA0B;QAA1B,8EAA0B;;6FDMpB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,iCAAiC;QAC7C,WAAW,EAAE,wCAAwC;QACrD,SAAS,EAAE,iBAAiB;QAC5B,aAAa,EAAE,6BAA6B;QAC5C,iBAAiB,EAAE,cAAc;QACjC,KAAK,EAAE,2CAA2C;QAElD,qDAAqD;QACrD,iDAAiD;QACjD,yDAAyD;QACzD,gCAAgC;QAChC,gDAAgD;QAChD,qCAAqC;QACrC,+CAA+C;KAChD;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AC/BnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACZpC,e","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthService } from './../services/auth.service';\n// import { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(\n        private authenticationService: AuthService\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }));\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './../services/auth.service';\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(\n        private authenticationService: AuthService\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        // console.log(request);\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.jwt && request.url.startsWith('https://backend.apartmentsource.com')) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.jwt}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","import { ApplicationsStatsComponent } from './applications-stats/applications-stats.component';\nimport { ApplicationsAdminComponent } from './applications-admin/applications-admin.component';\nimport { ManageApplicationsComponent } from './applications/manage-applications/manage-applications.component';\nimport { ApplicationsDashboardComponent } from './applications-dashboard/applications-dashboard.component';\nimport { WhiteboardComponent } from './whiteboard/whiteboard.component';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { AuthGuard } from './services/auth-guard.service';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FormListComponent } from './form-list/form-list.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UsersComponent } from './users/users.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'dashboard/applications-dashboard', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'forgot-password', component: ForgotPasswordComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard], children: [\n    { path: 'register', component: RegisterComponent },\n    { path: 'forms', component: FormListComponent },\n    { path: 'users', component: UsersComponent},\n    { path: 'applications', component: ApplicationsComponent },\n    { path: 'whiteboard', component: WhiteboardComponent },\n    { path: 'applications-stats', component: ApplicationsStatsComponent },\n    { path: 'applications-dashboard', component: ApplicationsDashboardComponent },\n    { path: 'manage-applications', component: ManageApplicationsComponent },\n    { path: 'applications-admin', component: ApplicationsAdminComponent }\n  ] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'dotgitalblank';\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n\n<router-outlet></router-outlet>\n","import { ApplicationsDashboardComponent } from './applications-dashboard/applications-dashboard.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormListComponent } from './form-list/form-list.component';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { environment } from '../environments/environment';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { UsersComponent } from './users/users.component';\nimport { CreateUserComponent } from './users/create-user/create-user.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { ApplicationsComponent } from './applications/applications.component';\nimport { CreateApplicationComponent } from './applications/create-application/create-application.component';\nimport { WhiteboardComponent } from './whiteboard/whiteboard.component';\nimport { ManageApplicationsComponent } from './applications/manage-applications/manage-applications.component';\nimport { ErrorInterceptor } from './_helpers/error.interceptor';\nimport { JwtInterceptor } from './_helpers/jwt.interceptor';\nimport { GraphQLModule } from './graphql.module';\n\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { ApplicationsAdminComponent } from './applications-admin/applications-admin.component';\nimport { MessageComponent } from './applications-dashboard/message/message.component';\nimport { ApplicationsStatsComponent } from './applications-stats/applications-stats.component';\n\nconst config: SocketIoConfig = { url: 'https://backend.apartmentsource.com', options: {query: {userId: null}} };\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    FormListComponent,\n    LoginComponent,\n    DashboardComponent,\n    RegisterComponent,\n    ForgotPasswordComponent,\n    UsersComponent,\n    CreateUserComponent,\n    CreateApplicationComponent,\n    ApplicationsComponent,\n    CreateApplicationComponent,\n    WhiteboardComponent,\n    ApplicationsDashboardComponent,\n    ManageApplicationsComponent,\n    ApplicationsAdminComponent,\n    MessageComponent,\n    ApplicationsStatsComponent,\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatSelectModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSortModule,\n    MatDialogModule,\n    MatButtonToggleModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatPaginatorModule,\n    MatSlideToggleModule,\n    MatTableModule,\n    MatInputModule,\n    MatRadioModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    AngularFireStorageModule,\n    ScrollingModule,\n    FlexLayoutModule,\n    GraphQLModule,\n    SocketIoModule.forRoot(config),\n    // SocketIoModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    CreateUserComponent,\n    CreateApplicationComponent,\n    MessageComponent,\n  ]\n})\nexport class AppModule { }\n","import { SocketService } from './../services/socket.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DataService } from './../data.service';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Application } from './../applications/application';\n\n@Component({\n  selector: 'app-applications-admin',\n  templateUrl: './applications-admin.component.html',\n  styleUrls: ['./applications-admin.component.scss']\n})\nexport class ApplicationsAdminComponent implements OnInit, OnDestroy {\n\n  public loading = true;\n  public search: string = '';\n  public applicationType = 'Leasing';\n  public startPage = 0;\n  public limitPage = 10;\n  public totalPages: number;\n  public searchUpdate = new Subject<string>();\n  public editing: string[] = [];\n  public agents = [];\n  public agentSelected: string;\n\n  public dataSource: MatTableDataSource<Application>;\n  public displayedColumns: string[] = ['address',\n  'agent',\n  'createdAt',\n  'applicationType',\n  'price',\n  'moneyIn',\n  'approved' ,\n  'denied',\n  'invoiceOut',\n  'invoicePaid',\n  'paid',\n  'edit'];\n\n  constructor(\n    private dataService: DataService,\n    private socketService: SocketService,\n  ) { }\n\n  ngOnInit() {\n    this.getUsers();\n    this.getApplications();\n\n    this.searchUpdate.pipe(\n      debounceTime(400),\n      distinctUntilChanged())\n      .subscribe(value => {\n        this.search = value;\n        this.getApplications();\n      });\n\n    this.socketService.get().subscribe(method => {\n      // console.log(method);\n      if ( typeof this[method] === 'function' ) {\n        this[method]();\n      }\n    });\n  }\n\n  keyUpLoading() {\n    this.loading = true;\n  }\n\n  filteByAgent(agent) {\n    console.log(agent);\n    this.agentSelected = agent;\n    this.getApplications();\n  }\n\n  displayCol(applicationType) {\n    this.loading = true;\n    this.applicationType = applicationType;\n    switch (applicationType) {\n      case 'Leasing':\n        this.displayedColumns = ['address', 'agent', 'createdAt', 'applicationType', 'price', 'moneyIn', 'approved' , 'denied',\n        'invoiceOut',\n        'invoicePaid',\n        'paid', 'edit'];\n        break;\n      case 'Listing':\n        this.displayedColumns = ['address', 'agent', 'createdAt', 'applicationType',\n        'price', 'listingAgreement', 'offerExecuted', 'closed',\n        'invoiceOut',\n        'invoicePaid',\n        'paid', 'edit'];\n        break;\n      case 'Buying':\n        this.displayedColumns = ['address', 'agent', 'createdAt', 'applicationType',\n        'price', 'offerOut', 'offerExecuted', 'closed',\n        'invoiceOut',\n        'invoicePaid',\n        'paid', 'edit'];\n        break;\n      default:\n        break;\n    }\n    this.getApplications();\n  }\n\n  getUsers() {\n    const query = `query{\n      users(sort: \"fullName:asc\"){\n        id,\n        fullName\n      }\n    }`;\n\n    this.dataService.getData(query).subscribe(({ data, loading })  => {\n      this.agents = data.users;\n    });\n  }\n\n  getApplications() {\n    let where;\n    if (this.agentSelected) {\n      where = `{\n        agent: \"${this.agentSelected}\",\n        address_contains: \"${this.search}\",\n        applicationType: \"${this.applicationType}\"\n      }`;\n    } else {\n      where = `{\n        address_contains: \"${this.search}\",\n        applicationType: \"${this.applicationType}\"\n      }`;\n    }\n\n\n    const query = `\n    query{\n        applications(sort: \"createdAt:desc\", start: ${this.startPage}, limit: ${this.limitPage}, where: ${where}) {\n            id,\n            applicationType,\n            address,\n            approved,\n            createdAt,\n            denied,\n            listingAgreement,\n            offerOut,\n            offerExecuted,\n            closed,\n            invoiceOut,\n            invoicePaid,\n            paid,\n            moneyIn,\n            price,\n            agent {\n                id\n                fullName\n            }\n        }\n        applicationsConnection (where: ${where}) {\n            aggregate {\n                count\n            }\n        }\n    }`;\n\n    this.dataService.getData(query).subscribe(({ data, loading })  => {\n      this.dataSource = new MatTableDataSource<Application>(data.applications);\n      this.totalPages = data.applicationsConnection.aggregate.count;\n      this.loading = false;\n    });\n  }\n\n  edit(appId) {\n    if (!this.editing.includes(appId)) {\n      this.editing.push(appId);\n    }\n  }\n\n  save(appId) {\n    if (this.editing.includes(appId)) {\n      this.editing.splice( this.editing.indexOf(appId), 1 );\n    }\n  }\n\n  updateApp(app: Application, field) {\n    if (this.editing.includes(app.id)) {\n      this.loading = true;\n      app[field] = !app[field];\n      const appData = `mutation {\n          updateApplication(input: {\n            where: {\n              id: \"${app.id}\"\n            },\n            data: {\n              ${field}: ${app[field]}\n            }\n          }) {\n            application {\n              id\n            }\n          }\n        }`;\n\n      this.dataService.updateData(appData).subscribe(() => {\n        this.getApplications();\n        this.socketService.send('public', 'getApplications');\n      });\n    }\n  }\n\n  paginator(e) {\n    this.loading = true;\n    this.startPage = e.pageIndex !== 0 ? e.pageIndex * e.pageSize : 0;\n    this.limitPage = e.pageSize;\n    this.getApplications();\n  }\n\n  ngOnDestroy(): void {\n    this.socketService.closeConnection();\n  }\n}\n","<mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\" class=\"loading-top\" color=\"warn\"></mat-progress-bar>\n<div class=\"content\">\n    <mat-card style=\"padding: 5px 10px; margin-bottom: 10px; border-radius: 0px;\" class=\"mat-elevation-z1\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\n            <div fxFlex>\n              <mat-form-field appearance=\"outline\"  class=\"no-padding\">\n                <mat-label>Search</mat-label>\n                <input matInput class=\"form-control\" [(ngModel)]=\"search\" \n                type=\"text\" name=\"userQuestion\" id=\"userQuestions\"\n                (ngModelChange)=\"this.searchUpdate.next($event)\" (keyup)=\"keyUpLoading()\" >\n                <button mat-button *ngIf=\"search\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"this.searchUpdate.next('')\">\n                  <mat-icon>close</mat-icon>\n                </button>\n              </mat-form-field>\n            </div>\n            <div>\n              <mat-form-field appearance=\"outline\" class=\"no-padding\">\n                  <mat-label>Agent</mat-label>\n                  <mat-select placeholder=\"Agent\" name=\"item\" [value]=\"agentSelected\" (selectionChange)=\"filteByAgent($event.value)\">\n                      <mat-option>Any</mat-option>\n                      <mat-option *ngFor=\"let item of agents\" [value]=\"item.id\">\n                          {{item.fullName}}\n                      </mat-option>\n                  </mat-select>\n              </mat-form-field>\n            </div>\n            <div>\n              <mat-button-toggle-group #group=\"matButtonToggleGroup\" value=\"Leasing\" class=\"full-width margin-botton\">\n                <mat-button-toggle value=\"Leasing\" aria-label=\"Text align center\" (click)=\"displayCol('Leasing')\">\n                  Leasing\n                </mat-button-toggle>\n                <mat-button-toggle value=\"Listing\" aria-label=\"Text align center\" (click)=\"displayCol('Listing')\">\n                  Listing\n                </mat-button-toggle>\n                <mat-button-toggle value=\"Buying\" aria-label=\"Text align center\" (click)=\"displayCol('Buying')\">\n                  Buying\n                </mat-button-toggle>\n              </mat-button-toggle-group>\n            </div>\n          </div>\n    </mat-card>\n\n    <div class=\"mat-elevation-z2\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n    \n          <ng-container matColumnDef=\"address\">\n            <th mat-header-cell *matHeaderCellDef> Address </th>\n            <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n              <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                  {{row.address}}\n              </div>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"agent\">\n            <th mat-header-cell *matHeaderCellDef> Agent </th>\n            <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n              <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                  {{row.agent.fullName}}\n              </div>\n            </td>\n          </ng-container>\n    \n          <ng-container matColumnDef=\"createdAt\">\n            <th mat-header-cell *matHeaderCellDef> Date </th>\n            <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n              <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                  {{row.createdAt | date:'shortDate' }}\n              </div>\n            </td>\n          </ng-container>\n    \n          <ng-container matColumnDef=\"applicationType\">\n            <th mat-header-cell *matHeaderCellDef> Type </th>\n            <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n              <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                {{row.applicationType}}\n              </div>\n            </td>\n          </ng-container>\n    \n          <ng-container matColumnDef=\"price\">\n              <th mat-header-cell *matHeaderCellDef> Price </th>\n              <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    ${{row.price | number }}\n                </div>\n              </td>\n            </ng-container>\n    \n            <ng-container matColumnDef=\"offerOut\">\n              <th mat-header-cell *matHeaderCellDef>Offer Out </th>\n              <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n                  <mat-checkbox [(ngModel)]=\"row.offerOut\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'offerOut')\"></mat-checkbox>\n              </td>\n            </ng-container>\n    \n            <ng-container matColumnDef=\"listingAgreement\">\n              <th mat-header-cell *matHeaderCellDef>Listing <br> Agreement </th>\n              <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n                <mat-checkbox [(ngModel)]=\"row.listingAgreement\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'listingAgreement')\"></mat-checkbox>\n              </td>\n            </ng-container>\n    \n            <ng-container matColumnDef=\"offerExecuted\">\n              <th mat-header-cell *matHeaderCellDef>Offer <br> Executed </th>\n              <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n                  <mat-checkbox [(ngModel)]=\"row.offerExecuted\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'offerExecuted')\"></mat-checkbox>\n              </td>\n            </ng-container>\n    \n            <ng-container matColumnDef=\"closed\">\n              <th mat-header-cell *matHeaderCellDef>Closed </th>\n              <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n                <mat-checkbox [(ngModel)]=\"row.closed\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'closed')\"></mat-checkbox>\n              </td>\n            </ng-container>\n    \n          <ng-container matColumnDef=\"moneyIn\">\n            <th mat-header-cell *matHeaderCellDef>Money In </th>\n            <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n                <mat-checkbox [(ngModel)]=\"row.moneyIn\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'moneyIn')\"></mat-checkbox>\n            </td>\n          </ng-container>\n    \n          <ng-container matColumnDef=\"approved\">\n            <th mat-header-cell *matHeaderCellDef>Approved </th>\n            <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n              <mat-checkbox [(ngModel)]=\"row.approved\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'approved')\"></mat-checkbox>\n            </td>\n          </ng-container>\n    \n            <ng-container matColumnDef=\"denied\">\n                <th mat-header-cell *matHeaderCellDef>Denied </th>\n                <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n                  <mat-checkbox [(ngModel)]=\"row.denied\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'denied')\"></mat-checkbox>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"invoiceOut\">\n                <th mat-header-cell *matHeaderCellDef>Invoice Out </th>\n                <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n                  <mat-checkbox [(ngModel)]=\"row.invoiceOut\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'invoiceOut')\"></mat-checkbox>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"invoicePaid\">\n                <th mat-header-cell *matHeaderCellDef>Invoice Paid </th>\n                <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n                  <mat-checkbox [(ngModel)]=\"row.invoicePaid\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'invoicePaid')\"></mat-checkbox>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"paid\">\n                <th mat-header-cell *matHeaderCellDef>Paid </th>\n                <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n                  <mat-checkbox [(ngModel)]=\"row.paid\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'paid')\"></mat-checkbox>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"edit\">\n                <th mat-header-cell *matHeaderCellDef> </th>\n                <td mat-cell *matCellDef=\"let row\" style=\"width: 5%;\">\n                  <button mat-icon-button *ngIf=\"!editing.includes(row.id)\" (click)=\"edit(row.id)\" ><mat-icon>edit</mat-icon></button>\n                  <button mat-icon-button *ngIf=\"editing.includes(row.id)\" (click)=\"save(row.id)\"><mat-icon>save</mat-icon></button>\n                  <!-- <button mat-icon-button *ngIf=\"editing.includes(row.id)\" (click)=\"edit(row.id)\"><mat-icon>delete</mat-icon></button> -->\n                </td>\n              </ng-container>\n    \n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n          </tr>\n        </table>\n    \n        <mat-paginator [length]=\"totalPages\"\n                  [pageSize]=\"10\"\n                  [pageSizeOptions]=\"[5, 10, 25, 100]\"\n                  (page)=\"paginator($event)\">\n        </mat-paginator>\n      </div>\n    \n    </div>","import { SocketService } from './../services/socket.service';\nimport { MessageComponent } from './message/message.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { User } from './../models/user';\nimport { Observable } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { DataService } from './../data.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Application } from '../applications/application';\nimport { Users } from '../users/users';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-applications-dashboard',\n  templateUrl: './applications-dashboard.component.html',\n  styleUrls: ['./applications-dashboard.component.scss']\n})\nexport class ApplicationsDashboardComponent implements OnInit, OnDestroy {\n\n  public months = [\n    {display: 'January', value: '201901'},\n    {display: 'Febraury', value: '201902'}\n  ];\n\n  applicatiosOld = [];\n\n  public loggedUser: Users;\n  public message: string;\n  public fullScreen = false;\n  public user: any;\n\n  public topAgent: string;\n  public apps: any[];\n  constructor(\n    public dialog: MatDialog,\n    private dataService: DataService,\n    private authService: AuthService,\n    private socketService: SocketService,\n  ) { }\n\n  ngOnInit() {\n    this.authService.currentUser.subscribe(data => {\n      this.user = data;\n    });\n    this.getMessage();\n    this.getApplications();\n\n    this.socketService.get().subscribe(method => {\n      // console.log(method);\n      if ( typeof this[method] === 'function' ) {\n        this[method]();\n      }\n    });\n\n    this.getOldApps();\n  }\n\n  getApplications() {\n    const where = `{\n      paid_ne: true,\n    }`;\n\n    const query = `\n    query{\n        applications(sort: \"createdAt:desc\", where: ${where}) {\n            id,\n            applicationType,\n            address,\n            approved,\n            createdAt,\n            denied,\n            listingAgreement,\n            offerOut,\n            offerExecuted,\n            closed,\n            moneyIn,\n            price,\n            invoicePaid,\n            invoiceOut,\n            agent {\n                id\n                fullName\n                avatar {\n                  url\n                }\n            }\n        }\n        applicationsConnection {\n          groupBy {\n            agent {\n              key\n              connection {\n                  aggregate {\n                      count\n                  }\n              }\n            }\n          }\n        }\n    }`;\n\n    this.dataService.getData(query).subscribe(res => {\n      this.apps = res.data.applications;\n      const agentStats: [] = res.data.applicationsConnection.groupBy.agent;\n      const stats = [];\n\n      agentStats.forEach((el: any) => {\n        const key = el.key;\n        const count = el.connection.aggregate.count;\n        stats.push({key, count});\n      });\n\n      stats.sort((a, b) => (a.count > b.count) ? -1 : 1);\n      this.topAgent = stats['0'].key;\n    });\n  }\n\n  getMessage() {\n    const query = `query{\n      static(id: \"5e5702eda23dfc62fc1bcf4d\"){\n        whiteBoardMessage\n      }\n    }`;\n    this.dataService.getData(query).subscribe(res => {\n      this.message = res.data.static.whiteBoardMessage;\n    });\n  }\n\n  editMessage() {\n    const dialogRef = this.dialog.open(MessageComponent, {\n      width: '550px',\n      data: {message: this.message}\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n      this.socketService.send('public', 'getMessage');\n      this.message = res;\n    });\n  }\n\n  openFullScreen() {\n    const element = document.getElementById('full-screen');\n    this.fullScreen = !this.fullScreen;\n    const screenfull = require('screenfull');\n    if (screenfull.isEnabled) {\n      screenfull.toggle(element);\n    }\n  }\n\n  migrateApps() {\n    // this.applicatiosOld.forEach(appOld => {\n    //   console.log(appOld.address);\n    //   this.authService.migrateApp(appOld).subscribe(res => {\n    //     console.log(res);\n    //   });\n    // });\n  }\n\n  async getOldApps(){\n    this.dataService.getAllApps().subscribe(res => {\n      const oldApps: any[] = res;\n      oldApps.forEach(el => {\n        // console.log(el);\n        // const query = `query { users(where: {fullName_contains: \"${el.createBy}\"}) {id, fullName}}`;\n        // this.dataService.getData(query).subscribe(resUser => {\n        //   console.log(el);\n        //   console.log(resUser.data.users[\"0\"]);\n        // });\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.socketService.closeConnection();\n  }\n}\n","<div class=\"full-screen\">\n  <content id=\"full-screen\">\n  <button mat-mini-fab (click)=\"openFullScreen()\"><mat-icon>{{ !fullScreen ? 'fullscreen' : 'fullscreen_exit'}}</mat-icon></button>\n  <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly stretch\" class=\"wrapper\">\n    <ng-container *ngFor=\"let item of apps\">\n      <mat-card \n      fxFlex=\"0 1 calc(25% - 10px)\"\n      fxFlex.lt-lg=\"0 1 calc(33.3% - 10px)\"\n      fxFlex.lt-md=\"0 1 calc(50% - 10px)\"\n      fxFlex.lt-sm=\"0 1 calc(100% - 10px)\">\n        <div\n        gdAreas=\"avatar content\"\n        gdGap=\"5px\"\n        gdRows=\"auto\"\n        gdColumns=\"55px auto\">\n        <div gdArea=\"avatar\" class=\"avatar-container\">\n          <img class=\"avatar_smm\" src=\"https://backend.apartmentsource.com/{{item.agent.avatar['0'].url}}\" *ngIf=\"item.agent.avatar['0'] && item.agent.avatar['0'].url\" />\n          <img class=\"avatar_smm\" src=\"'../../../../assets/avatar.svg\" *ngIf=\"!item.agent.avatar['0']\" />\n          <mat-icon *ngIf=\"item.agent.id == topAgent\" class=\"top-agent-star\">grade</mat-icon>\n        </div>\n        <div gdArea=\"content\">\n          <h4 class=\"address\">{{ item.address }}</h4><span class=\"create-by\"> {{ item.agent.fullName }} - {{ item.createdAt | date:\"MM/dd/yyyy\" }}</span> <br />\n\n          <div class=\"status-container\">\n            <span class=\"status-{{ item.offerOut }} apps-status\">Offer Out <mat-icon class=\"material-icons md-24\">done</mat-icon></span>\n            <span class=\"status-{{ item.listingAgreement }} apps-status\">List Agr <mat-icon class=\"material-icons md-24\">done</mat-icon></span>\n            <span class=\"status-{{ item.offerExecuted }} apps-status\">Offer Exec <mat-icon class=\"material-icons md-24\">done</mat-icon></span>\n            <span class=\"status-{{ item.closed }} apps-status\">Closed <mat-icon class=\"material-icons md-24\">done</mat-icon></span>\n            <span class=\"status-{{ item.moneyIn }} apps-status\">Money In <mat-icon class=\"material-icons md-24\">done</mat-icon></span>\n            <span class=\"status-{{ item.approved }} apps-status\">Approved <mat-icon class=\"material-icons md-24\">done</mat-icon></span>\n            <span class=\"status-{{ item.denied }} apps-status\">Denied <mat-icon class=\"material-icons md-24\">done</mat-icon></span>\n            <span class=\"status-{{ item.invoiceOut }} apps-status\">Invoice Out <mat-icon class=\"material-icons md-24\">done</mat-icon></span>\n            <span class=\"status-{{ item.invoicePaid }} apps-status\">Invoice Paid <mat-icon class=\"material-icons md-24\">done</mat-icon></span>\n          </div>\n        </div>\n      </div>\n      </mat-card>\n    </ng-container>\n  </div>\n  <div class=\"message-space\"></div>\n  <mat-toolbar class=\"whiteboard-message apps-item mat-elevation-z3\">\n    <!-- <div class=\"field-container\" *ngIf=\"loggedUser && loggedUser.isAdmin\" >\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Message</mat-label>\n          <input matInput [(ngModel)]=\"message\">\n        </mat-form-field>\n        <button mat-icon-button color=\"primary\" (click)=\"saveMessage(message)\" >\n          <mat-icon>save</mat-icon>\n        </button>\n    </div> -->\n    <span class=\"whiteboard-message-text\">{{message}}\n      <button mat-icon-button (click)=\"editMessage()\" *ngIf=\"user.user.role.name == 'Administrator'\">\n        <mat-icon>edit</mat-icon>\n      </button>\n    </span>\n  </mat-toolbar>\n</content>\n</div>\n\n","import { DataService } from './../../data.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss']\n})\nexport class MessageComponent implements OnInit {\n  public message = '';\n  public loading: boolean;\n\n\n\n  constructor(\n    private dialogRef: MatDialogRef<MessageComponent>,\n    private dataService: DataService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) { }\n\n  ngOnInit() {\n    if(this.data){\n      this.message = this.data.message;\n    }\n  }\n\n  onSubmit(){\n    this.loading = true;\n    const appData = `mutation {\n      updateStatic(input: {\n        where: {\n          id: \"5e5702eda23dfc62fc1bcf4d\"\n        },\n        data: {\n          whiteBoardMessage: \"${this.message}\"\n        }\n      }) {\n        static {\n          whiteBoardMessage\n        }\n      }\n    }`;\n\n    this.dataService.updateData(appData).subscribe((res) => {\n      this.loading = false;\n      this.dialogRef.close(this.message);\n    });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\" class=\"modal-loading\" color=\"warn\"></mat-progress-bar>\n<form (ngSubmit)=\"onSubmit()\" #form=\"ngForm\">\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Message</mat-label>\n        <input matInput [(ngModel)]=\"message\" name=\"message\">\n      </mat-form-field>\n    <button mat-flat-button color=\"primary\">Save</button>\n    <a mat-stroked-button (click)=\"onNoClick()\" color=\"primary\" style=\"margin-left: 10px;\">Cancel</a>\n</form>\n","import { DataService } from './../data.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-applications-stats',\n  templateUrl: './applications-stats.component.html',\n  styleUrls: ['./applications-stats.component.scss']\n})\nexport class ApplicationsStatsComponent implements OnInit {\n\n  public stats: any[] = [];\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit() {\n    this.getStats();\n  }\n\n  getStats(){\n    const date = new Date();\n    const thisMonth = `${date.getFullYear()}-${('0' + (date.getMonth())).slice(-2)}-01`;\n    console.log(thisMonth);\n    const query = `query{\n        users(where: { applications: {createdAt_gte: \"${thisMonth}\"} }){\n            id\n            fullName\n            avatar{\n              url\n            }\n            applications(sort: \"createdAt:desc\"){\n                id\n                moneyIn\n                approved\n                invoiceOut\n                invoicePaid\n                createdAt\n            }\n        }\n    }`;\n\n    this.dataService.getData(query).subscribe(res => {\n      if (res.data.users.length > 0) {\n        const statsData: any[] = res.data.users;\n        statsData.forEach(element => {\n          // console.log(element);\n          const stats = {\n            id: element.id,\n            name: element.fullName,\n            avatar: element.avatar.length > 0 ? element.avatar['0'].url : '',\n            applications: element.applications.length,\n            moneyIn: element.applications.reduce((total, apps) => (apps.moneyIn === true ? total + 1 : total), 0),\n            approved: element.applications.reduce((total, apps) => (apps.approved === true ? total + 1 : total), 0),\n            invoiceOut: element.applications.reduce((total, apps) => (apps.invoiceOut === true ? total + 1 : total), 0),\n            invoicePaid: element.applications.reduce((total, apps) => (apps.invoicePaid === true ? total + 1 : total), 0),\n          };\n          this.stats.push(stats);\n        });\n        this.stats.sort((a,b) => (a.applications > b.applications) ? -1 : ((b.applications > a.applications) ? 1 : 0));\n        console.log(this.stats);\n      }\n    });\n  }\n\n  place(place){\n    return parseInt(place) + 1;\n  }\n}\n","<div class=\"content\" style=\"padding: 5px;\">\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly stretch\">\n        <ng-container *ngFor=\"let item of stats | keyvalue\">\n            <mat-card class=\"mat-elevation-z4 margin-bottom stats\" style=\"margin: 5px;\" fxFlex *ngIf=\"item.key < 3\" >\n                <div gdAreas=\"avatar content\" gdGap=\"5px\" gdRows=\"auto\" gdColumns=\"105px auto\">\n                    <div gdArea=\"avatar\" class=\"avatar-container\">\n                        <img class=\"avatar_lg\" src=\"https://backend.apartmentsource.com{{item.value.avatar}}\"\n                            *ngIf=\"item.value.avatar\" />\n                        <img class=\"avatar_lg\" src=\"'../../../../assets/avatar.svg\" *ngIf=\"!item.value.avatar\" />\n                    </div>\n                    <div gdArea=\"content\"  gdGap=\"5px\" gdAreas=\"header header | content content2\">\n                        <div gdArea=\"header\" style=\"border-bottom: 1px solid #d4d4d4\">\n                            <h3>{{item.value.name}}</h3>\n                            <span class=\"medal medal-{{item.key}}\">\n                                {{place(item.key)}}\n                                <mat-icon fontSet=\"fa\" fontIcon=\"fa-medal\"></mat-icon>\n                            </span>\n                        </div>\n                        <div gdArea=\"content\">\n                            <div class=\"statistics\">\n                                <span> Applications: </span> <span class=\"float-right\"> {{item.value.applications}} </span> <br />\n                                <span>Money In:  </span> <span class=\"float-right\">{{item.value.moneyIn}}</span><br />\n                                <span>Approved:  </span> <span class=\"float-right\">{{item.value.approved}}</span><br />\n                                <!-- <span>Denied: {{item.denied}}</span><br> -->\n                                <!-- <span>Price: {{item.price}}</span> -->\n                            </div>\n                        </div>\n                        <div gdArea=\"content2\">\n                            <div class=\"statistics\">\n                                <span> Price: </span> <span class=\"float-right\"> {{item.value.applications}} </span> <br />\n                                <span>Invoice Out: </span> <span class=\"float-right\"> {{item.value.invoiceOut}}</span> <br />\n                                <span>Incoice Paid:  </span> <span class=\"float-right\">{{item.value.invoicePaid}}</span><br />\n                                <!-- <span>Denied: {{item.denied}}</span><br> -->\n                                <!-- <span>Price: {{item.price}}</span> -->\n                            </div>\n                        </div>\n                    </div> \n                    \n                </div>\n            </mat-card>\n        </ng-container>\n    </div>\n    <div style=\"padding: 5px 10px;\">\n        <ng-container  *ngFor=\"let item of stats | keyvalue\">\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly stretch\" style=\"margin-bottom: 5px;\" *ngIf=\"item.key > 2\">\n                <div gdAreas=\"number avatar content\" gdGap=\"5px\" gdRows=\"auto\" gdColumns=\"20px 35px auto\"\n                class=\"mat-elevation-z4\" fxFill style=\"background: #fff; padding: 5px\">\n                    <div gdArea=\"number\" class=\"number\">\n                        {{place(item.key)}}\n                    </div>\n                    <div gdArea=\"avatar\" class=\"avatar-container\">\n                        <img class=\"avatar_sm\" src=\"https://backend.apartmentsource.com{{item.value.avatar}}\"\n                            *ngIf=\"item.value.avatar\" />\n                        <img class=\"avatar_sm\" src=\"'../../../../assets/avatar.svg\" *ngIf=\"!item.value.avatar\" />\n                    </div>\n                    <div gdArea=\"content\" class=\"content-table\">\n                        <div style=\"text-align: left;\"><b>{{item.value.name}}</b></div>\n                        <div>Applications: {{item.value.applications}} </div>\n                        <div>Money In: {{item.value.moneyIn}}</div>\n                        <div>Approved: {{item.value.approved}}</div>\n                        <div>Invoice Out: {{item.value.invoiceOut}}</div>\n                        <div>Incoice Paid: {{item.value.invoicePaid}}</div>\n                        <div>Price: {{item.value.applications}} </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n</div>","import { SocketService } from './../services/socket.service';\nimport { AuthService } from './../services/auth.service';\nimport { CreateApplicationComponent } from './create-application/create-application.component';\nimport { DataService } from './../data.service';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { Application } from './application';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-applications',\n  templateUrl: './applications.component.html',\n  styleUrls: ['./applications.component.scss']\n})\nexport class ApplicationsComponent implements OnInit, OnDestroy {\n\n  displayedColumns: string[] = [];\n  dataSource: MatTableDataSource<Application>;\n\n  public applications: Application[] = [];\n  public loading = true;\n  public startPage = 0;\n  public limitPage = 10;\n  public totalPages: number;\n  public search = '';\n  public applicationType = 'Leasing';\n  public editing: string[] = [];\n\n  private applicationData: Application = {\n    id: '',\n    date: '',\n    createById: '',\n    createdAt: '',\n    address: '',\n    price: null,\n    moneyIn: null,\n    approved: null,\n    invoiceOut: null,\n    invoicePaid: null,\n    completed: null,\n    offerOut: null,\n    listingAgreement: null,\n    offerExecuted: null,\n    closed: null,\n    appType: '',\n    denied: null,\n  };\n\n  private userId: string;\n\n  searchUpdate = new Subject<string>();\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(\n    public dialog: MatDialog,\n    private dataService: DataService,\n    private authService: AuthService,\n    private socketService: SocketService,\n  ) {\n    this.dataSource = new MatTableDataSource(this.applications);\n  }\n\n  ngOnInit() {\n    this.displayedColumns = ['address', 'createdAt', 'applicationType', 'price', 'moneyIn', 'approved' , 'denied', 'edit'];\n    this.loading = true;\n    this.dataSource.sort = this.sort;\n\n    const user = this.authService.currentUserValue;\n    this.userId = user.user.id;\n    this.getApplications();\n\n    this.searchUpdate.pipe(\n      debounceTime(400),\n      distinctUntilChanged())\n      .subscribe(value => {\n        this.search = value;\n        this.getApplications();\n      });\n\n    this.socketService.get().subscribe(method => {\n      // console.log(method);\n      if ( typeof this[method] === 'function' ) {\n        this[method]();\n      }\n    });\n  }\n\n  keyUpLoading() {\n    this.loading = true;\n  }\n\n  displayCol(applicationType) {\n    this.loading = true;\n    this.applicationType = applicationType;\n    switch (applicationType) {\n      case 'Leasing':\n        this.displayedColumns = ['address', 'createdAt', 'applicationType', 'price', 'moneyIn', 'approved' , 'denied', 'edit'];\n        break;\n      case 'Listing':\n        this.displayedColumns = ['address', 'createdAt', 'applicationType',\n        'price', 'listingAgreement', 'offerExecuted', 'closed', 'edit'];\n        break;\n      case 'Buying':\n        this.displayedColumns = ['address', 'createdAt', 'applicationType',\n        'price', 'offerOut', 'offerExecuted', 'closed', 'edit'];\n        break;\n      default:\n        break;\n    }\n    this.getApplications();\n  }\n\n  getApplications() {\n    const where = `{\n      agent: \"${this.userId}\",\n      address_contains: \"${this.search}\",\n      applicationType: \"${this.applicationType}\"\n    }`;\n\n    const query = `\n    query{\n        applications(sort: \"createdAt:desc\", start: ${this.startPage}, limit: ${this.limitPage}, where: ${where}) {\n            id,\n            applicationType,\n            address,\n            approved,\n            createdAt,\n            denied,\n            listingAgreement,\n            offerOut,\n            offerExecuted,\n            closed,\n            moneyIn,\n            price,\n            agent {\n                id\n                fullName\n            }\n        }\n        applicationsConnection (where: ${where}) {\n            aggregate {\n                count\n            }\n        }\n    }`;\n\n    this.dataService.getData(query).subscribe(({ data, loading })  => {\n      this.dataSource = new MatTableDataSource<Application>(data.applications);\n      this.totalPages = data.applicationsConnection.aggregate.count;\n      this.loading = false;\n    });\n  }\n\n  createApp(): void {\n    const dialogRef = this.dialog.open(CreateApplicationComponent, {\n      width: '550px',\n      data: {data: this.applicationData, applicationType: this.applicationType}\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n      this.socketService.send('public', 'getApplications');\n      this.getApplications();\n    });\n  }\n\n  edit(appId) {\n    if (!this.editing.includes(appId)) {\n      this.editing.push(appId);\n    }\n  }\n\n  save(appId) {\n    if (this.editing.includes(appId)) {\n      this.editing.splice( this.editing.indexOf(appId), 1 );\n    }\n  }\n\n  updateApp(app: Application, field) {\n    if (this.editing.includes(app.id)) {\n      this.loading = true;\n      app[field] = !app[field];\n      const appData = `mutation {\n          updateApplication(input: {\n            where: {\n              id: \"${app.id}\"\n            },\n            data: {\n              ${field}: ${app[field]}\n            }\n          }) {\n            application {\n              id\n            }\n          }\n        }`;\n\n      this.dataService.updateData(appData).subscribe(() => {\n        this.socketService.send('public', 'getApplications');\n        this.getApplications();\n      });\n    }\n  }\n\n  paginator(e) {\n    this.loading = true;\n    this.startPage = e.pageIndex !== 0 ? e.pageIndex * e.pageSize : 0;\n    this.limitPage = e.pageSize;\n    this.getApplications();\n  }\n\n  ngOnDestroy(): void {\n    this.socketService.closeConnection();\n  }\n}\n","\n<mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\" class=\"loading-top\" color=\"warn\"></mat-progress-bar>\n<div class=\"content\">\n  <mat-card style=\"padding: 5px 10px; margin-bottom: 10px; border-radius: 0px;\" class=\"mat-elevation-z1\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\n    <div fxFlex>\n      <mat-form-field appearance=\"outline\" class=\"no-padding\">\n        <mat-label>Search</mat-label>\n        <input matInput class=\"form-control\" [(ngModel)]=\"search\" \n        type=\"text\" name=\"userQuestion\" id=\"userQuestions\"\n        (ngModelChange)=\"this.searchUpdate.next($event)\" (keyup)=\"keyUpLoading()\" >\n        <button mat-button *ngIf=\"search\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"this.searchUpdate.next('')\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-button-toggle-group #group=\"matButtonToggleGroup\" value=\"Leasing\" class=\"full-width margin-botton\">\n        <mat-button-toggle value=\"Leasing\" aria-label=\"Text align center\" (click)=\"displayCol('Leasing')\">\n          Leasing\n        </mat-button-toggle>\n        <mat-button-toggle value=\"Listing\" aria-label=\"Text align center\" (click)=\"displayCol('Listing')\">\n          Listing\n        </mat-button-toggle>\n        <mat-button-toggle value=\"Buying\" aria-label=\"Text align center\" (click)=\"displayCol('Buying')\">\n          Buying\n        </mat-button-toggle>\n      </mat-button-toggle-group>\n    </div>\n    <div>\n      <button mat-flat-button class=\"fat-btn bk-gradient\" (click)=\"createApp()\">New Application</button>\n    </div>\n  </div>\n </mat-card>\n  <div class=\"mat-elevation-z2\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n      <ng-container matColumnDef=\"address\">\n        <th mat-header-cell *matHeaderCellDef> Address </th>\n        <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n              {{row.address}}\n          </div>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"createdAt\">\n        <th mat-header-cell *matHeaderCellDef> Date </th>\n        <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n              {{row.createdAt | date:'shortDate' }}\n          </div>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"applicationType\">\n        <th mat-header-cell *matHeaderCellDef> Type </th>\n        <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n            {{row.applicationType}}\n          </div>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"price\">\n          <th mat-header-cell *matHeaderCellDef> Price </th>\n          <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                ${{row.price | number }}\n            </div>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"offerOut\">\n          <th mat-header-cell *matHeaderCellDef>Offer Out </th>\n          <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n              <mat-checkbox [(ngModel)]=\"row.offerOut\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'offerOut')\"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"listingAgreement\">\n          <th mat-header-cell *matHeaderCellDef>Listing <br> Agreement </th>\n          <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n            <mat-checkbox [(ngModel)]=\"row.listingAgreement\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'listingAgreement')\"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"offerExecuted\">\n          <th mat-header-cell *matHeaderCellDef>Offer <br> Executed </th>\n          <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n              <mat-checkbox [(ngModel)]=\"row.offerExecuted\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'offerExecuted')\"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"closed\">\n          <th mat-header-cell *matHeaderCellDef>Closed </th>\n          <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n            <mat-checkbox [(ngModel)]=\"row.closed\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'closed')\"></mat-checkbox>\n          </td>\n        </ng-container>\n\n      <ng-container matColumnDef=\"moneyIn\">\n        <th mat-header-cell *matHeaderCellDef>Money In </th>\n        <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n            <mat-checkbox [(ngModel)]=\"row.moneyIn\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'moneyIn')\"></mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"approved\">\n        <th mat-header-cell *matHeaderCellDef>Approved </th>\n        <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n          <mat-checkbox [(ngModel)]=\"row.approved\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'approved')\"></mat-checkbox>\n        </td>\n      </ng-container>\n\n        <ng-container matColumnDef=\"denied\">\n            <th mat-header-cell *matHeaderCellDef>Denied </th>\n            <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n              <mat-checkbox [(ngModel)]=\"row.denied\" color=\"primary\" [disabled]=\"!editing.includes(row.id)\" (click)=\"updateApp(row, 'denied')\"></mat-checkbox>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef> </th>\n            <td mat-cell *matCellDef=\"let row\" style=\"width: 5%;\">\n              <button mat-icon-button *ngIf=\"!editing.includes(row.id)\" (click)=\"edit(row.id)\" ><mat-icon>edit</mat-icon></button>\n              <button mat-icon-button *ngIf=\"editing.includes(row.id)\" (click)=\"save(row.id)\"><mat-icon>save</mat-icon></button>\n              <!-- <button mat-icon-button *ngIf=\"editing.includes(row.id)\" (click)=\"edit(row.id)\"><mat-icon>delete</mat-icon></button> -->\n            </td>\n          </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n      </tr>\n    </table>\n\n    <mat-paginator [length]=\"totalPages\"\n              [pageSize]=\"10\"\n              [pageSizeOptions]=\"[5, 10, 25, 100]\"\n              (page)=\"paginator($event)\">\n    </mat-paginator>\n  </div>\n\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DataService } from '../../data.service';\nimport { AuthService } from './../../services/auth.service';\nimport { Application } from 'src/app/applications/application';\n\n@Component({\n  selector: 'app-create-application',\n  templateUrl: './create-application.component.html',\n  styleUrls: ['./create-application.component.scss']\n})\nexport class CreateApplicationComponent implements OnInit {\n\n  public loading = false;\n  public hide = true;\n  public avatar;\n  public task;\n  public downloadURL;\n  public date: string;\n  public appType: string;\n  private userId: string;\n\n  createApplicationForm = new FormGroup({\n    address: new FormControl('', Validators.required),\n    price: new FormControl('', Validators.required),\n    moneyIn: new FormControl(false),\n    approved: new FormControl(false),\n    denied: new FormControl(false),\n    offerOut: new FormControl(false),\n    listingAgreement: new FormControl(false),\n    offerExecuted: new FormControl(false),\n    closed: new FormControl(false),\n    // invoicePaid: new FormControl(''),\n  });\n\n  public imageSrc;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateApplicationComponent>,\n    private authService: AuthService,\n    private dataService: DataService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit() {\n    const user = this.authService.currentUserValue;\n    this.userId = user.user.id;\n    this.appType = this.data.applicationType;\n    console.log(this.data.applicationType);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  createApplication() {\n    const appData = `mutation{\n        createApplication(input: {\n        data: {\n          address: \"${this.createApplicationForm.value.address}\",\n          price: ${this.createApplicationForm.value.price},\n          moneyIn: ${this.createApplicationForm.value.moneyIn},\n          approved: ${this.createApplicationForm.value.approved},\n          denied: ${this.createApplicationForm.value.denied},\n          offerOut: ${this.createApplicationForm.value.offerOut},\n          listingAgreement: ${this.createApplicationForm.value.listingAgreement},\n          offerExecuted: ${this.createApplicationForm.value.offerExecuted},\n          closed: ${this.createApplicationForm.value.closed},\n          applicationType: ${this.appType},\n          agent: \"${this.userId}\"\n        }\n      }) {\n        application {\n          address\n          id\n          agent {\n            id\n          }\n        }\n      }\n    }`;\n\n    this.dataService.createData(appData)\n    .subscribe(res => {\n      this.dialogRef.close();\n    });\n  }\n}\n","<mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\" class=\"modal-loading\"></mat-progress-bar>\n<form [formGroup]=\"createApplicationForm\" (ngSubmit)=\"createApplication()\">\n\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <h1 mat-dialog-title>Submit a new application</h1>\n  </div>\n\n<div mat-dialog-content>\n\n  <mat-button-toggle-group #group=\"matButtonToggleGroup\" [value]=\"appType\" class=\"full-width margin-botton\">\n    <mat-button-toggle value=\"Leasing\" aria-label=\"Text align center\" (click)=\"appType = 'Leasing'\">\n      Leasing\n    </mat-button-toggle>\n    <mat-button-toggle value=\"Listing\" aria-label=\"Text align center\" (click)=\"appType = 'Listing'\">\n      Listing \n    </mat-button-toggle>\n    <mat-button-toggle value=\"Buying\" aria-label=\"Text align center\" (click)=\"appType = 'Buying'\">\n      Buying\n    </mat-button-toggle>\n  </mat-button-toggle-group>\n  <!-- <div class=\"example-selected-value\">Selected value: {{group.value}}</div> -->\n  <!-- <div *ngIf=\"group.value == 'Sales'\">\n    <mat-radio-group class=\"full-width\" value=\"Listing\">\n      <mat-radio-button value=\"Listing\" class=\"margin\" (click)=\"saleType = 'Listing'\">Listing</mat-radio-button>\n      <mat-radio-button value=\"Buying\" class=\"margin\" (click)=\"saleType = 'Buying'\">Buying</mat-radio-button>\n    </mat-radio-group>\n  </div> -->\n\n    <mat-form-field class=\"full-width\">\n        <mat-label>Address</mat-label>\n        <input matInput formControlName=\"address\">\n        <mat-icon matSuffix>name</mat-icon>\n        <mat-error *ngIf=\"createApplicationForm.controls['address'].errors && createApplicationForm.controls['address'].errors.required\">Required</mat-error>\n      </mat-form-field>\n      <div fxLayout=\"column\" fxLayoutAlign=\"start start\" fxLayoutGap=\"10px\">\n          <mat-form-field>\n              <mat-label>Price</mat-label>\n              <span matPrefix>$ &nbsp;</span>\n              <input type=\"number\" matInput formControlName=\"price\">\n            </mat-form-field>\n        <div *ngIf=\"appType == 'Leasing'\">\n          <mat-checkbox color=\"primary\" formControlName=\"moneyIn\">Money In</mat-checkbox><br>\n          <mat-checkbox color=\"primary\" formControlName=\"approved\">Approved</mat-checkbox><br>\n          <mat-checkbox color=\"primary\" formControlName=\"denied\">Denied</mat-checkbox>\n        </div>\n        <div *ngIf=\"appType == 'Listing'\">\n          <mat-checkbox color=\"primary\" formControlName=\"listingAgreement\">Listing Agreement</mat-checkbox><br>\n          <mat-checkbox color=\"primary\" formControlName=\"offerExecuted\">Offer Executed</mat-checkbox><br>\n          <mat-checkbox color=\"primary\" formControlName=\"closed\">Closed</mat-checkbox>\n        </div>\n        <div *ngIf=\"appType == 'Buying'\">\n          <mat-checkbox color=\"primary\" formControlName=\"offerOut\">Offer out</mat-checkbox><br>\n          <mat-checkbox color=\"primary\" formControlName=\"offerExecuted\">Offer Executed</mat-checkbox><br>\n          <mat-checkbox color=\"primary\" formControlName=\"closed\">Closed</mat-checkbox>\n        </div>\n          <!-- <mat-checkbox color=\"primary\" formControlName=\"invoiceOut\">Invoice Out</mat-checkbox>\n          <mat-checkbox color=\"primary\" formControlName=\"invoicePaid\">Invoice Paid</mat-checkbox> -->\n      </div>\n</div>\n\n  <div mat-dialog-actions fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"space-evenly center\" class=\"margin-botton\">\n      <button mat-flat-button color=\"primary\" [disabled]=\"!createApplicationForm.valid\" fxFlex>Create\n\n      </button>\n      <a mat-stroked-button (click)=\"onNoClick()\" color=\"primary\" fxFlex>Cancel</a>\n      <!-- <button mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>Ok</button> -->\n  </div>\n</form>\n<!-- <div class=\"loading-spinner\">\n    <mat-progress-spinner\n    class=\"example-margin\"\n    color=\"white\"\n    mode=\"indeterminate\"\n    value=\"50\">\n    </mat-progress-spinner>\n</div> -->\n","import { AngularFireAuth } from '@angular/fire/auth';\nimport { CreateApplicationComponent } from './../create-application/create-application.component';\nimport { DataService } from './../../data.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { map, tap, scan, mergeMap, throttleTime } from 'rxjs/operators';\nimport { Application } from './../application';\n\n\n@Component({\n  selector: 'app-manage-applications',\n  templateUrl: './manage-applications.component.html',\n  styleUrls: ['./manage-applications.component.scss']\n})\nexport class ManageApplicationsComponent implements OnInit {\n\n  displayedColumns: string[] = ['address', 'createDate', 'createBy', 'saleType', 'price', 'offerOut', 'listingAgreement', 'offerExecuted', 'closed', 'moneyIn', 'approved' , 'denied', 'invoiceOut', 'invoicePaid', 'completed'];\n  dataSource: MatTableDataSource<Application>;\n\n  // public users: Users[] = [\n  //   {id: 'ewweewqe', name: 'Marcel Cruz', email: 'marclcruz85@gmail.com', isAdmin: true, isActive: false, teamId: null},\n  // ];\n\n  public applications: Application[] = [];\n  public loading = false;\n  public selectedMonth;\n  public selectedYear;\n\n  public years = [\n    {display: '2019', value: '2019'},\n    {display: '2020', value: '2020'},\n    {display: '2021', value: '2021'},\n  ];\n  public months = [\n    {display: 'January', value: '01'},\n    {display: 'January', value: '02'},\n    {display: 'January', value: '03'},\n    {display: 'January', value: '04'},\n    {display: 'January', value: '05'},\n    {display: 'January', value: '06'},\n    {display: 'January', value: '07'},\n    {display: 'January', value: '08'},\n    {display: 'January', value: '09'},\n    {display: 'January', value: '10'},\n    {display: 'January', value: '11'},\n    {display: 'January', value: '12'},\n  ];\n\n  private applicationData: Application = {\n    id: '',\n    date: '',\n    createById: '',\n    createdAt: '',\n    address: '',\n    price: null,\n    moneyIn: null,\n    approved: null,\n    invoiceOut: null,\n    invoicePaid: null,\n    completed: null,\n    offerOut: null,\n    listingAgreement: null,\n    offerExecuted: null,\n    closed: null,\n    appType: '',\n    denied: null,\n  };\n\n  private userId: string;\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(\n    public dialog: MatDialog,\n    private dataService: DataService,\n    private afAuth: AngularFireAuth,\n  ) {\n    this.dataSource = new MatTableDataSource(this.applications);\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    const today = new Date();\n    const monthCurr = String(today.getMonth() + 1).padStart(2, '0');\n    const yearCurr = today.getFullYear();\n    console.log(yearCurr);\n    this.selectedMonth = monthCurr.toString();\n    this.selectedYear = yearCurr.toString();\n\n    this.dataSource.sort = this.sort;\n    this.afAuth.user.subscribe(res => {\n      if (res) {\n        this.userId = res.uid;\n        this.getApplications();\n      }\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  addUser(): void {\n    const dialogRef = this.dialog.open(CreateApplicationComponent, {\n      width: '550px',\n      data: this.applicationData\n    });\n\n    dialogRef.afterClosed().subscribe();\n  }\n\n  // getApplications() {\n  //     this.dataService.getUserApplications(this.userId).subscribe(res => {\n  //       console.log(res);\n  //       this.dataSource = new MatTableDataSource<Application>(res);\n  //       this.loading = false;\n  //     });\n  // }\n  getApplications() {\n    const start = `${this.selectedYear}${this.selectedMonth}01`;\n    const end = `${this.selectedYear}${this.selectedMonth}31`;\n    this.dataService.getAdminApplications(start, end).subscribe(res => {\n      console.log(res);\n      // this.topAgent = res['topAgents']['0'];\n      // const appsData: Application[] = res;\n      // this.applications = appsData;\n      this.dataSource = new MatTableDataSource<Application>(res);\n      this.loading = false;\n    });\n  }\n\n  updateApp(app: Application, field) {\n    // this.loading = true;\n    app[field] = !app[field];\n    this.dataService.updateApp(app).then(res => {\n      console.log('record Updated ', res);\n    }).catch(err => console.log(err));\n  }\n\n  changeMonth(event){\n    this.selectedMonth = event.value;\n    console.log(this.selectedMonth);\n    this.getApplications();\n  }\n\n  changeYear(event){\n    this.selectedYear = event.value;\n    console.log(this.selectedMonth);\n    this.getApplications();\n  }\n}\n","\n<mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\" class=\"loading-top\"></mat-progress-bar>\n<div class=\"content\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"10px\">\n    <mat-form-field appearance=\"outline\" fxFlex=\"80%\" fxFlexFill>\n      <mat-label>Filter</mat-label>\n      <input matInput (keyup)=\"applyFilter($event.target.value)\">\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\" fxFlex=\"10%\" fxFlexFill>\n        <mat-label>Month</mat-label>\n        <mat-select [(ngModel)]=\"selectedMonth\" name=\"item\" (selectionChange)=\"changeMonth($event)\">\n          <mat-option *ngFor=\"let item of months\" [value]=\"item.value\">\n            {{item.value}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    <mat-form-field appearance=\"outline\" fxFlex=\"10%\" fxFlexFill>\n        <mat-label>Year</mat-label>\n        <mat-select [(ngModel)]=\"selectedYear\" name=\"item\" (selectionChange)=\"changeYear($event)\">\n          <mat-option *ngFor=\"let item of years\" [value]=\"item.value\">\n            {{item.value}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    <!-- <button mat-flat-button color=\"primary\" class=\"fat-btn\" (click)=\"addUser()\">New Application</button> -->\n  </div>\n\n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n      <ng-container matColumnDef=\"address\">\n        <th mat-header-cell *matHeaderCellDef> Address </th>\n        <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n              {{row.address}}\n          </div>\n        </td>\n      </ng-container>\n\n        <ng-container matColumnDef=\"createDate\">\n          <th mat-header-cell *matHeaderCellDef> Date </th>\n          <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                {{row.createDate}}\n            </div>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"createBy\">\n          <th mat-header-cell *matHeaderCellDef> Agent </th>\n          <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                {{row.createBy}}\n            </div>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"saleType\">\n          <th mat-header-cell *matHeaderCellDef> Type </th>\n          <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n              <span *ngIf=\"row.appType != 'Sale'\">Lease</span>\n              <span *ngIf=\"row.appType == 'Sale'\">{{row.saleType}}</span>\n            </div>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef> Price </th>\n            <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n              <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                  ${{row.price}}\n              </div>\n            </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"offerOut\">\n            <th mat-header-cell *matHeaderCellDef>Offer Out </th>\n            <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n                <mat-checkbox [(ngModel)]=\"row.offerOut\" color=\"primary\" (click)=\"updateApp(row, 'offerOut')\"  *ngIf=\"row.appType == 'Sale' && row.saleType != 'Listing'\"></mat-checkbox>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"listingAgreement\">\n            <th mat-header-cell *matHeaderCellDef>Listing <br> Agreement </th>\n            <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n              <mat-checkbox [(ngModel)]=\"row.listingAgreement\" color=\"primary\" (click)=\"updateApp(row, 'listingAgreement')\"  *ngIf=\"row.appType == 'Sale' && row.saleType == 'Listing'\"></mat-checkbox>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"offerExecuted\">\n            <th mat-header-cell *matHeaderCellDef>Offer <br> Executed </th>\n            <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n                <mat-checkbox [(ngModel)]=\"row.offerExecuted\" color=\"primary\" (click)=\"updateApp(row, 'offerExecuted')\" *ngIf=\"row.appType == 'Sale'\"></mat-checkbox>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"closed\">\n            <th mat-header-cell *matHeaderCellDef>Closed </th>\n            <td mat-cell *matCellDef=\"let row\" style=\"width: 8%;\">\n              <mat-checkbox [(ngModel)]=\"row.closed\" color=\"primary\" (click)=\"updateApp(row, 'closed')\" *ngIf=\"row.appType == 'Sale'\"></mat-checkbox>\n            </td>\n          </ng-container>\n\n      <ng-container matColumnDef=\"moneyIn\">\n        <th mat-header-cell *matHeaderCellDef>Money In </th>\n        <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n            <mat-checkbox [(ngModel)]=\"row.moneyIn\" color=\"primary\" (click)=\"updateApp(row, 'moneyIn')\"  *ngIf=\"row.appType != 'Sale'\"></mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"approved\">\n        <th mat-header-cell *matHeaderCellDef>Approved </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-checkbox [(ngModel)]=\"row.approved\" color=\"primary\" (click)=\"updateApp(row, 'approved')\"  *ngIf=\"row.appType != 'Sale'\"></mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"denied\">\n        <th mat-header-cell *matHeaderCellDef>Denied </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-checkbox [(ngModel)]=\"row.denied\" color=\"primary\" (click)=\"updateApp(row, 'denied')\" *ngIf=\"row.appType != 'Sale'\"></mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"invoiceOut\">\n          <th mat-header-cell *matHeaderCellDef>Invoice Out </th>\n          <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n            <mat-checkbox [(ngModel)]=\"row.invoiceOut\" color=\"primary\" (click)=\"updateApp(row, 'invoiceOut')\"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"invoicePaid\">\n          <th mat-header-cell *matHeaderCellDef>Invoice <br> Paid </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <mat-checkbox [(ngModel)]=\"row.invoicePaid\" color=\"primary\" (click)=\"updateApp(row, 'invoicePaid')\"></mat-checkbox>\n          </td>\n        </ng-container>\n\n          <ng-container matColumnDef=\"completed\">\n              <th mat-header-cell *matHeaderCellDef>Paid </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox [(ngModel)]=\"row.completed\" color=\"primary\" (click)=\"updateApp(row, 'completed')\"></mat-checkbox>\n              </td>\n            </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n      </tr>\n    </table>\n\n    <!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator> -->\n  </div>\n\n</div>\n","import { Users } from './users/users';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Injectable } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private userDetails: firebase.User;\n\n  constructor(\n    private fireAuth: AngularFireAuth,\n  ) {\n      this.fireAuth.authState.subscribe(res => {\n        if (res) {\n          this.userDetails = res;\n        }\n      });\n    }\n\n    getUser() {\n      if (this.userDetails) {\n        return this.userDetails;\n      }\n    }\n\n    login(email: string, password: string) {\n      return this.fireAuth.auth.signInWithEmailAndPassword(email, password);\n    }\n\n    register(user: Users, password: string) {\n      return this.fireAuth.auth.createUserWithEmailAndPassword(user.email, password);\n      // .then(res => {\n      //   user.id = res.user.uid;\n      //   return this.dataService.createUser(user);\n      // }).catch(err => {\n      //   console.log(err);\n      // });\n    }\n\n    forgot(email: string) {\n      return this.fireAuth.auth.sendPasswordResetEmail(email);\n    }\n\n    sendVerificationEmail() {\n      return this.fireAuth.auth.currentUser.sendEmailVerification();\n    }\n\n    signOut() {\n      return this.fireAuth.auth.signOut();\n    }\n}\n","import { Router } from '@angular/router';\nimport { Component, OnInit, NgZone } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.zone.run(() => this.router.navigateByUrl('/dashboard/applications-dashboard'))\n  }\n\n}\n","<app-navigation></app-navigation>\n","import { Users } from './users/users';\nimport { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { Application } from './applications/application';\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private user: Users;\n  private userId: string;\n\n  constructor(\n    private afStore: AngularFirestore,\n    private apollo: Apollo,\n  ) {\n  }\n\n  getData(query) {\n    return this.apollo.query<any>({\n      query: gql`${query}`,\n      fetchPolicy: 'network-only',\n      errorPolicy: 'all',\n    });\n  }\n\n  createData(data) {\n    return this.apollo.mutate({\n      mutation: gql`${data}`,\n    });\n  }\n\n  updateData(data) {\n    return this.apollo.mutate({\n      mutation: gql`${data}`,\n    });\n  }\n\n  createUser(user: Users) {\n    return this.afStore.collection('users').doc(user.id).set(user);\n  }\n\n  async createUserAndTeam(user: Users) {\n    return await this.createTeam().then(res => {\n      user.teamId = res.id;\n      this.afStore.collection('users').doc(user.id).set(user);\n    }).catch(err => console.log(err));\n  }\n\n  createTeam() {\n    return this.afStore.collection('teams').add({});\n  }\n\n\n  getUser(userId) {\n    return this.afStore.collection('users').doc<Users>(userId);\n  }\n\n  getUsers() {\n    return this.afStore.collection<Users>('users').valueChanges();\n  }\n\n  // createApp(appData: Application) {\n  //   return this.afStore.collection('applications').doc(appData.id).set(appData);\n  // }\n\n  getApplications(docName: string) {\n    return this.afStore.collection('references').doc<Application>(docName).valueChanges();\n  }\n\n  getAllApps() {\n    return this.afStore.collection('applications').valueChanges();\n  }\n\n  getAdminApplications(start, end) {\n    return this.afStore.collection<Application>('applications', ref =>\n      ref.orderBy('date').startAt(start).endAt(end)\n    ).valueChanges();\n  }\n\n  getUserApplications(userId) {\n    return this.afStore.collection<Application>('applications', ref =>\n      ref.where('createById', '==', userId).where('completed', '==', false)\n    ).valueChanges();\n  }\n\n  getStats(thisMonth: string) {\n    return this.afStore.collection('statistics', ref =>\n      ref.orderBy('statsData.app', 'desc')\n      .where('range', '==', 'monthly')\n      .where('statsData.date', '==', thisMonth)\n    )\n    .valueChanges();\n  }\n\n  updateApp(app: Application) {\n    console.log(app);\n    return this.afStore.collection('applications').doc(app.id).set(app, {merge: true});\n  }\n\n  saveMessage(message: string) {\n    return this.afStore.collection('message').doc('dashboard-message').set({message}, {merge: true});\n  }\n\n  getMessage() {\n    return this.afStore.collection('message').doc<string>('dashboard-message').valueChanges();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  forgotForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n  });\n\n  constructor(\n    private authService: AuthService,\n    private snackBard: MatSnackBar,\n    private router: Router,\n    ) { }\n\n  ngOnInit() {\n  }\n\n  forgot() {\n    const email = this.forgotForm.value.email;\n\n    this.authService.forgotPassword(email)\n    .pipe(first())\n    .subscribe(\n        data => {\n          // this.presentToast('Please check your emails for a password reset directions');\n          this.snackBard.open('Please check your email for instructions', null, {duration: 3000});\n          this.router.navigate(['/login']);\n        },\n        error => {\n          console.log(error);\n          const errorMessage = error['0'].messages['0'].message;\n          this.snackBard.open(errorMessage, null, {duration: 3000});\n          // this.presentToast(errorMessage);\n          // this.loading = false;\n        });\n  }\n\n}\n","<div class=\"content\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n    <mat-card class=\"mat-elevation-z8\">\n        <form [formGroup]=\"forgotForm\" (ngSubmit)=\"forgot()\">\n              <mat-card-content class=\"ion-padding\">\n                <mat-card-title class=\"ion-text-center full-width\">Forgot Password</mat-card-title>\n                <mat-card-subtitle class=\"ion-text-center full-width\">Recover your password using your email address</mat-card-subtitle>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                  <mat-label>Email</mat-label>\n                  <input matInput formControlName=\"email\">\n                  <mat-icon matSuffix>email</mat-icon>\n                  <!-- <mat-hint>Hint</mat-hint> -->\n                  <mat-error *ngIf=\"forgotForm.controls['email'].errors && forgotForm.controls['email'].errors.required\">Required</mat-error>\n                  <mat-error *ngIf=\"forgotForm.controls['email'].errors && !forgotForm.controls['email'].errors.required\">Please type a valid email address</mat-error>\n                </mat-form-field>\n              </mat-card-content>\n              <mat-card-actions  class=\"padding\">\n                  <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"space-evenly center\">\n                      <button mat-flat-button color=\"primary\" [disabled]=\"!forgotForm.valid\" fxFlex>Reset</button>\n                      <a mat-stroked-button routerLink=\"/login\" color=\"primary\" fxFlex>Back to Login</a>\n                  </div>\n              </mat-card-actions>\n          </form>\n        </mat-card>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface FormData {\n  file: string;\n  name: string;\n  details: string;\n}\n\nconst forms: FormData[] = [\n  {file: 'ar-11', name: 'AR-11', details: 'Alien’s Change of Address Card'},\n  {file: 'n-400', name: 'N-400', details: 'Application for Naturalization'},\n  {file: 'g-28', name: 'G-28', details: 'Notice of Entry of Appearance as Attorney or Accredited Representative'},\n  {file: 'i-131', name: 'I-131', details: 'Application for Travel Document'},\n  {file: 'i-90', name: 'I-90', details: 'Alien’s Change of Address Card'},\n]\n\n@Component({\n  selector: 'app-form-list',\n  templateUrl: './form-list.component.html',\n  styleUrls: ['./form-list.component.scss']\n})\nexport class FormListComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'details'];\n  dataSource: MatTableDataSource<FormData>;\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor() {\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(forms);\n  }\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<div class=\"content\">\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event.target.value)\">\n      </mat-form-field>\n\n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n          <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n            <button mat-button routerLink=\"/dashboard/form/{{row.file}}\">{{row.name}}</button>\n          </td>\n        </ng-container>\n\n      <!-- Details Column -->\n      <ng-container matColumnDef=\"details\">\n        <th mat-header-cell *matHeaderCellDef> Details </th>\n        <td mat-cell *matCellDef=\"let row\">{{row.details}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n      </tr>\n    </table>\n\n    <!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator> -->\n  </div>\n\n</div>\n","import {NgModule} from '@angular/core';\nimport {ApolloModule, APOLLO_OPTIONS} from 'apollo-angular';\nimport {HttpLinkModule, HttpLink} from 'apollo-angular-link-http';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\n\nconst uri = 'https://backend.apartmentsource.com/graphql'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink: HttpLink) {\n  return {\n    link: httpLink.create({uri}),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","import { AuthService } from './../services/auth.service';\nimport { first } from 'rxjs/operators';\nimport { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public hide = true;\n  private uid: string;\n\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n  });\n\n  constructor(\n    private authenticationService: AuthService,\n    private router: Router,\n    private fireAuth: AngularFireAuth,\n    private snackBard: MatSnackBar,\n    private zone: NgZone,\n  ) {\n  }\n\n  ngOnInit() {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  login() {\n    const email = this.loginForm.value.email;\n    const password = this.loginForm.value.password;\n\n    this.authenticationService.login(email, password)\n    .pipe(first())\n    .subscribe(\n        data => {\n          // this.router.navigateByUrl(this.returnUrl);\n          this.router.navigate(['/dashboard']).then(() => {\n            // this.loading.dismiss();\n          });\n        },\n        error => {\n          console.log(error);\n          const errorMessage = error['0'].messages['0'].message;\n          this.snackBard.open(errorMessage, null, {duration: 3000});\n          // this.loading.dismiss();\n        });\n  }\n}\n","<div class=\"content\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n    <mat-card class=\"mat-elevation-z8\">\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n              <mat-card-content class=\"ion-padding\">\n                <mat-card-title class=\"ion-text-center full-width\">Login</mat-card-title>\n                <mat-card-subtitle class=\"ion-text-center full-width\">Using your email address</mat-card-subtitle>\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\n                  <mat-label>Email</mat-label>\n                  <input matInput formControlName=\"email\">\n                  <mat-icon matSuffix>email</mat-icon>\n                  <mat-error *ngIf=\"loginForm.controls['email'].errors && loginForm.controls['email'].errors.required\">Required</mat-error>\n                  <mat-error *ngIf=\"loginForm.controls['email'].errors && !loginForm.controls['email'].errors.required\">Please type a valid email address</mat-error>\n                  <!-- <mat-hint>Hint</mat-hint> -->\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" color=\"primary\" class=\"full-width\">\n                  <mat-label>Password</mat-label>\n                  <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\">\n                  <a mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                    [attr.aria-pressed]=\"hide\">\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                  </a>\n                  <mat-hint>Password should be at least 6 characters</mat-hint>\n                  <mat-error *ngIf=\"loginForm.controls['password'].errors && loginForm.controls['password'].errors.required\">Required</mat-error>\n                  <mat-error *ngIf=\"loginForm.controls['password'].errors && !loginForm.controls['password'].errors.required\">Password should be at least 6 characters\n                    </mat-error>\n                </mat-form-field>\n\n                <!-- <a mat-flat-button routerLink=\"/forgot-password\">Forgot Password?</a> -->\n              </mat-card-content>\n              <mat-card-actions class=\"padding\">\n                <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"space-evenly center\">\n                    <button mat-flat-button color=\"primary\" [disabled]=\"!loginForm.valid\" fxFlex>Login</button>\n                    <a mat-stroked-button routerLink=\"/forgot-password\" color=\"primary\" fxFlex>Reset Password</a>\n                </div>\n              </mat-card-actions>\n              </form>\n    </mat-card>\n</div>\n","export class User {\n    jwt: string;\n    user: {\n        id: string;\n        username: string;\n        email: string;\n        fullName: string;\n        blocked: boolean;\n        role: {\n            name: string;\n        };\n        avatar: [{\n            url: string;\n        }]\n    };\n}\n","import { SocketService } from './../services/socket.service';\nimport { User } from './../models/user';\nimport { AuthService } from './../services/auth.service';\nimport { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Users } from '../users/users';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent {\n\n  // public loggedUser: Users;\n  public user: User;\n  public userAvatar: string;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private authService: AuthService,\n    private router: Router,\n    private socketService: SocketService,\n    ) {\n      this.authService.currentUser.subscribe(data => {\n        this.user = data;\n        if (data && data.user && data.user.avatar) {\n          // this.userAvatar = `https://backend.apartmentsource.com//${data.user.avatar.url}`;\n        }\n      });\n\n\n      this.socketService.get().subscribe(method => {\n        // console.log(method);\n        if ( typeof this[method] === 'function' ) {\n          this[method]();\n        }\n      });\n\n      // this.socketService.listenPrivate().subscribe(data => this.realTimeOps(data));\n      // this.socketService.listenPublic().subscribe(data => this.realTimeOps(data));\n    }\n\n    // realTimeOps(msg){\n    //   console.log(msg);\n    //   switch (msg) {\n    //     case 'refreshUi':\n    //       this.authService.logout();\n    //       this.router.navigate(['/login']);\n    //       break;\n    //     default:\n    //       break;\n    //   }\n    // }\n    logout() {\n      this.authService.logout();\n      this.router.navigate(['/login']);\n    }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <div *ngIf=\"user\">\n          <!-- <a mat-list-item routerLink=\"/dashboard/form/ar-11\">Clients</a> -->\n          <a mat-list-item routerLink=\"/dashboard/applications-dashboard\" (click)=\"drawer.close()\">Whiteboard</a>\n          <a mat-list-item routerLink=\"/dashboard/whiteboard\" (click)=\"drawer.close()\">Agent Stats (old)</a>\n          <a mat-list-item routerLink=\"/dashboard/applications-stats\" (click)=\"drawer.close()\">Agent Stats</a>\n          <a mat-list-item routerLink=\"/dashboard/applications\" (click)=\"drawer.close()\">Applications</a>\n          <!-- <a mat-list-item routerLink=\"/dashboard/manage-applications\" (click)=\"drawer.close()\">Applications <span class=\"sub-menu\">(admin)</span></a>\n          <a mat-list-item routerLink=\"/dashboard/users\" (click)=\"drawer.close()\">Users</a> -->\n          <!-- <a mat-list-item routerLink=\"/dashboard/manage-applications\" (click)=\"drawer.close()\" *ngIf=\"user.user.role.name == 'Administrator'\">Applications old <span class=\"sub-menu\">(admin)</span></a> -->\n          <a mat-list-item routerLink=\"/dashboard/applications-admin\" (click)=\"drawer.close()\" *ngIf=\"user.user.role.name == 'Administrator'\">Applications <span class=\"sub-menu\">(admin)</span></a>\n          <a mat-list-item routerLink=\"/dashboard/users\" (click)=\"drawer.close()\" *ngIf=\"user.user.role.name == 'Administrator'\">Users</a>\n      </div>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>\n        <!-- Dashboard -->\n      </span>\n      <span class=\"spacer\"></span>\n      <button mat-icon-button (click)=\"logout()\" ><mat-icon>exit_to_app</mat-icon></button>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <router-outlet>\n    </router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n<!-- <mat-toolbar color=\"primary\">\n  <span>footer</span>\n</mat-toolbar> -->\n\n","import { Users } from '../users/users';\nimport { DataService } from './../data.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from './../auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  public hide = true;\n\n  private userData: Users = {\n    avatar: '',\n    id: '',\n    name: '',\n    email: '',\n    isAdmin: null,\n    isActive: null,\n    teamId: null,\n  };\n\n  registerForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n  });\n\n  constructor(\n    private authService: AuthService,\n    private snackBard: MatSnackBar,\n    private router: Router,\n    private dataService: DataService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  register() {\n    this.userData.email = this.registerForm.value.email;\n    const password = this.registerForm.value.password;\n    this.userData.name = this.registerForm.value.name;\n    this.authService.register(this.userData, password)\n    .then(res => {\n      console.log(res);\n      this.userData.id = res.user.uid;\n      this.userData.name = this.registerForm.value.name;\n      this.userData.email = res.user.email;\n      // this.userData.isAdmin = true;\n      this.dataService.createUser(this.userData).then(() => {\n        this.snackBard.open('New Account have been created, please login using your credentials', null, {duration: 3000});\n        this.router.navigate(['/dashboard/users']);\n      }).catch(err => {\n        this.snackBard.open(err, null, {duration: 3000});\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      let message: string;\n      switch (err.code) {\n        case 'auth/invalid-email':\n          message = 'Invalid email address';\n          break;\n        case 'auth/user-not-found':\n          message = 'Incorrect email address or password';\n          break;\n        default:\n          message = err.message;\n      }\n      this.snackBard.open(message, null, {duration: 3000});\n    });\n  }\n}\n","<div class=\"content\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n    <mat-card class=\"mat-elevation-z2\">\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n            <mat-card-content class=\"ion-padding\">\n              <mat-card-title class=\"ion-text-center full-width\">Register</mat-card-title>\n              <mat-card-subtitle class=\"ion-text-center full-width\">Using your email address</mat-card-subtitle>\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\n                  <mat-label>Name</mat-label>\n                  <input matInput formControlName=\"name\">\n                  <mat-icon matSuffix>name</mat-icon>\n                  <mat-error *ngIf=\"registerForm.controls['email'].errors && registerForm.controls['email'].errors.required\">Required</mat-error>\n                </mat-form-field>\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\n                <mat-label>Email</mat-label>\n                <input matInput formControlName=\"email\">\n                <mat-icon matSuffix>email</mat-icon>\n\n                <mat-error *ngIf=\"registerForm.controls['email'].errors && registerForm.controls['email'].errors.required\">Required</mat-error>\n                <mat-error *ngIf=\"registerForm.controls['email'].errors && !registerForm.controls['email'].errors.required\">Please type a valid email address</mat-error>\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\" color=\"primary\" class=\"full-width\">\n                <mat-label>Password</mat-label>\n                <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\">\n                <a mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                  [attr.aria-pressed]=\"hide\">\n                  <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </a>\n                <mat-hint>Password should be at least 6 characters</mat-hint>\n                <mat-error *ngIf=\"registerForm.controls['password'].errors && registerForm.controls['password'].errors.required\">Required</mat-error>\n                <mat-error *ngIf=\"registerForm.controls['password'].errors && !registerForm.controls['password'].errors.required\">Password should be at least 6 characters\n                  </mat-error>\n              </mat-form-field>\n            </mat-card-content>\n            <mat-card-actions  class=\"padding\">\n                <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"space-evenly center\">\n                    <button mat-flat-button color=\"primary\" [disabled]=\"!registerForm.valid\" fxFlex>Register</button>\n                    <!-- <a mat-stroked-button routerLink=\"/login\" color=\"primary\" fxFlex>Back to Login</a> -->\n                </div>\n            </mat-card-actions>\n          </form>\n          </mat-card>\n</div>\n","import { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}\n","import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject,Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from './../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private currentUserSubject: BehaviorSubject < User > ;\n  public currentUser: Observable < User > ;\n  public user: User;\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.currentUserSubject = new BehaviorSubject < User > (JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  login(username: string, pw: string) {\n    return this.http.post < any > ('https://backend.apartmentsource.com/auth/local', {\n        identifier: username,\n        password: pw\n      })\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  forgotPassword(emailAddress: string) {\n    return this.http.post < any > ('https://backend.apartmentsource.com/auth/forgot-password', {\n        email: emailAddress,\n        url: 'https://backend.apartmentsource.com/admin/plugins/users-permissions/auth/reset-password'\n      })\n      .pipe(map(user => {\n        return user;\n      }));\n  }\n\n  reset(code: string, pw: string, pwcnf: string) {\n    return this.http.post < any > ('https://backend.apartmentsource.com/auth/reset-password', {\n        code,\n        password: pw,\n        passwordConfirmation: pwcnf\n      })\n      .pipe(map(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  createUser(user: User, password) {\n    return this.http.post('https://backend.apartmentsource.com/users', {\n      fullName: user.user.fullName,\n      username: user.user.username,\n      email: user.user.email,\n      blocked: user.user.blocked,\n      password,\n    }).pipe(map(newUser => {\n      return newUser;\n    }));\n  }\n\n  updateUser(user: User, password) {\n    const roleId = user.user.role.name === 'Administrator' ? '5dc49d9292e8e019a58a5f74' : '5dc49d9292e8e019a58a5f75';\n    return this.http.put(`https://backend.apartmentsource.com/users/${user.user.id}`, {\n      fullName: user.user.fullName,\n      username: user.user.username,\n      email: user.user.email,\n      blocked: user.user.blocked,\n      ...(password && password),\n      role: {\n        _id: roleId\n      }\n    }).pipe(map(newUser => {\n      return newUser;\n    }));\n  }\n\n  uploadAvatar(avatar) {\n    let headers = new HttpHeaders();\n    headers = headers.set('Content-Type', 'multipart/form-data');\n    return this.http.post('https://backend.apartmentsource.com/upload', avatar);\n  }\n\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n\n  migrateApp(app) {\n    return this.http.post('https://backend.apartmentsource.com/applications', app).pipe(map(newUser => {\n      return newUser;\n    }));\n  }\n\n}\n","import { AuthService } from './auth.service';\nimport { User } from './../models/user';\nimport { Injectable, NgModule } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SocketService {\n\n  constructor(\n    private socket: Socket,\n    private authService: AuthService\n  ) {\n    // this.connect();\n    // super({ url: 'https://backend.apartmentsource.com', options: {query: {userId: '231231232313'}} });\n   }\n\n  // listenPublic() {\n  //   return this.socket.fromEvent('serverToClient').pipe(map( data => data ));\n  // }\n\n  // listenPrivate() {\n  //   const currentUser = this.authService.currentUserValue;\n  //   if (currentUser) {\n  //     return this.socket.fromEvent(`${currentUser.user.id}`).pipe(map( data => data ));\n  //   }\n  // }\n\n  send(to, method) {\n    const msg = {to, method}\n    this.socket.emit('emit', msg);\n  }\n\n  get() {\n    return this.socket.fromEvent<any>('public').pipe(map( data => {\n      const currentUser = this.authService.currentUserValue.user.id;\n      // console.log(data);\n      if (data.to === 'public' || data.to === currentUser) {\n        return data.method;\n      }\n    }));\n  }\n\n  // getPrivate() {\n  //   const currentUser = this.authService.currentUserValue;\n  //   if (currentUser) {\n  //     return this.socket.fromEvent(`${currentUser.user.id}`).pipe(map( data => console.log(data) ));\n  //   }\n  // }\n\n  // emit(msg) {\n  //   this.socket.emit('clientToServer', msg);\n  // }\n\n  closeConnection() {\n    return this.socket.removeListener('public');\n  }\n}\n","import { SocketService } from './../../services/socket.service';\nimport { User } from './../../models/user';\nimport { Users } from '../users';\nimport { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DataService } from './../../data.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { finalize } from 'rxjs/operators';\nimport * as firebase from 'firebase/app';\nimport { environment } from 'src/environments/environment.prod';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.scss']\n})\nexport class CreateUserComponent implements OnInit {\n\n  @ViewChild('avatarInput') avatarInput;\n  public files: Set<File> = new Set();\n\n  public loading = false;\n  public update = false;\n  public hide = true;\n  public avatar;\n  public task;\n  public downloadURL;\n  public adminChanged = false;\n  public blokedChanged = false;\n  private userData: Users = {\n    avatar: '',\n    id: '',\n    name: '',\n    email: '',\n    isAdmin: null,\n    isActive: true,\n    teamId: null,\n  };\n\n\n  public user: User = {\n    jwt: null,\n    user: {\n      id: null,\n      fullName: '',\n      username: '',\n      email: '',\n      blocked: null,\n      role: {\n        name: '',\n      },\n      avatar: [{\n        url: '',\n      }]\n    }\n  };\n\n  private secondFireBase;\n\n  public createUserForm: FormGroup;\n  public imageSrc;\n\n  constructor(\n    public dialogRef: MatDialogRef < CreateUserComponent > ,\n    private snackBard: MatSnackBar,\n    private router: Router,\n    private dataService: DataService,\n    private afStorage: AngularFireStorage,\n    private authService: AuthService,\n    private socketService: SocketService,\n    @Inject(MAT_DIALOG_DATA) public data: User\n  ) {}\n\n  ngOnInit() {\n    // console.log(this.data.user);\n    if ( this.data && this.data.user) {\n      if ( this.data.user.avatar.length > 0 || !this.data.user.avatar === undefined) {\n        this.imageSrc = `https://backend.apartmentsource.com${this.data.user.avatar['0'].url}`;\n      }\n      this.update = this.data ? true : false;\n      this.user.user.id = this.data ? this.data.user.id : null;\n      this.user.user.fullName = this.data ? this.data.user.fullName : '';\n      this.user.user.email = this.data ? this.data.user.email : '';\n      this.user.user.role.name = this.data.user.role.name;\n      this.user.user.blocked = this.data.user.blocked;\n    }\n\n    const passwordValidators = !this.update ? [Validators.required , Validators.minLength(6)] : [Validators.minLength(6)] ;\n    this.createUserForm = new FormGroup({\n      fullName: new FormControl(this.user.user.fullName, Validators.required),\n      email: new FormControl({value: this.user.user.email, disabled: this.update}, [Validators.required, Validators.email]),\n      password: new FormControl(null, passwordValidators),\n      isAdmin: new FormControl(this.user.user.role.name  === 'Administrator' ? true : false),\n      isBloked: new FormControl(this.user.user.blocked ? true : false),\n    });\n  }\n\n  createUser() {\n    this.loading = true;\n    if (this.update) {\n      this.updateUser();\n      return;\n    }\n\n    // user.user = {} as null;\n    this.user.user.fullName = this.createUserForm.value.fullName;\n    this.user.user.email = this.createUserForm.value.email;\n    this.user.user.username = this.createUserForm.value.email;\n    this.user.user.blocked = this.createUserForm.value.isBloked ? true : false;\n    const password = this.createUserForm.value.password;\n    this.authService.createUser(this.user, password).subscribe(\n      data => {\n        this.user.user.id = data['id'];\n        this.updateUser();\n        // console.log(data);\n      },\n      err => {\n        console.log(err);\n        const erroMsg = err['0'].messages['0'].message;\n        this.snackBard.open(erroMsg, null, {\n            duration: 3000\n        });\n      });\n  }\n\n  updateUser() {\n    this.user.user.role = {\n      name: this.createUserForm.value.isAdmin === true ? 'Administrator' : '',\n    };\n    this.user.user.email = this.createUserForm.value.email;\n    this.user.user.username = this.createUserForm.value.email;\n    this.user.user.fullName = this.createUserForm.value.fullName;\n    const password = this.createUserForm.value.password;\n    this.user.user.blocked = this.createUserForm.value.isBloked ? true : false;\n    this.authService.updateUser(this.user, password).subscribe(\n      data => {\n        if (this.avatar) {\n          this.uploadAvatar(data);\n        } else {\n          this.closeRefresh();\n        }\n      },\n      err => {\n        console.log(err);\n        const erroMsg = err['0'].messages['0'].message;\n        this.snackBard.open(erroMsg, null, {\n            duration: 3000\n        });\n      });\n  }\n\n  uploadAvatar(userData) {\n      const formData = new FormData();\n      formData.append('files', this.avatar, this.avatar.name);\n      formData.append('refId', userData.id);\n      formData.append('ref', 'user');\n      formData.append('source', 'users-permissions');\n      formData.append('field', 'avatar');\n\n      this.authService.uploadAvatar(formData).subscribe( data => {\n        // console.log(data);\n        this.closeRefresh();\n      },\n      error => {\n        console.log(error);\n      });\n  }\n\n  preview(files: FileList): void {\n    if (files) {\n      this.avatar = files.item(0);\n\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.imageSrc = reader.result;\n      };\n      reader.readAsDataURL(this.avatar);\n    }\n  }\n\n  closeRefresh() {\n    // const msgs = [];\n\n    // if (this.adminChanged || this.blokedChanged) {\n    //   msgs.push({ to: this.user.user.id, body: 'refreshUi'});\n    // }\n    // msgs.push({ to: '', body: 'getUsers'});\n\n    // msgs.forEach( msg => {\n    //     this.socketService.emit(msg);\n    //   }\n    // );\n    this.socketService.send('public', 'getUsers');\n    if (this.adminChanged || this.blokedChanged) {\n      this.socketService.send(this.user.user.id, 'logout');\n    }\n    this.loading = false;\n    this.dialogRef.close();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\" class=\"modal-loading\"></mat-progress-bar>\n  <form #avatarUpload (ngSubmit)=\"uploadAvatar($event)\" >\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"image-upload\">\n          <label for=\"file-input\">\n              <img class=\"avatar_md\" [src]=\"imageSrc || '../../../assets/avatar.svg'\" alt=\"your image\" />\n          </label>\n          <input id=\"file-input\" #avatarInput type='file' (change)=\"preview($event.target.files);\"/>\n          <!-- <input hidden id=\"file-input\" type='file' (change)=\"preview($event);\" formControlName=\"avatar\" value=''/> -->\n      </div>\n  </div>\n  <!-- <input type=\"submit\" value=\"upload\"> -->\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <h1 mat-dialog-title>{{ update ? 'Update this User' : 'Create a new User'}}</h1>\n  </div>\n</form>\n<form [formGroup]=\"createUserForm\" (ngSubmit)=\"createUser()\">\n<div mat-dialog-content>\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Name</mat-label>\n        <input matInput formControlName=\"fullName\">\n        <mat-icon matSuffix>name</mat-icon>\n        <mat-error *ngIf=\"createUserForm.controls['email'].errors && createUserForm.controls['email'].errors.required\">Required</mat-error>\n      </mat-form-field>\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Email</mat-label>\n      <input matInput formControlName=\"email\">\n      <mat-icon matSuffix>email</mat-icon>\n\n      <mat-error *ngIf=\"createUserForm.controls['email'].errors && createUserForm.controls['email'].errors.required\">Required</mat-error>\n      <mat-error *ngIf=\"createUserForm.controls['email'].errors && !createUserForm.controls['email'].errors.required\">Please type a valid email address</mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\" color=\"primary\" class=\"full-width\">\n      <mat-label>Password</mat-label>\n      <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\">\n      <a mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n        [attr.aria-pressed]=\"hide\">\n        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n      </a>\n      <mat-hint>Password should be at least 6 characters</mat-hint>\n      <mat-error *ngIf=\"createUserForm.controls['password'].errors && createUserForm.controls['password'].errors.required\">Required</mat-error>\n      <mat-error *ngIf=\"createUserForm.controls['password'].errors && !createUserForm.controls['password'].errors.required\">Password should be at least 6 characters\n        </mat-error>\n    </mat-form-field>\n    <div class=\"full-width\">\n      <section class=\"slide-toggle\">\n        <mat-slide-toggle formControlName=\"isAdmin\" (change)=\"adminChanged = !adminChanged\">\n            Administrator\n        </mat-slide-toggle>\n      </section>\n    </div>\n    <div class=\"full-width\">\n      <section class=\"slide-togglen\">\n        <mat-slide-toggle formControlName=\"isBloked\" (change)=\"blokedChanged = !blokedChanged\" >\n            Blocked\n        </mat-slide-toggle>\n      </section>\n    </div>\n\n</div>\n  <div mat-dialog-actions fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"space-evenly center\" class=\"margin-botton\">\n      <button mat-flat-button color=\"primary\" [disabled]=\"!createUserForm.valid\" fxFlex *ngIf=\"!update\" >Create</button>\n      <button mat-flat-button color=\"primary\" [disabled]=\"!createUserForm.valid\" fxFlex *ngIf=\"update\" >Update</button>\n      <a mat-stroked-button (click)=\"onNoClick()\" color=\"primary\" fxFlex>Cancel</a>\n      <!-- <button mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>Ok</button> -->\n  </div>\n</form>\n<!-- <div class=\"loading-spinner\">\n    <mat-progress-spinner\n    class=\"example-margin\"\n    color=\"white\"\n    mode=\"indeterminate\"\n    value=\"50\">\n    </mat-progress-spinner>\n</div> -->\n","import { SocketService } from './../services/socket.service';\nimport { User } from './../models/user';\nimport { DataService } from './../data.service';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { Users } from './users';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { map, tap, scan, mergeMap, throttleTime } from 'rxjs/operators';\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\nimport { Subscription } from 'rxjs';\nimport { Socket } from 'ngx-socket-io';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit, OnDestroy {\n\n  displayedColumns: string[] = ['fullName', 'email', 'role', 'blocked', 'edit'];\n  dataSource: MatTableDataSource<User>;\n\n  // public users: Users[] = [\n  //   {id: 'ewweewqe', name: 'Marcel Cruz', email: 'marclcruz85@gmail.com', isAdmin: true, isActive: false, teamId: null},\n  // ];\n\n  public users: User[] = [];\n  public loading = false;\n  private queryUsers: Subscription;\n  private realTimeOp;\n\n  private userData: Users = {\n    avatar: '',\n    id: '',\n    name: '',\n    email: '',\n    isAdmin: null,\n    isActive: null,\n    teamId: null,\n  };\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(\n    public dialog: MatDialog,\n    private dataService: DataService,\n    private apollo: Apollo,\n    // private socket: Socket,\n    private socketService: SocketService,\n  ) {\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(this.users);\n  }\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n    this.getUsers();\n\n    this.socketService.get().subscribe(method => {\n      if ( typeof this[method] === 'function' ) {\n        this[method]();\n      }\n    });\n    // this.socketService.listenPrivate().subscribe(data => this.realTimeOps(data));\n    // this.socketService.listenPublic().subscribe(data => this.realTimeOps(data));\n  }\n\n  // realTimeOps(msg) {\n  //   console.log(msg);\n  //   switch (msg) {\n  //     case 'getUsers':\n  //       this.getUsers();\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  addUser(): void {\n    const dialogRef = this.dialog.open(CreateUserComponent, {\n      width: '550px',\n      data: null\n    });\n\n    dialogRef.afterClosed().subscribe();\n  }\n\n  updateUser(user: User): void {\n    const dialogRef = this.dialog.open(CreateUserComponent, {\n      width: '550px',\n      data: {user}\n    });\n\n    dialogRef.afterClosed().subscribe();\n  }\n\n  getUsers() {\n    this.queryUsers = this.apollo.query<any>({\n      query: gql`\n        query {\n          users {\n            id,\n            fullName,\n            username,\n            email,\n            blocked,\n            role {\n              name\n            },\n            avatar {\n              url\n            }\n          }\n        }`,\n        fetchPolicy: 'network-only',\n        errorPolicy: 'all',\n    })\n      .subscribe(({ data, loading }) => {\n        // console.log(data);\n        this.dataSource = new MatTableDataSource<User>(data.users);\n        this.dataSource.paginator = this.paginator;\n        // console.log(this.dataSource);\n        this.queryUsers.unsubscribe();\n      });\n  }\n\n  ngOnDestroy() {\n    this.queryUsers.unsubscribe();\n    this.socketService.closeConnection();\n  }\n}\n","\n<mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\" class=\"loading-top\"></mat-progress-bar>\n<div class=\"content\">\n  <mat-card style=\"padding: 5px 10px; margin-bottom: 10px; border-radius: 0px;\" class=\"mat-elevation-z1\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"10px\">\n    <mat-form-field appearance=\"outline\" class=\"no-padding\">\n      <mat-label>Filter</mat-label>\n      <input matInput (keyup)=\"applyFilter($event.target.value)\">\n    </mat-form-field>\n    <button mat-flat-button class=\"fat-btn bk-gradient\" (click)=\"addUser()\">Add User</button>\n  </div>\n</mat-card>\n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"fullName\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n              <img class=\"avatar_sm\" src=\"https://backend.apartmentsource.com{{row.avatar['0'].url}}\" *ngIf=\"row.avatar.length > 0 || !row.avatar == undefined\" />\n              <img class=\"avatar_sm\" src=\"'../../../../assets/avatar.svg\" *ngIf=\"row.avatar.length == 0\" />\n              {{row.fullName}}\n          </div>\n        </td>\n      </ng-container>\n\n      <!--Email Column -->\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef>Email </th>\n        <td mat-cell *matCellDef=\"let row\" style=\"width: 15%;\">\n          {{row.email}}\n        </td>\n      </ng-container>\n\n      <!-- isAdmin Column -->\n      <ng-container matColumnDef=\"role\">\n        <th mat-header-cell *matHeaderCellDef>Admin </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-checkbox [ngModel]=\"row.role.name == 'Administrator' ? true : false\" color=\"primary\" disabled></mat-checkbox>\n        </td>\n      </ng-container>\n\n            <!-- isAdmin Column -->\n            <ng-container matColumnDef=\"blocked\">\n              <th mat-header-cell *matHeaderCellDef>Blocked </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox [ngModel]=\"row.blocked\" color=\"primary\" disabled></mat-checkbox>\n              </td>\n            </ng-container>\n\n      <!-- isAdmin Column -->\n      <ng-container matColumnDef=\"edit\" class=\"edit-table\">\n        <th mat-header-cell *matHeaderCellDef> </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <button mat-icon-button (click)=\"updateUser(row)\"><mat-icon>edit</mat-icon></button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n      </tr>\n    </table>\n\n    <mat-paginator \n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 25, 100]\" \n      showFirstLastButtons></mat-paginator>\n    <!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator> -->\n  </div>\n\n</div>\n","import { DataService } from './../data.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-whiteboard',\n  templateUrl: './whiteboard.component.html',\n  styleUrls: ['./whiteboard.component.scss']\n})\nexport class WhiteboardComponent implements OnInit {\n\n  public stats = [];\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit() {\n    this.getStats();\n  }\n\n  getStats() {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = ('0' + (today.getMonth() + 1)).slice(-2);\n    const thisMonth = `${year}${month}`;\n    // const thisMonth = '201908';\n\n    this.dataService.getStats(thisMonth).subscribe(res => {\n      this.stats = res;\n      console.log(res);\n    });\n  }\n}\n","<div class=\"content\">\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"20px\">\n  <div *ngFor=\"let item of stats\" fxFlex=\"23\" class=\"card-33\" fxFill>\n    <mat-card class=\"mat-elevation-z4 margin-bottom\">\n      <div fxLayout=\"row\" fxLayoutGap=\"20px\">\n        <div>\n            <img class=\"avatar_lg\" src=\"{{item.statsData.avatar}}\" *ngIf=\"item.statsData.avatar\" />\n            <img class=\"avatar_lg\" src=\"'../../../../assets/avatar.svg\" *ngIf=\"!item.statsData.avatar\" />\n        </div>\n        <div class=\"statistics\">\n          <h3>{{item.createBy}}</h3>\n          <span> Applications: {{item.statsData.app}} </span> <br/>\n          <span>Money In: {{item.statsData.moneyIn}}</span><br/>\n          <span>Approved: {{item.statsData.approved}}</span><br/>\n          <span>Invoice Out: {{item.statsData.invoiceOut}}</span> <br/>\n          <span>Incoice Paid: {{item.statsData.invoicePaid}}</span><br/>\n          <span>Denied: {{item.statsData.denied}}</span><br>\n          <span>Price: {{item.statsData.price}}</span>\n        </div>\n      </div>\n    </mat-card>\n  </div>\n    </div>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyAdEDQSLRncPA2T58YrN1oZ_PMc_VD86VI\",\n    authDomain: \"dashboard-6f7ca.firebaseapp.com\",\n    databaseURL: \"https://dashboard-6f7ca.firebaseio.com\",\n    projectId: \"dashboard-6f7ca\",\n    storageBucket: \"dashboard-6f7ca.appspot.com\",\n    messagingSenderId: \"934901644754\",\n    appId: \"1:934901644754:web:f887d2e4e416a63fa81c0b\"\n\n    // apiKey: \"AIzaSyDREnvrNIk2IXT_5H1Y_NV0GL_Ttd5hPwk\",\n    // authDomain: \"dashboard-29df7.firebaseapp.com\",\n    // databaseURL: \"https://dashboard-29df7.firebaseio.com\",\n    // projectId: \"dashboard-29df7\",\n    // storageBucket: \"dashboard-29df7.appspot.com\",\n    // messagingSenderId: \"458597392670\",\n    // appId: \"1:458597392670:web:108baed77f125e2f\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}